2018-02-19T19:36:26 #rustdoc <logbot> channel logging requested by misdreavus: https://mozilla.logbot.info/rustdoc
2018-02-19T19:36:29 #rustdoc <misdreavus> \o/
2018-02-19T19:36:40 #rustdoc <misdreavus> that's like the fourth time i tried to invite logbot >_>
2018-02-19T20:05:28 #rustdoc <misdreavus> needed an extra space
2018-02-19T20:06:35 #rustdoc <Havvy> misdreavus: Well, the topic does say to "Watch this space!".
2018-02-19T20:06:42 #rustdoc <misdreavus> lol
2018-02-19T20:15:30 #rustdoc <misdreavus> also thanks for rustbot! very helpful, that
2018-02-19T20:15:31 #rustdoc <misdreavus> !!
2018-02-19T20:15:31 #rustdoc <rustbot> !!!
2018-02-19T20:19:43 #rustdoc <Havvy> I feel like this channel should be called #rust-rustdoc
2018-02-19T20:20:11 #rustdoc <Havvy> (Or maybe we just need irc.rust-lang.org)
2018-02-19T20:26:35 #rustdoc <misdreavus> heh
2018-02-19T20:26:46 #rustdoc <misdreavus> i mean, there's #rustc and #cargo, this just follows that pattern
2018-02-19T20:32:48 #rustdoc <imperio> I suggest #tool-using-pulldown-not-hoedown
2018-02-19T20:33:38 #rustdoc <misdreavus> #tool-wot-makes-doc-from-crate
2018-02-19T20:36:10 #rustdoc <imperio> not explicit enough
2018-02-19T20:46:19 #rustdoc <misdreavus> we don't need to celebrate the death of hoedown every second, merely commemmorate it as needed
2018-02-19T20:51:43 #rustdoc * misdreavus . o O ( should i make a team repo, should it be in the rust-docs org, should it be on its own, should it be under my account... )
2018-02-19T20:56:53 #rustdoc <imperio> what for?
2018-02-19T20:59:45 #rustdoc <misdreavus> in case we need a longer-term/longer-form discussion board, like how rust-docs/team is right now
2018-02-19T21:00:26 #rustdoc <misdreavus> also if/when we start up meetings we can have meeting issues and nominate things to talk about
2018-02-20T13:47:04 #rustdoc <SimonSapin> #rust-rust-rustdoc
2018-02-20T13:53:21 #rustdoc <imperio> SimonSapin: you're scaring me
2018-02-20T20:42:21 #rustdoc <Havvy> !gh 48094
2018-02-20T20:42:21 #rustdoc <rustbot> [Issue 48094] <open> Provide a way to change path of common css/js paths in documentations <https://github.com/rust-lang/rust/issues/48094>
2018-02-20T20:42:24 #rustdoc <steveklabnik> Havvy: NO :p
2018-02-20T20:42:28 #rustdoc <steveklabnik> not EVERYONE
2018-02-20T20:42:29 #rustdoc <steveklabnik> lolol i kid
2018-02-20T20:42:37 #rustdoc <Havvy> Well, no alercah.
2018-02-20T20:42:41 #rustdoc <imperio> I'm able to make people move
2018-02-20T20:43:10 #rustdoc <imperio> so about this issue
2018-02-20T20:43:20 #rustdoc <imperio> which is a huge issue for the moment for docs.rs
2018-02-20T20:44:38 #rustdoc <misdreavus> i already put my suggestion in the issue thread
2018-02-20T20:44:49 #rustdoc <steveklabnik> i don't have strong opinions
2018-02-20T20:45:36 #rustdoc <imperio> misdreavus: I'm not sure it'd work for docs.rs
2018-02-20T20:45:46 #rustdoc <imperio> I like your idea but we need confirmation first
2018-02-20T20:46:01 #rustdoc <misdreavus> the reason i suggest doing the whole folder at once is because we're not that stable with the files in there
2018-02-20T20:46:10 #rustdoc <misdreavus> not least because we wanted to add more themes
2018-02-20T20:46:44 #rustdoc <imperio> true
2018-02-20T20:47:04 #rustdoc <imperio> I was thinking about just adding a specific text at the end of the file
2018-02-20T20:47:50 #rustdoc <misdreavus> like what?
2018-02-20T20:47:56 #rustdoc * misdreavus fails to see the connection
2018-02-20T20:48:12 #rustdoc <imperio> rustdoc --extra-text="v239429" and then all files will end with it
2018-02-20T20:48:23 #rustdoc <imperio> example: rustdoc-v239429.css
2018-02-20T20:48:40 #rustdoc <misdreavus> oh!
2018-02-20T20:49:12 #rustdoc <misdreavus> i'm misunderanding the issue, i think
2018-02-20T20:50:09 #rustdoc <imperio> misdreavus: the problem is that docs.rs generates specific versions of files
2018-02-20T20:50:17 #rustdoc <imperio> and then replace links
2018-02-20T20:50:21 #rustdoc <imperio> which isn't possible anymore
2018-02-20T20:50:43 #rustdoc <misdreavus> because the theme picker wants to load the theme css files by name?
2018-02-20T20:53:50 #rustdoc <imperio> yup yup
2018-02-20T20:54:11 #rustdoc <imperio> they're currently blocked on the last non-theme picker version
2018-02-20T20:56:42 #rustdoc <misdreavus> so, lemme just drop some links, because i'm being slow and want to point out every place this touches
2018-02-20T20:57:00 #rustdoc <imperio> sure
2018-02-20T20:57:08 #rustdoc <misdreavus> currently all the theme css files are loaded in each page's head https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/layout.rs#L50-L55
2018-02-20T20:57:35 #rustdoc <misdreavus> a theme is switched by just changing the filename of some other css file and stuffing that up front https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/static/storage.js#L32
2018-02-20T20:58:15 #rustdoc <imperio> yep
2018-02-20T20:58:23 #rustdoc <imperio> so you can't just change a filename
2018-02-20T20:58:27 #rustdoc <imperio> it's far more complicated
2018-02-20T20:58:36 #rustdoc <misdreavus> the theme picker itself is loaded by a list in a dynamically-set js file also created at render time https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/render.rs#L749-L774
2018-02-20T20:58:45 #rustdoc <misdreavus> (the theme files are also copied in farther up)
2018-02-20T20:59:06 #rustdoc <misdreavus> what is docs.rs's current setup for caching files?
2018-02-20T20:59:15 #rustdoc <imperio> yes but we can't just change the filename because it'd be strange to have theme name called "dark-3484573"
2018-02-20T20:59:41 #rustdoc <misdreavus> the more i think about it, the more i like just changing the static-files directory
2018-02-20T21:00:06 #rustdoc <imperio> I agree with you
2018-02-20T21:00:13 #rustdoc <imperio> we just need to check with onur
2018-02-20T21:00:33 #rustdoc <misdreavus> unless what they're doing is changing the filename too, in which case this is getting weird
2018-02-20T21:00:45 #rustdoc <imperio> they change the filename currently
2018-02-20T21:00:52 #rustdoc <misdreavus> hmm
2018-02-20T21:00:55 #rustdoc <Havvy> (ping me when done)
2018-02-20T21:04:13 #rustdoc <misdreavus> imperio: so i think the path forward is to pitch our different ideas (individual file rename, custom suffix, remapped static files dir) to onur and see what they think
2018-02-20T21:04:48 #rustdoc <imperio> agreed
2018-02-20T21:04:56 #rustdoc <imperio> I commented this one the issue :)
2018-02-20T21:05:23 #rustdoc <misdreavus> cool
2018-02-20T21:05:48 #rustdoc <imperio> *on
2018-02-20T21:06:05 #rustdoc <misdreavus> Havvy: seems the issue discussion is done, what's up?
2018-02-20T21:06:09 #rustdoc <Havvy> !gh 48383
2018-02-20T21:06:09 #rustdoc <rustbot> [Issue 48383] <open> [Rustdoc] Collapse surrounding newlines around hidden code in examples <https://github.com/rust-lang/rust/issues/48383>
2018-02-20T21:06:31 #rustdoc <Havvy> I opened a new issue because I keep forgetting to add the `#` myself, and I cannot be the only one.
2018-02-20T21:06:46 #rustdoc <imperio> wut?
2018-02-20T21:06:52 #rustdoc <imperio> ooooh
2018-02-20T21:06:54 #rustdoc <imperio> I see
2018-02-20T21:07:10 #rustdoc <misdreavus> ooh, nice
2018-02-20T21:08:01 #rustdoc <imperio> indeed
2018-02-20T21:08:34 #rustdoc <misdreavus> also for taking out blank lines at the beginning and end, i keep getting annoyed at that myself
2018-02-21T16:25:48 #rustdoc <misdreavus> $ rm -r src/rt/hoedown
2018-02-21T16:25:51 #rustdoc <misdreavus> feelsgoodman
2018-02-21T16:30:03 #rustdoc <steveklabnik> :D
2018-02-21T16:30:24 #rustdoc <misdreavus> ...OTOH, it immediately got put back because i need to write something for beta >_>
2018-02-21T16:30:34 #rustdoc <steveklabnik> lol
2018-02-21T16:32:37 #rustdoc <imperio> haha
2018-02-21T16:32:53 #rustdoc <imperio> have fun
2018-02-21T16:33:03 #rustdoc * misdreavus handwave
2018-02-21T16:33:09 #rustdoc <imperio> you'll discover what doing something useless feels like if you haven't yet :)
2018-02-21T16:33:39 #rustdoc <misdreavus> ¯\_(ツ)_/¯
2018-02-21T16:34:04 #rustdoc <misdreavus> i get another PR to my name, and i get to close an issue tagged with "regression"
2018-02-21T16:34:16 #rustdoc <misdreavus> (even if i was the one to put the "regression" tag on there in the first place >_>)
2018-02-21T16:34:45 #rustdoc <imperio> hum ok
2018-02-21T16:36:18 #rustdoc <misdreavus> i don't care that the exercise is completely academic, it's an ice, it's on beta, i'm closin it
2018-02-21T16:36:22 #rustdoc <misdreavus> **closing
2018-02-21T19:17:28 #rustdoc <misdreavus> ;_; llvm, you're killing me
2018-02-21T22:18:54 #rustdoc <misdreavus> !gh 48410
2018-02-21T22:18:54 #rustdoc <rustbot> [PR 48410] <open> [beta] properly run doctests in standalone markdown files with pulldown <https://github.com/rust-lang/rust/pull/48410>
2018-02-21T22:19:03 #rustdoc <misdreavus> in which i write way more for the PR description than the PR itself
2018-02-21T22:19:26 #rustdoc <misdreavus> imperio: is there a reason you grouped tests using `generate_name_beginning` rather than just the filename?
2018-02-21T22:20:04 #rustdoc <imperio> ?
2018-02-21T22:20:18 #rustdoc <imperio> on 48410 you mean?
2018-02-21T22:20:54 #rustdoc <misdreavus> i mean, when you initially wrote the "old tests" check
2018-02-21T22:20:58 #rustdoc <misdreavus> way back last year
2018-02-21T22:21:04 #rustdoc <imperio> O.O
2018-02-21T22:21:09 #rustdoc <imperio> I need to see the code haha
2018-02-21T22:21:34 #rustdoc <misdreavus> the change for this PR is to change what the key of a hashmap is
2018-02-21T22:21:49 #rustdoc <misdreavus> to bypass the fact that it's different between the renderers
2018-02-21T22:22:48 #rustdoc <imperio> like I said: no code, no memories
2018-02-21T22:22:52 #rustdoc <misdreavus> heh
2018-02-21T22:23:07 #rustdoc <misdreavus> momend
2018-02-21T22:23:09 #rustdoc <misdreavus> **moment
2018-02-21T22:27:21 #rustdoc <misdreavus> !gh 41405
2018-02-21T22:27:21 #rustdoc <rustbot> [PR 41405] <merged> Fix line display for hoedown <https://github.com/rust-lang/rust/pull/41405>
2018-02-21T22:28:16 #rustdoc <misdreavus> hmm, let me check the test in that linked issue
2018-02-21T22:29:04 #rustdoc <misdreavus> phew, that one works now
2018-02-21T22:29:22 #rustdoc <imperio> funny thing: I'm pretty sure I've been asked to write this function
2018-02-21T22:29:34 #rustdoc <imperio> a story about "what happens in case you don't have filename"
2018-02-21T22:30:23 #rustdoc * misdreavus . o O ( ...then it becomes "<anon>" >_> )
2018-02-21T22:30:43 #rustdoc <misdreavus> it's still a HashMap<FileName, Vec<String>> so all the tests are still accounted for
2018-02-21T22:31:09 #rustdoc <imperio> honestly I don't remember
2018-02-21T22:31:11 #rustdoc <imperio> sorry :-/
2018-02-21T22:31:30 #rustdoc <imperio> but be happy: I added the root-path option :)
2018-02-21T22:33:40 #rustdoc <misdreavus> no worries
2018-02-21T22:34:24 #rustdoc <misdreavus> also, aww, this was before i was officially on the team :3
2018-02-22T15:02:19 #rustdoc <misdreavus> a rollup just landed in my inbox, carrying a couple cool prs
2018-02-22T15:02:20 #rustdoc <misdreavus> !gh 48335
2018-02-22T15:02:21 #rustdoc <rustbot> [PR 48335] <merged> Implement implied shortcut links for intra-rustdoc-links <https://github.com/rust-lang/rust/pull/48335>
2018-02-22T15:02:27 #rustdoc <misdreavus> !gh 47833
2018-02-22T15:02:28 #rustdoc <rustbot> [PR 47833] <merged> Generate documentation for auto-trait impls <https://github.com/rust-lang/rust/pull/47833>
2018-02-22T15:02:48 #rustdoc <imperio> yep
2018-02-22T15:02:51 #rustdoc <imperio> a rollup of mine
2018-02-22T15:02:57 #rustdoc <misdreavus> lol nice
2018-02-22T20:15:22 #rustdoc <misdreavus> something that struck me as off when writing the test for {!gh 48415} is that apparently applying #[doc(inline)] to a glob import doesn't work?
2018-02-22T20:15:22 #rustdoc <rustbot> [PR 48415] <open> rustdoc: don't crash when an external trait's docs needs to import another trait <https://github.com/rust-lang/rust/pull/48415>
2018-02-22T20:19:22 #rustdoc <misdreavus> whenever i ran rustdoc on it, it would just spit the glob import right back out >_>
2018-02-22T22:37:34 #rustdoc <imperio> misdreavus: I opened the root-path pr
2018-02-22T22:37:44 #rustdoc <imperio> I'm just very unsure about bugs
2018-02-22T22:37:55 #rustdoc <imperio> I'm pretty sure I didn't see something but can't find what...
2018-02-22T22:38:23 #rustdoc <imperio> ah found one
2018-02-22T22:40:30 #rustdoc <misdreavus> okay, so what's the model now? how is this intended to be used?
2018-02-22T22:43:05 #rustdoc <misdreavus> how does this interact with --output?
2018-02-22T22:44:50 #rustdoc <imperio> output is global
2018-02-22T22:44:54 #rustdoc <imperio> root-path is inside it
2018-02-22T22:45:19 #rustdoc <misdreavus> so it's --root-path is relative to --output?
2018-02-22T22:45:26 #rustdoc <misdreavus> s/it's//
2018-02-22T22:47:54 #rustdoc <imperio> yes
2018-02-22T22:49:56 #rustdoc <misdreavus> should probably mention that in the description where the flag is defined
2018-02-22T22:52:31 #rustdoc <imperio> ok, fixed the issue
2018-02-23T08:38:30 #rustdoc <WindowsBunny> oh, a new channel
2018-02-23T14:45:17 #rustdoc <misdreavus> WindowsBunny: welcome!
2018-02-23T14:48:02 #rustdoc * WindowsBunny gnaws on misdreavus
2018-02-23T14:48:45 #rustdoc <imperio> it's getting crowded in here :o
2018-02-23T15:07:47 #rustdoc <PeterRabbit> imperio: How can it be crowded?
2018-02-23T15:09:57 #rustdoc <misdreavus> lol
2018-02-23T15:10:10 #rustdoc <imperio> by having more people of course
2018-02-23T15:10:51 #rustdoc <imperio> PeterRabbit: WindowsBunny: since you invade this place as well, should we talk about my winapi PR as well? :)
2018-02-23T15:10:59 #rustdoc <PeterRabbit> imperio: no u
2018-02-23T22:34:07 #rustdoc <Havvy> misdreavus: Have you thought about how Rustdoc might show #[must_use] on fns?
2018-02-23T22:34:25 #rustdoc <misdreavus> hmm
2018-02-23T22:34:42 #rustdoc <misdreavus> for structs it just spits the attribute above the rendered struct up top
2018-02-23T22:34:47 #rustdoc <misdreavus> maybe it could do the same for functions
2018-02-23T22:35:32 #rustdoc <Havvy> Should I file an issue, or do you want to?
2018-02-23T22:35:54 #rustdoc <misdreavus> you can do it
2018-02-23T22:36:10 #rustdoc <misdreavus> can associated functions get #[must_use] as well?
2018-02-23T22:36:44 #rustdoc <misdreavus> they don't get the same rendered view as bare functions, so they may need something special
2018-02-23T22:42:40 #rustdoc <Havvy> Yes, but for trait impls, only if the function declaration has #[must_use]
2018-02-23T22:42:53 #rustdoc <Havvy> https://play.rust-lang.org/?gist=a0ff6bc627bbd8db5dc57d119f8425b3&version=nightly
2018-02-23T22:44:00 #rustdoc <misdreavus> oh that's fun
2018-02-23T22:44:55 #rustdoc <Havvy> I think I'll file an issue on that, since element of least surprise would be that I get the warning there.
2018-02-23T22:47:01 #rustdoc <misdreavus> yeah
2018-02-23T22:47:26 #rustdoc <Havvy> So that's two issues to file now.
2018-02-23T22:48:28 #rustdoc <Havvy> Todo list right now: File two more issues. Write an RFC. Review alercah's work. Update reference description of trait bounds and trait objects for trailing +.
2018-02-23T22:48:57 #rustdoc <misdreavus> dang
2018-02-23T22:51:19 #rustdoc <Havvy> {!gh 48485} for tagging
2018-02-23T22:51:19 #rustdoc <rustbot> [Issue 48485] <open> [Rustdoc] Show #[must_use] on functions <https://github.com/rust-lang/rust/issues/48485>
2018-02-23T22:51:43 #rustdoc <Havvy> misdreavus: I think I'm putting the RFC off for another day again though. I gotta party to leave for in a few hours.
2018-02-23T22:51:58 #rustdoc <misdreavus> nice
2018-02-23T22:52:22 #rustdoc <misdreavus> omg all the labels have descriptions now
2018-02-23T22:52:48 #rustdoc <Havvy> Ohh, somebody got around to it. Nice.
2018-02-23T22:53:11 #rustdoc <Havvy> Github added that functionality sometime in the past week. I need to do it for the reference too. *adds a todo item*
2018-02-23T22:53:21 #rustdoc <misdreavus> one more onto the pile, lol
2018-02-23T23:42:26 #rustdoc <Havvy> Oh yes, and I have to address both Alexis's feedback on the type layout changes.
2018-02-24T00:24:30 #rustdoc <imperio> misdreavus: updated the rustdoc fix pr
2018-02-24T00:24:37 #rustdoc <imperio> tell me if you like the new comment :)
2018-02-24T01:55:10 #rustdoc <Havvy> Psst: Don't forget to update your rustacean's profile to add this channel.
2018-02-24T02:43:49 #rustdoc * WindowsBunny wonders when rustdoc will be taught to create less files
2018-02-24T05:53:00 #rustdoc <steveklabnik> it's complicated
2018-02-24T05:53:08 #rustdoc <steveklabnik> people pushed back on that hard :/
2018-02-24T05:53:12 #rustdoc <steveklabnik> we'll see
2018-02-26T17:23:48 #rustdoc <imperio> misdreavus: I was that the rustconf 2018 CFP was open
2018-02-26T17:23:59 #rustdoc <imperio> might be nice to propose a rustdoc workshop maybe no?
2018-02-26T17:24:04 #rustdoc <misdreavus> ooh
2018-02-26T17:24:35 #rustdoc <imperio> I'll take that for a "I'll think about it" :)
2018-02-26T17:25:37 #rustdoc <misdreavus> i don't think rustconf does publicly-proposed workshops per se, but a talk might be cool
2018-02-26T17:25:54 #rustdoc <imperio> a talk about rustdoc?
2018-02-26T17:26:01 #rustdoc <imperio> would be a first I think haha
2018-02-26T17:26:08 #rustdoc <imperio> can't wait to see the video
2018-02-26T17:26:55 #rustdoc <misdreavus> possible topics include "a sordid history of rustdoc", "how the ~~sausage~~ docs get made", "things rustdoc did that you might not know about"
2018-02-26T17:27:05 #rustdoc <misdreavus> and that's just off the top of my head
2018-02-26T17:27:44 #rustdoc <imperio> pick one and go present it!
2018-02-26T17:31:08 #rustdoc <misdreavus> Manishearth: ^^ what's the most appealing from that list?
2018-02-26T17:31:44 #rustdoc <Manishearth> misdreavus: we do have workshops
2018-02-26T17:32:01 #rustdoc <misdreavus> oh yeah, i see that in the faq
2018-02-26T17:32:09 #rustdoc <Manishearth> misdreavus: however we're not yet sure what we're going to do there, we likely have one or two slots
2018-02-26T17:32:25 #rustdoc <misdreavus> yeah, i just assumed they would be like the classes from last year
2018-02-26T17:32:45 #rustdoc <misdreavus> and i'm not sure if i want to lead a hacking session like that >_>
2018-02-26T17:34:21 #rustdoc <misdreavus> or, should i submit all three as talk ideas, and let the judges fight them out :P
2018-02-26T17:39:28 #rustdoc <Manishearth> misdreavus: well, so we are doing those trainings, but we may have space for more
2018-02-26T17:39:38 #rustdoc <Manishearth> misdreavus: but a rustdoc talk may be fun idk
2018-02-26T21:31:14 #rustdoc <Havvy> Given the potential audience, the things rustdoc does that aren't well known would be best, I think.
2018-02-26T21:32:17 #rustdoc <imperio> hidden rustdoc tips
2018-02-26T21:32:30 #rustdoc <imperio> "most of them have been written because we were bored"
2018-02-26T21:32:35 #rustdoc <Havvy> Be a good chance to point out the existence of the Rustdoc book too.
2018-02-26T21:32:49 #rustdoc <imperio> I should add a --pony option to have poney images added
2018-02-26T21:34:04 #rustdoc <Havvy> --pwnies
2018-02-26T21:34:24 #rustdoc <Havvy> !crate pwnies
2018-02-26T21:34:24 #rustdoc <rustbot> pwnies (0.0.14) - 🦄🦄🦄🦄🦄🦄🦄🦄🦄🦄 -> https://crates.io/crates/pwnies <https://docs.rs/pwnies>
2018-02-26T22:06:24 #rustdoc <imperio> I already know this one :)
2018-02-26T22:58:21 #rustdoc <misdreavus> imperio: "oh yeah, this was was a joke originally, but everyone liked it"
2018-02-26T22:58:44 #rustdoc <misdreavus> "i didn't expect this one to land, but you can use it today"
2018-02-26T23:00:28 #rustdoc <misdreavus> actually that would be really cool, an insider's view into the decisions that go into everyone's favorite doc tool
2018-02-26T23:00:54 #rustdoc <misdreavus> and by that i mean "one of us got annoyed enough to write it, and the other didn't stop them"
2018-02-26T23:23:20 #rustdoc <imperio> haha
2018-02-26T23:23:33 #rustdoc <imperio> misdreavus: btw, can you take a look at https://github.com/rust-lang/rust/pull/48381 when you have time please?
2018-02-26T23:23:47 #rustdoc <misdreavus> can do
2018-02-26T23:23:51 #rustdoc <imperio> it's a bug fix so it'd be nice to get merged sooner rather than later
2018-02-26T23:23:54 #rustdoc <imperio> thanks! :)
2018-02-26T23:25:01 #rustdoc <imperio> I just that'd be nice to actually provide an additional logo image
2018-02-26T23:25:16 #rustdoc <imperio> I'll open an issue
2018-02-26T23:28:04 #rustdoc <imperio> and done
2018-02-26T23:28:08 #rustdoc <imperio> now I'm going to sleep
2018-03-04T21:37:15 #rustdoc <misdreavus> steveklabnik: imperio: can y'all PM me (or nrc, i guess) preferred email addresses for a "rustdoc team" email alias?
2018-03-04T21:37:30 #rustdoc <misdreavus> ollie27: is the email i grabbed for you a good one for a "rustdoc team" email group?
2018-03-04T21:48:12 #rustdoc <ollie27> yeah, that address is fine for that
2018-03-05T09:06:48 #rustdoc <onur> Hi guys, can someone help me to fix rustdoc sidebar in docs.rs
2018-03-05T09:07:10 #rustdoc <onur> it was overlapping to navigation, I set it's z-index to -1 and now it's not clickable
2018-03-05T09:07:20 #rustdoc <onur> I have no idea how to fix this, you can see in here: https://docs.rs/acme-client/0.5.2/acme_client/
2018-03-05T14:42:41 #rustdoc <misdreavus> onur: change your `padding-top` rule to `margin-top` instead, and remove the z-index rule?
2018-03-05T14:42:57 #rustdoc <misdreavus> that worked for me just now, at least
2018-03-05T14:52:20 #rustdoc <onur> misdreavus: I tried that but when user scrolls down its causing some gap like this: https://i.imgur.com/v1R7BMx.png
2018-03-05T14:53:35 #rustdoc <misdreavus> oh, huh
2018-03-05T14:54:58 #rustdoc <onur> misdreavus: try a doc built in newest rustdoc like this crate: https://docs.rs/acme-client/0.5.2/acme_client/
2018-03-05T14:55:10 #rustdoc <misdreavus> yeah, that's what i'm messing with
2018-03-05T14:55:44 #rustdoc <misdreavus> i didn't think to scroll down, because i forgot the sidebar had a fixed position
2018-03-05T14:58:44 #rustdoc <imperio> an issue on css?
2018-03-05T14:58:49 #rustdoc <imperio> that's an issue for me :D
2018-03-05T14:59:16 #rustdoc <onur> imperio: I have an issue for you actually
2018-03-05T14:59:22 #rustdoc <imperio> another one? :o
2018-03-05T14:59:50 #rustdoc <onur> https://github.com/rust-lang/rust/issues/48733
2018-03-05T14:59:52 #rustdoc <onur> this one
2018-03-05T15:00:26 #rustdoc <onur> you can see live in here: https://docs.rs/acme-client/0.5.2/acme_client/helper/fn.b64.html
2018-03-05T15:01:33 #rustdoc <imperio> oh nice one
2018-03-05T15:02:14 #rustdoc <imperio> onur: I don't get an error though
2018-03-05T15:02:17 #rustdoc <imperio> is it normal?
2018-03-05T15:02:22 #rustdoc <imperio> however the sidebar is empty
2018-03-05T15:02:25 #rustdoc <onur> yea I don't get an error in docs.rs also
2018-03-05T15:04:59 #rustdoc <imperio> that's really weird
2018-03-05T15:05:18 #rustdoc <onur> I also don't get an error in locally built acme-client
2018-03-05T15:05:25 #rustdoc <onur> but getting error in rand crate
2018-03-05T15:05:33 #rustdoc <imperio> huuuum
2018-03-05T15:06:31 #rustdoc <imperio> onur: <script defer="" src="sidebar-items.js"></script>
2018-03-05T15:06:35 #rustdoc <imperio> you have this on your page
2018-03-05T15:06:41 #rustdoc <imperio> I assume this isn't the correct path
2018-03-05T15:07:10 #rustdoc <onur> no its <script defer src="../search-index.js"></script>
2018-03-05T15:07:14 #rustdoc <onur> I think problem is
2018-03-05T15:07:19 #rustdoc <onur> its getting loaded after main.js
2018-03-05T15:08:10 #rustdoc <imperio> well anyway, I'll write the fix once I'm back home
2018-03-05T15:56:29 #rustdoc <misdreavus> imperio: wrote some comments on the resource-suffix pr
2018-03-05T15:56:44 #rustdoc <imperio> misdreavus: thanks!
2018-03-05T15:57:07 #rustdoc <misdreavus> looks good, i like how the user-facing theme names aren't changed by the suffix
2018-03-05T15:57:23 #rustdoc <misdreavus> just some questions and a suggestion for the description of the CLI flag
2018-03-05T16:00:37 #rustdoc <imperio> sure sure
2018-03-05T16:00:44 #rustdoc <imperio> I'll come back to it this evening too :)
2018-03-05T16:15:34 #rustdoc <misdreavus> <3
2018-03-05T16:33:17 #rustdoc <onur> misdreavus, I temporarily fixed it by making docs.rs navigation position fixed
2018-03-05T17:03:56 #rustdoc <imperio> onur: I'm very worried about what you just said
2018-03-05T17:04:05 #rustdoc <imperio> "just"
2018-03-05T17:09:54 #rustdoc <misdreavus> imperio: the sidebar on https://docs.rs/acme-client/0.5.2/acme_client/ (and other crates build with the same docs.rs mod) would either overlap the top navigation, or (with z-index = -1) become unresponsive, unable to be clicked
2018-03-05T17:10:38 #rustdoc <misdreavus> though now the z-index got reset, and now the top navigation is now fixed, right alongside the sidebar
2018-03-05T17:12:31 #rustdoc <misdreavus> it's this lovely frameset navigation
2018-03-05T18:01:27 #rustdoc <misdreavus> i'm writing up a patch for rustdoc so that https://doc.rust-lang.org/nightly/std/arch/ can get per-item banners that say something like "this is only available with CPU feature 'thing'" and i'm wondering the best way to present it
2018-03-05T18:03:33 #rustdoc <misdreavus> i also think it would be nice to extend stdsimd to use doc(cfg) and extend rustdoc's handling of that so that more target arches get documented (or at least get a banner stating which arch they're for)
2018-03-05T18:09:54 #rustdoc <imperio> onur: fixed should be good I suppose
2018-03-05T18:11:56 #rustdoc <misdreavus> i wonder whether i can just shove #[target_feature] attributes into the doc(cfg) set...
2018-03-05T18:11:59 #rustdoc * misdreavus schemes
2018-03-05T18:17:04 #rustdoc <imperio> misdreavus: that's... good and bad at the same time haha
2018-03-05T18:17:41 #rustdoc <misdreavus> imperio: i mean, they're just weird cfg attributes, from the perspective of the user
2018-03-05T18:17:54 #rustdoc <imperio> that was my point yes
2018-03-05T18:18:01 #rustdoc <misdreavus> lol
2018-03-05T18:18:11 #rustdoc <imperio> for advanced rust users it's just useful noise
2018-03-05T18:18:17 #rustdoc <misdreavus> what do you mean?
2018-03-05T18:18:24 #rustdoc <imperio> for beginners it's "what the fuck is that" noise
2018-03-05T18:18:39 #rustdoc <misdreavus> i want to be able to explain what features a given std::arch function needs
2018-03-05T18:18:50 #rustdoc <imperio> makes sense
2018-03-05T18:19:09 #rustdoc <imperio> I just don't know if just printing out its attribute will help...
2018-03-05T18:19:11 #rustdoc <misdreavus> without requiring the maintainers of stdsimd to manually annotate every function with something that's technically already there
2018-03-05T18:19:21 #rustdoc <misdreavus> no no, i want to print it like the windows/linux banners
2018-03-05T18:19:26 #rustdoc <imperio> ah
2018-03-05T18:19:29 #rustdoc <imperio> like that it's fine
2018-03-05T18:19:40 #rustdoc <misdreavus> the little blue "this will only work on windows" banners that already exist
2018-03-05T18:20:01 #rustdoc <misdreavus> i'd just need to add extra handling to make them also deal with target_feature/target_arch
2018-03-05T18:20:28 #rustdoc <imperio> "this will only work on windows and 64 bits architecture"
2018-03-05T18:20:30 #rustdoc <imperio> yeay
2018-03-05T18:20:37 #rustdoc <imperio> don't forget to bold things :)
2018-03-05T18:21:06 #rustdoc <misdreavus> o7
2018-03-05T18:22:01 #rustdoc <misdreavus> at some point i need to learn that i don't need to resync my fork every time i want to start a new branch >_>
2018-03-05T18:23:51 #rustdoc <imperio> I do it everytime
2018-03-05T18:24:09 #rustdoc <imperio> but right now, I'm cursing people for the rustc --explain come back
2018-03-05T18:24:14 #rustdoc <imperio> *comeback
2018-03-05T18:24:21 #rustdoc <misdreavus> lol
2018-03-05T18:25:53 #rustdoc <imperio> I mean
2018-03-05T18:26:10 #rustdoc <imperio> I don't have much time and they keep asking for things which take a lot of time in addition to the pr
2018-03-05T18:26:25 #rustdoc <misdreavus> oh dear
2018-03-05T18:26:30 #rustdoc <imperio> *sure* I'd love to revert but when I tried it was armaggedong because hundreds of new commits are there
2018-03-05T18:26:41 #rustdoc <imperio> damn it
2018-03-05T18:27:49 #rustdoc <misdreavus> i resync my fork every time, but it feels like i always need to rebuild from bootstrap, and my server is so underpowered it takes too long >_>
2018-03-05T18:28:09 #rustdoc <misdreavus> it feels like an impediment to contribution :/
2018-03-05T18:28:37 #rustdoc <imperio> you contribute, why asking more? ;)
2018-03-05T18:28:42 #rustdoc <misdreavus> >_>
2018-03-05T18:29:07 #rustdoc <misdreavus> also, since i have two different working trees (one for my own PRs and one for other people's), i need to rebuild each independently
2018-03-05T18:29:35 #rustdoc <imperio> oh dear
2018-03-05T18:29:44 #rustdoc <misdreavus> the working trees idea worked out when i had a long-running pr in progress, but now that i don't really have anything in flight it just feels like a speed bump
2018-03-05T18:29:57 #rustdoc <misdreavus> i dunno
2018-03-05T18:30:18 #rustdoc <misdreavus> i guess having the different directories (and tmux windows) gives it a different context, which is itself kinda nice
2018-03-05T18:43:09 #rustdoc <imperio> damn it
2018-03-05T18:43:22 #rustdoc <imperio> I should have be more careful when reviewing the collapse pr
2018-03-05T18:43:33 #rustdoc <misdreavus> ?
2018-03-05T18:43:36 #rustdoc <imperio> now we have § being generated in shitty places
2018-03-05T18:43:43 #rustdoc <imperio> (on titles)
2018-03-05T18:45:20 #rustdoc <imperio> fixing it...
2018-03-05T18:46:29 #rustdoc <misdreavus> oh, whoops
2018-03-05T18:47:15 #rustdoc <imperio> ah and sometimes it doesn't collapse anything
2018-03-05T18:47:21 #rustdoc <imperio> but still has the "[+]"
2018-03-05T18:47:22 #rustdoc <imperio> damn...
2018-03-05T18:47:33 #rustdoc <imperio> I feel bad for now seeing all those issues...
2018-03-05T18:47:38 #rustdoc <misdreavus> :/
2018-03-05T18:48:20 #rustdoc <imperio> ok, fixed the first one
2018-03-05T18:48:35 #rustdoc <imperio> misdreavus: I'll need a super quick review to get a super high priority merge
2018-03-05T18:48:45 #rustdoc <misdreavus> o7
2018-03-05T18:49:07 #rustdoc <imperio> o7
2018-03-05T19:03:38 #rustdoc <imperio> misdreavus: bingo
2018-03-05T19:03:40 #rustdoc <imperio> all done
2018-03-05T19:03:41 #rustdoc <imperio> mouhahaha
2018-03-05T19:05:28 #rustdoc <imperio> misdreavus: do you have a trait in mind with just an item and no methods?
2018-03-05T19:05:45 #rustdoc <imperio> I can write one though
2018-03-05T19:05:47 #rustdoc <imperio> silly me
2018-03-05T19:05:50 #rustdoc <misdreavus> i can't think of any offhand o_O
2018-03-05T19:14:56 #rustdoc <imperio> the issue now is that we can't add tests to prevent new regressions...
2018-03-05T19:18:18 #rustdoc <imperio> misdreavus: https://github.com/rust-lang/rust/pull/48755
2018-03-05T19:18:23 #rustdoc <imperio> luckily, it's only very small fixes
2018-03-05T19:19:04 #rustdoc <imperio> but even though, they're quite important
2018-03-05T19:21:06 #rustdoc <misdreavus> reading
2018-03-05T19:24:50 #rustdoc <misdreavus> imperio: left a comment
2018-03-05T19:25:29 #rustdoc <imperio> misdreavus: in which case?
2018-03-05T19:25:58 #rustdoc <misdreavus> is that block the only place that docblocks get a toggle?
2018-03-05T19:26:15 #rustdoc <imperio> I didn't think at checking others
2018-03-05T19:26:19 #rustdoc <imperio> I'll do after dinner
2018-03-05T19:26:53 #rustdoc <misdreavus> the way you combined the conditions, it looks like all the places that *used* to get docblock fold toggles (all the hand-written documentation) won't get toggles any more
2018-03-05T20:11:55 #rustdoc <steveklabnik> misdreavus: sorry been away a bit, did this get sorted?
2018-03-05T20:12:08 #rustdoc <misdreavus> which?
2018-03-05T20:12:29 #rustdoc <steveklabnik> email address for rustdoc team
2018-03-05T20:12:37 #rustdoc <misdreavus> oh, i'd still like that please
2018-03-05T20:15:23 #rustdoc <steveklabnik> it was a little clear what you wanted, exactly
2018-03-05T20:15:27 #rustdoc <steveklabnik> for me to make up a name for the alias?
2018-03-05T20:15:35 #rustdoc <steveklabnik> i would assume rustdoc-team@
2018-03-05T20:15:41 #rustdoc <misdreavus> no, i just want your email
2018-03-05T20:15:46 #rustdoc <misdreavus> nrc is going to set up the alias
2018-03-05T20:15:56 #rustdoc <steveklabnik> ah
2018-03-05T20:15:59 #rustdoc <steveklabnik> steve⊙sc :)
2018-03-05T20:16:06 #rustdoc <misdreavus> <3
2018-03-05T20:16:52 #rustdoc <steveklabnik> <3
2018-03-05T20:36:17 #rustdoc <imperio> misdreavus: I can confirm it doesn't affect doc comments
2018-03-05T20:36:24 #rustdoc <misdreavus> huh
2018-03-05T20:36:36 #rustdoc <imperio> so we're good to go I suppose? :)
2018-03-05T20:37:34 #rustdoc <misdreavus> maaaaybe
2018-03-05T20:37:39 #rustdoc <misdreavus> i'm still suspicious
2018-03-05T20:39:43 #rustdoc <misdreavus> in other news, here's a preview of surfacing target_feature in rustdoc https://tonberry.quietmisdreavus.net/simd-std/std/arch/x86_64/index.html#functions
2018-03-05T20:40:36 #rustdoc <imperio> CPU feature sounds weird
2018-03-05T20:41:17 #rustdoc <misdreavus> should i go back to "target feature"?
2018-03-05T20:41:48 #rustdoc <misdreavus> it seems off to just use the feature name, but that's how other doc(cfg) headers do it
2018-03-05T20:43:21 #rustdoc <misdreavus> i think i really want to just show the feature name on the listing, then use "target feature _" on the full page
2018-03-05T20:43:34 #rustdoc <misdreavus> but that requires more work than just slotting another branch to a match block
2018-03-05T20:44:00 #rustdoc <imperio> I don't have alternative suggestions :s
2018-03-05T20:44:07 #rustdoc <misdreavus> lol no worries
2018-03-05T20:55:36 #rustdoc <onur> imperio, sorry I was afk, what did you worry about?
2018-03-05T20:55:50 #rustdoc <imperio> onur: about your issues
2018-03-05T20:56:02 #rustdoc <imperio> but your scroll one isn't rustdoc so it's fine I suppose
2018-03-05T20:56:16 #rustdoc <imperio> the second one is very problematic
2018-03-05T20:56:27 #rustdoc <onur> yes I can't find a better solution than this, I didn't want to make docs.rs navigation position fixed actually
2018-03-05T20:56:48 #rustdoc <onur> no idea about second one still investigating
2018-03-05T20:58:55 #rustdoc <imperio> me too
2018-03-05T20:59:03 #rustdoc <imperio> if you want I can take a look at the first one later on
2018-03-05T21:01:01 #rustdoc <imperio> misdreavus: I'm looking for the rustdoc book (to get the rustup command again ^^'), where can I find it please?
2018-03-05T21:01:53 #rustdoc <misdreavus> the rustup command? you're looking for the readme, that got merged https://github.com/rust-lang/rust/tree/master/src/librustdoc
2018-03-05T21:02:11 #rustdoc <imperio> ah?
2018-03-05T21:02:14 #rustdoc <imperio> I'm on the readme
2018-03-05T21:02:17 #rustdoc <imperio> let me read it again
2018-03-05T21:02:29 #rustdoc <imperio> ah right
2018-03-05T21:03:32 #rustdoc <imperio> hehe
2018-03-05T21:03:34 #rustdoc <imperio> that's awesome
2018-03-05T21:04:44 #rustdoc <misdreavus> :3
2018-03-05T21:06:10 #rustdoc <imperio> soooo
2018-03-05T21:06:15 #rustdoc <imperio> what's happening in there
2018-03-05T21:06:24 #rustdoc <imperio> why doesn't sidebar exist at this point?
2018-03-05T21:10:04 #rustdoc <onur> ok imperio I found the issue
2018-03-05T21:10:17 #rustdoc <imperio> onur: which is?
2018-03-05T21:10:19 #rustdoc <onur> sidebar-elems div is not present in function pages
2018-03-05T21:10:21 #rustdoc <onur> https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/render.rs#L3505
2018-03-05T21:10:25 #rustdoc <onur> because of this
2018-03-05T21:10:25 #rustdoc <imperio> (I think I found too but never too sure)
2018-03-05T21:10:32 #rustdoc <imperio> what I found
2018-03-05T21:10:41 #rustdoc <imperio> I added a condition and it worked
2018-03-05T21:10:42 #rustdoc <imperio> hehe
2018-03-05T21:17:39 #rustdoc <imperio> misdreavus: do you waiting for this commit too?
2018-03-05T21:17:43 #rustdoc <imperio> it's a one liner
2018-03-05T21:17:55 #rustdoc <misdreavus> feel free to add it
2018-03-05T21:18:03 #rustdoc <imperio> onur: I put it on my PR so it gets merged super quickly, is it ok with you?
2018-03-05T21:18:38 #rustdoc <onur> sure imperio
2018-03-05T21:18:59 #rustdoc <imperio> if you want the ownership of the commit, I can just give it to you
2018-03-05T21:19:08 #rustdoc <imperio> you found it too after all
2018-03-05T21:19:22 #rustdoc <onur> nah I don't care imperio :-)
2018-03-05T21:19:45 #rustdoc <imperio> I'll still put you in the commit message so you'll be annoyed with github mails :D
2018-03-05T21:19:47 #rustdoc <onur> I didn't want docs.rs to build 3k crate with this bug but its too late now
2018-03-05T21:22:15 #rustdoc <imperio> actually it just fix the error, it doesn't add back items in the sidebar
2018-03-05T21:22:26 #rustdoc <imperio> let's continue the ivnestigation now :)
2018-03-05T21:22:51 #rustdoc <onur> I see
2018-03-05T21:24:33 #rustdoc <imperio> onur: what is supposed to be in the sidebar btw?
2018-03-05T21:24:41 #rustdoc <imperio> elems at the same level?
2018-03-05T21:25:03 #rustdoc <misdreavus> the dynamic things taht get added to struct pages, so yeah
2018-03-05T21:26:22 #rustdoc <imperio> ok ok
2018-03-05T21:26:26 #rustdoc <imperio> adding it "back"
2018-03-05T21:26:32 #rustdoc <imperio> seems weird we never saw it though...
2018-03-05T21:29:42 #rustdoc <imperio> ah bingo
2018-03-05T21:29:45 #rustdoc <imperio> everything is back!
2018-03-05T21:29:52 #rustdoc <imperio> mouhahaha
2018-03-05T21:30:01 #rustdoc <imperio> and I can definitely add a test for this one
2018-03-05T21:41:52 #rustdoc <imperio> misdreavus: PR is ready (again ^^')
2018-03-05T21:58:08 #rustdoc <misdreavus> imperio: why does your test have #![feature(const_fn)] ?
2018-03-05T21:59:08 #rustdoc <imperio> woups
2018-03-05T21:59:32 #rustdoc <imperio> it doesn't anymore misdreavus :)
2018-03-05T21:59:37 #rustdoc <misdreavus> lol
2018-03-05T22:00:19 #rustdoc <misdreavus> also, the way you added the sidebar-items div feels wrong, like we sholdn't just add more pages to that list
2018-03-05T22:01:14 #rustdoc <misdreavus> if there are any other page types that aren't in that list (not sure offhand) then they're still going to have the issue
2018-03-05T22:03:40 #rustdoc <misdreavus> oh yeah, like type aliases aren't in that list, so they'll have the same issue
2018-03-05T22:05:33 #rustdoc <imperio> they're there, -> is_type
2018-03-05T22:05:48 #rustdoc <imperio> unless I'm misunderstanding what "is_type" is?
2018-03-05T22:08:06 #rustdoc <misdreavus> oh, yeah, so that example's bad
2018-03-05T22:09:29 #rustdoc <misdreavus> consts, tho
2018-03-05T22:09:43 #rustdoc <imperio> I can add it for consts too?
2018-03-05T22:10:00 #rustdoc <imperio> as you want
2018-03-05T22:10:08 #rustdoc <misdreavus> no, that's not my point
2018-03-05T22:10:48 #rustdoc <imperio> I see your point
2018-03-05T22:11:03 #rustdoc <imperio> I can just remove the condition
2018-03-05T22:11:14 #rustdoc <misdreavus> i feel like gating all that in a bunch of "if it's this kind" is a smell
2018-03-05T22:11:39 #rustdoc <imperio> haha
2018-03-05T22:11:45 #rustdoc <onur> btw that code hasn't changed since rust 1.21 https://github.com/rust-lang/rust/blob/1.21.0/src/librustdoc/html/render.rs#L3156 but somehow sidebar is working fine in rust 1.21-1.23
2018-03-05T22:11:48 #rustdoc <imperio> so what about what I suggested?
2018-03-05T22:12:01 #rustdoc <imperio> onur: yep, that's the surprising part
2018-03-05T22:12:15 #rustdoc <misdreavus> onur: oho, interesting
2018-03-05T22:12:53 #rustdoc <misdreavus> did the javascript add the div itself at some point?
2018-03-05T22:13:01 #rustdoc <onur> https://docs.rs/rustsync/0.2.2/rustsync/
2018-03-05T22:13:06 #rustdoc <imperio> I don't think it did
2018-03-05T22:13:07 #rustdoc <onur> this page generated in rust 1.22
2018-03-05T22:13:12 #rustdoc <onur> there is no sidebar-elems div
2018-03-05T22:13:16 #rustdoc <onur> and sidebar is workign fine
2018-03-05T22:13:31 #rustdoc <imperio> ah I see!
2018-03-05T22:13:37 #rustdoc <onur> I mean this page: https://docs.rs/rustsync/0.2.2/rustsync/fn.compare.html
2018-03-05T22:13:42 #rustdoc <imperio> that's because I add so much things in the sidebar
2018-03-05T22:13:48 #rustdoc <imperio> *added
2018-03-05T22:14:19 #rustdoc <imperio> I added methods and stuff
2018-03-05T22:14:22 #rustdoc <imperio> that's why
2018-03-05T22:14:25 #rustdoc <misdreavus> oh, was that part of your adding all the listings?
2018-03-05T22:14:29 #rustdoc <imperio> yes
2018-03-05T22:14:32 #rustdoc <imperio> now we know
2018-03-05T22:15:19 #rustdoc <misdreavus> so what's the problem?
2018-03-05T22:15:39 #rustdoc <misdreavus> like, what caused it to fail on pages where there's nothing to add?
2018-03-05T22:16:28 #rustdoc <misdreavus> onur: while we're iterating on the solution, do you have a comment to this other PR? https://github.com/rust-lang/rust/pull/48511#discussion_r172226264
2018-03-05T22:17:16 #rustdoc <onur> misdreavus, no imperio fixed everything I said and I already cherry-picked that patch
2018-03-05T22:17:38 #rustdoc <onur> it made docs.rs so awesome, thanks to this patch I get rid of so many dark-magic regex html editing stuff in docs.rs
2018-03-05T22:17:40 #rustdoc <misdreavus> i take it that the fonts don't need to have the resource-suffix?
2018-03-05T22:18:03 #rustdoc <onur> yes they are being loaded from css
2018-03-05T22:18:16 #rustdoc <onur> and font files are always same
2018-03-05T22:18:31 #rustdoc <onur> css and javascript files can be different in each version of rust
2018-03-05T22:18:36 #rustdoc <misdreavus> makes sense
2018-03-05T22:18:55 #rustdoc <misdreavus> as long as you can handle it, since those are some of the files in html/static/ that don't get the suffix
2018-03-05T22:19:04 #rustdoc <misdreavus> s/some of //
2018-03-05T22:20:05 #rustdoc <imperio> misdreavus: so I just need to update the option description, right?
2018-03-05T22:20:08 #rustdoc <misdreavus> yup
2018-03-05T22:20:11 #rustdoc <imperio> ok
2018-03-05T22:20:18 #rustdoc <imperio> I end my current fix and then here we go
2018-03-05T22:21:07 #rustdoc <misdreavus> just wanted to bring that up since we're all in the same room right now, lol
2018-03-05T22:22:04 #rustdoc <imperio> good idea ;)
2018-03-05T22:28:19 #rustdoc <imperio> ah damn
2018-03-05T22:28:20 #rustdoc <imperio> new bug
2018-03-05T22:28:32 #rustdoc <imperio> when pressing 'escape', search bar doesn't defocus
2018-03-05T22:28:34 #rustdoc <imperio> *sigh*
2018-03-05T22:28:40 #rustdoc <imperio> I was sure I fixed this issue long ago
2018-03-05T22:32:29 #rustdoc <misdreavus> !gh 48759
2018-03-05T22:32:30 #rustdoc <rustbot> [PR 48759] <open> rustdoc: expose #[target_feature] attributes as doc(cfg) flags <https://github.com/rust-lang/rust/pull/48759>
2018-03-05T22:33:12 #rustdoc <misdreavus> i saw that stdsimd got merged into std, and i noticed a chance to clear up a confusion of mine :P
2018-03-05T22:35:01 #rustdoc <imperio> misdreavus: you'll have to wait for me to end my two current prs :p
2018-03-05T22:35:06 #rustdoc <misdreavus> hehe
2018-03-05T22:35:11 #rustdoc <misdreavus> this isn't a priority
2018-03-05T22:35:57 #rustdoc <imperio> every rustdoc pr is a priority!
2018-03-05T22:36:00 #rustdoc <misdreavus> lol
2018-03-05T22:36:05 #rustdoc <imperio> we have to make it awesome!
2018-03-05T22:36:26 #rustdoc <misdreavus> there's an unstated question in this one, since it uses the doc(cfg) feature without using the doc(cfg) attribute or feature flag
2018-03-05T22:36:47 #rustdoc <misdreavus> like, how kosher is that? >_>
2018-03-05T22:38:06 #rustdoc <imperio> na it's fine
2018-03-05T22:38:16 #rustdoc <imperio> we have such things a bit everywhere
2018-03-05T22:38:23 #rustdoc <imperio> and rustdoc-fixes is ready now
2018-03-05T22:39:13 #rustdoc <misdreavus> i'll take a look
2018-03-05T22:40:57 #rustdoc <imperio> misdreavus: btw, about extend_from_slice -> it's simply because it's faster
2018-03-05T22:41:05 #rustdoc <imperio> we don't care about utf-8 check in there
2018-03-05T22:42:13 #rustdoc <steveklabnik> so, i am about to step back
2018-03-05T22:42:17 #rustdoc <steveklabnik> but i wanted to toss an idea out there
2018-03-05T22:42:25 #rustdoc <steveklabnik> chew on it and then we should talk about it at some point :)
2018-03-05T22:42:31 #rustdoc <imperio> XD
2018-03-05T22:42:34 #rustdoc <steveklabnik> there's some stuff that's gonna be shared between the two rustdocs, like, for example
2018-03-05T22:42:40 #rustdoc <steveklabnik> rendering to markdown while supporting #s
2018-03-05T22:42:47 #rustdoc <steveklabnik> should we make little crates for these tasks?
2018-03-05T22:42:52 #rustdoc <steveklabnik> and then share them between the rustdocs?
2018-03-05T22:42:58 #rustdoc <steveklabnik> think about it <3
2018-03-05T22:43:00 #rustdoc <steveklabnik> be back later
2018-03-05T22:43:05 #rustdoc <imperio> oh shit
2018-03-05T22:43:13 #rustdoc <imperio> that's actually a good idea
2018-03-05T22:43:36 #rustdoc <imperio> but way more complicated than just this
2018-03-05T22:43:56 #rustdoc <imperio> misdreavus: ^
2018-03-05T22:44:08 #rustdoc <imperio> misdreavus: let's discuss about it tomorrow evening :)
2018-03-05T22:45:26 #rustdoc <misdreavus> ooh, i like it!
2018-03-05T22:45:54 #rustdoc <imperio> misdreavus: I totally reserve this task :p
2018-03-05T22:46:06 #rustdoc <misdreavus> imperio: (about extend_from_slice) yeah, i figured it was about skipping the utf-8 check
2018-03-05T22:46:12 #rustdoc <imperio> (and I updated the PR for onur ^^)
2018-03-05T22:46:23 #rustdoc <imperio> yep yep
2018-03-05T22:48:59 #rustdoc <onur> which PR imperio?
2018-03-05T22:49:17 #rustdoc <misdreavus> !gh 48511
2018-03-05T22:49:17 #rustdoc <rustbot> [PR 48511] <open> Add resource-suffix option for rustdoc <https://github.com/rust-lang/rust/pull/48511>
2018-03-05T22:49:27 #rustdoc <misdreavus> onur: ^
2018-03-05T22:49:32 #rustdoc <misdreavus> i assume
2018-03-05T22:49:45 #rustdoc <onur> why did you rebase/squash :)
2018-03-05T22:49:55 #rustdoc <misdreavus> because that's that he always does :P
2018-03-05T22:50:43 #rustdoc <onur> I asked him to not for this PR since I already cherry-picked
2018-03-05T22:50:47 #rustdoc <onur> but its fine
2018-03-05T22:51:10 #rustdoc <imperio> oups sorry
2018-03-05T22:55:09 #rustdoc <onur> btw I also saw another issue in sidebar
2018-03-05T22:55:23 #rustdoc <onur> there is always some annoying overflow in Firefox 58 linux
2018-03-05T22:55:28 #rustdoc <onur> like this: https://streamable.com/7tmzx
2018-03-05T22:58:28 #rustdoc <onur> I solved this in docs.rs by setting: https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/static/rustdoc.css#L186 this to -10px
2018-03-05T23:03:15 #rustdoc <imperio> huuuuum
2018-03-05T23:03:18 #rustdoc <imperio> please open an issue
2018-03-05T23:04:09 #rustdoc <onur> but I am sure something else caused this, because my change did affect old documentations built with old version of rust
2018-03-05T23:04:23 #rustdoc <imperio> euh
2018-03-05T23:04:27 #rustdoc <imperio> weird
2018-03-05T23:04:38 #rustdoc <imperio> if the issue is on doc.rust-lang.org
2018-03-05T23:04:41 #rustdoc <imperio> open an issue
2018-03-05T23:04:49 #rustdoc <imperio> if it's only docs.rs, tag me on the issue
2018-03-05T23:04:53 #rustdoc <imperio> I'll take a look tomorrow
2018-03-05T23:04:56 #rustdoc <imperio> going to sleep now
2018-03-05T23:06:04 #rustdoc <onur> imperio, its not docs.rs thing I recorded that now with your 48755 fixes
2018-03-05T23:07:41 #rustdoc <onur> std docs looks fine but this issue exists in todays nightly recent nightly: rustc 1.26.0-nightly (259e4a678 2018-03-04)
2018-03-06T09:46:13 #rustdoc <imperio> onur: let's wait for its merge and then I'll take a look
2018-03-06T09:46:33 #rustdoc <imperio> the issue being that I don't know if you change things to make this all work on docs.rs
2018-03-06T09:47:25 #rustdoc <onur> imperio, gif is from https://doc.rust-lang.org/nightly/std/
2018-03-06T09:47:37 #rustdoc <imperio> ok then we definitely have a new issue
2018-03-06T09:47:46 #rustdoc <imperio> you already opened an issue?
2018-03-06T09:48:06 #rustdoc <onur> yday I checked stable documentation
2018-03-06T09:48:11 #rustdoc <onur> thats why I didn't see any issue
2018-03-06T09:48:17 #rustdoc <onur> no issue here: https://doc.rust-lang.org/std/
2018-03-06T09:49:14 #rustdoc <imperio> so not on stable
2018-03-06T09:49:31 #rustdoc <imperio> is it on https://doc.rust-lang.org/beta/std/ ?
2018-03-06T09:49:50 #rustdoc <onur> yeah beta also have same issue
2018-03-06T09:49:59 #rustdoc <imperio> then it's not because of my changes
2018-03-06T14:56:31 #rustdoc <WindowsBunny> one one hand I think forcing people to have JS enabled to view static content is the devil. on the other hand static html files for each item scales horribly
2018-03-06T14:56:56 #rustdoc <WindowsBunny> so the only third option would be to have a web server running that serves dynamically generated static content
2018-03-06T14:57:18 #rustdoc <steveklabnik> yeah, i'm down for that too. people also complain though :/
2018-03-06T14:58:45 #rustdoc <WindowsBunny> considering generating docs for winapi is now a rustjerk meme... https://www.reddit.com/r/rustjerk/comments/81elox/wew/
2018-03-06T15:02:08 #rustdoc <steveklabnik> heh
2018-03-06T15:03:09 #rustdoc <imperio> WindowsBunny: 5K seconds O.O
2018-03-06T15:03:37 #rustdoc <WindowsBunny> imperio: yep, 90 minutes because windows defender and hard disk drive
2018-03-06T15:03:46 #rustdoc <WindowsBunny> and NTFS
2018-03-06T15:03:57 #rustdoc <imperio> that's impressive in its own way haha
2018-03-06T15:09:32 #rustdoc <misdreavus> (1) summary pages with more information than the current module overview pages (2) option to trim out pages for items, in favor of splicing their full docs into the summary pages
2018-03-06T15:09:46 #rustdoc <misdreavus> (3) auto-enable this option for crates called "winapi" >_>
2018-03-06T15:12:44 #rustdoc <misdreavus> the only problem with this plan is that new options are nightly-only to start off, and you'd need to start packing in a .cargo/config with winapi to include the option for rustdoc
2018-03-06T15:15:08 #rustdoc <WindowsBunny> misdreavus: Well (3) could avoid the unstable part
2018-03-06T15:15:39 #rustdoc <misdreavus> WindowsBunny: well yeah, but that part was a joke
2018-03-06T15:16:12 #rustdoc <WindowsBunny> misdreavus: Honestly, (3) actually sounds like a really good option
2018-03-06T15:16:14 #rustdoc <misdreavus> maybe i could swing it for "crates with this many items" but that might get std as well
2018-03-06T15:17:05 #rustdoc <WindowsBunny> misdreavus: 9,533 files in std docs
2018-03-06T15:17:27 #rustdoc <WindowsBunny> misdreavus: 120,054 files in winapi docs
2018-03-06T15:17:37 #rustdoc <misdreavus> that answers my question, thanks, lol
2018-03-06T15:22:23 #rustdoc <misdreavus> so we set the cap at, what, 20k? way lower and just exclude std? way lower and leave std in? make it a per-module cap, which would leave std out by virtue of its module hierarchy?
2018-03-06T15:26:38 #rustdoc <WindowsBunny> misdreavus: a per module cap would be funny because small modules would have small summary pages, and large modules would have SUPER GIGANTIC summary pages because the information is suddenly inlined
2018-03-06T15:27:07 #rustdoc <misdreavus> lol yeah
2018-03-06T15:28:07 #rustdoc <misdreavus> the other option is to figure out some async file io and splat out all 120k of those files at once :P
2018-03-06T15:28:22 #rustdoc <WindowsBunny> misdreavus: CreateFile is not async
2018-03-06T15:29:16 #rustdoc <WindowsBunny> misdreavus: and it is genuinely limited by windows defender doing a *single threaded* scan of each new created file
2018-03-06T15:29:20 #rustdoc <misdreavus> damn
2018-03-06T15:29:28 #rustdoc <WindowsBunny> so only solution is less files
2018-03-06T18:38:29 #rustdoc <misdreavus> imperio: i'm not sure what you mean here? none of the other doc(cfg) banners mention what category they are https://github.com/rust-lang/rust/pull/48759#issuecomment-370712483
2018-03-06T18:38:59 #rustdoc <misdreavus> imperio: and, like, you're looking at stdsimd or std::arch anyway, there's docs about target_feature already there
2018-03-06T18:40:01 #rustdoc <misdreavus> imperio: onur: is there anything left to do on {!gh 48755}? this PR seemed to keep evolving yesterday
2018-03-06T18:40:01 #rustdoc <rustbot> [PR 48755] <open> Multiple rustdoc fixes <https://github.com/rust-lang/rust/pull/48755>
2018-03-06T18:46:05 #rustdoc <misdreavus> imperio: on today's nightly docs, if you have the "main" theme selected, the dark theme flashes for a moment when a page loads
2018-03-06T19:29:25 #rustdoc <imperio> misdreavus: uuuuurg
2018-03-06T19:31:05 #rustdoc <imperio> misdreavus: I didn't get what was the issue with https://github.com/rust-lang/rust/pull/48755#issuecomment-370885501
2018-03-06T19:31:50 #rustdoc <misdreavus> imperio: you didn't get it before, or you don't get it now?
2018-03-06T19:32:02 #rustdoc <imperio> what you meant I meant haha
2018-03-06T19:39:45 #rustdoc <misdreavus> cool
2018-03-06T19:41:11 #rustdoc <imperio> I still don't understand what the issue is XD
2018-03-06T19:41:27 #rustdoc <misdreavus> oh
2018-03-06T19:41:47 #rustdoc <misdreavus> you'
2018-03-06T19:41:59 #rustdoc <misdreavus> you're supposed to be able to fold up individual methods' documentation https://doc.rust-lang.org/nightly/std/vec/struct.Vec.html#methods
2018-03-06T19:42:08 #rustdoc <imperio> ah crap
2018-03-06T19:42:09 #rustdoc <misdreavus> but with your PR you can't https://tonberry.quietmisdreavus.net/asdf-std/std/vec/struct.Vec.html#methods
2018-03-06T19:42:23 #rustdoc <imperio> I'll fix it in a few minutes
2018-03-06T19:42:26 #rustdoc <misdreavus> <3
2018-03-06T21:51:34 #rustdoc <imperio> onur: misdreavus: do we have other urgent issues to fix?
2018-03-06T21:51:42 #rustdoc <imperio> since I have a bit of free time ahead...
2018-03-06T21:52:49 #rustdoc <imperio> otherwise I fix a bug in mdbook
2018-03-06T22:09:51 #rustdoc <imperio> misdreavus: who should I ping about mdbook?
2018-03-06T22:09:59 #rustdoc <misdreavus> uh
2018-03-06T22:12:09 #rustdoc <misdreavus> imperio: according to https://github.com/rust-lang-nursery/mdBook/blob/master/CONTRIBUTING.md, michael-f-bryan, budziq, frewsxcv, or steveklabnik 
2018-03-06T22:12:12 #rustdoc <imperio> I made some huge improvements
2018-03-06T22:12:32 #rustdoc <imperio> I don't like how they did the html part :-/
2018-03-06T22:20:38 #rustdoc <imperio> and fixed too
2018-03-06T22:20:44 #rustdoc <imperio> now anchors don't go under the sidebar
2018-03-06T22:21:04 #rustdoc <imperio> that's sad that most of my time is spent on front-end stuff :'(
2018-03-06T22:21:10 #rustdoc <imperio> I'm a system engineer...
2018-03-07T04:17:09 #rustdoc <isHavvy> imperio: Why not be both?
2018-03-07T08:56:26 #rustdoc <imperio> isHavvy: except for my first job, I never did system engineering
2018-03-07T16:40:17 #rustdoc <imperio> onur: docs.rs has the same issue I just solved on mdbook :)
2018-03-07T17:04:44 #rustdoc <onur> what issue imperio?
2018-03-07T17:06:34 #rustdoc <imperio> the text is going under the top navbar
2018-03-07T17:06:41 #rustdoc <imperio> which means anchors are hidden when you click on them
2018-03-07T17:06:48 #rustdoc <imperio> the fix is pretty simple though
2018-03-07T17:07:18 #rustdoc <onur> I thought I fixed it, what is your browser?
2018-03-07T17:07:23 #rustdoc <imperio> chrome
2018-03-07T17:08:22 #rustdoc <onur> its working fine on my chrome 64
2018-03-07T17:09:15 #rustdoc <onur> imperio: btw what do you mean by text is going under?
2018-03-07T17:09:34 #rustdoc <imperio> have to leave
2018-03-07T17:09:39 #rustdoc <imperio> I'll expand explanations once I'm home
2018-03-07T17:09:59 #rustdoc <onur> ok
2018-03-07T17:58:59 #rustdoc <imperio> onur: and I'm back
2018-03-07T17:59:25 #rustdoc <imperio> onur: example: https://docs.rs/csv/1.0.0-beta.5/csv/#brief-overview
2018-03-07T18:13:26 #rustdoc <onur> ahh yes, I am aware of this
2018-03-07T18:13:32 #rustdoc <onur> its a huge problem when you click any [src]
2018-03-07T18:13:41 #rustdoc <onur> no idea how to solve this
2018-03-07T18:14:37 #rustdoc <imperio> easy fix like I said
2018-03-07T18:14:41 #rustdoc <imperio> you want me to write it?
2018-03-07T18:15:41 #rustdoc <onur> is it javascript?
2018-03-07T18:15:53 #rustdoc <onur> if it's javascript I rather to make navbar non-fixed again
2018-03-07T18:16:22 #rustdoc <imperio> nope it's not
2018-03-07T18:16:26 #rustdoc <imperio> pure html/css
2018-03-07T18:16:40 #rustdoc <imperio> and nothing tricky
2018-03-07T18:16:57 #rustdoc <onur> great imperio 
2018-03-07T18:17:12 #rustdoc <imperio> like I said, I just did the same on mdBook haha
2018-03-07T18:17:17 #rustdoc <imperio> funny how bugs are common
2018-03-07T18:17:26 #rustdoc <imperio> but first I need to fix a bug for themes
2018-03-07T18:18:19 #rustdoc <imperio> misdreavus: I have no clue what cause the background blink
2018-03-07T18:18:28 #rustdoc <imperio> it shouldn't happen :-/
2018-03-07T18:21:21 #rustdoc <misdreavus> :/
2018-03-07T18:21:47 #rustdoc <imperio> the last style is the main one
2018-03-07T18:22:10 #rustdoc <imperio> which means that either chrome got so fast that now it has time to load css of dark.css before the main.css one
2018-03-07T18:22:17 #rustdoc <imperio> or some dark magic is happening
2018-03-07T18:22:25 #rustdoc <imperio> but that gave me an idea on how to fix it
2018-03-07T18:30:02 #rustdoc <imperio> onur: how can I test https://github.com/onur/docs.rs/pull/186 ? :)
2018-03-07T18:30:12 #rustdoc <imperio> oh nevermind
2018-03-07T18:30:16 #rustdoc <imperio> I just on the platform
2018-03-07T18:32:13 #rustdoc <imperio> ah damn
2018-03-07T18:32:17 #rustdoc <imperio> your css is a bit tricky
2018-03-07T18:33:59 #rustdoc <imperio> onur: so how can I test locally please? :)
2018-03-07T18:34:11 #rustdoc <onur> well imperio you can't :-)
2018-03-07T18:34:16 #rustdoc <onur> new rust did break my vagrant image as well
2018-03-07T18:34:17 #rustdoc <imperio> ah
2018-03-07T18:34:25 #rustdoc <imperio> how funny :D
2018-03-07T18:34:33 #rustdoc <imperio> I love doing changes without seeing them
2018-03-07T18:34:48 #rustdoc <onur> use browser inspector
2018-03-07T18:35:09 #rustdoc <imperio> it's a bit difficult
2018-03-07T18:35:09 #rustdoc <onur> I am testing it now
2018-03-07T18:35:22 #rustdoc <imperio> you overloaded some css, but it's now useless with my changes
2018-03-07T18:35:28 #rustdoc <imperio> I pushed a new version
2018-03-07T18:35:33 #rustdoc <imperio> (I squashed, sorry)
2018-03-07T18:36:27 #rustdoc <onur> your squashes are fine, I only asked for resource-suffix branch
2018-03-07T18:36:33 #rustdoc <imperio> ah cool
2018-03-07T18:38:34 #rustdoc <imperio> well, can you put my changes somewhere so I can *see* please?
2018-03-07T18:39:00 #rustdoc <onur> https://img10-1342.appspot.com/EirRyoI.png
2018-03-07T18:39:08 #rustdoc <onur> wait I'll make this page accessible for you
2018-03-07T18:39:17 #rustdoc <imperio> thanks!
2018-03-07T18:48:55 #rustdoc <onur> errm vagrant doesn't allow port forwarding :(
2018-03-07T18:49:10 #rustdoc <imperio> then you'll have to *show me*
2018-03-07T18:49:12 #rustdoc <imperio> mouhahaha
2018-03-07T18:49:24 #rustdoc <imperio> did you try with my last changes?
2018-03-07T18:50:06 #rustdoc <onur> yes its c235bd9
2018-03-07T18:51:15 #rustdoc <imperio> ok
2018-03-07T18:51:20 #rustdoc <imperio> just a little update then
2018-03-07T18:52:14 #rustdoc <onur> imperio, I need to go out for few hours I'll be back
2018-03-07T18:52:28 #rustdoc <onur> I think vagrant is still working fine only one guy reported its broken
2018-03-07T18:52:38 #rustdoc <imperio> hum ok
2018-03-07T18:52:44 #rustdoc <imperio> I need to go in 10 min too
2018-03-07T18:52:45 #rustdoc <onur> ahh but nvm it wont work
2018-03-07T18:52:50 #rustdoc <imperio> we'll see that later on :)
2018-03-07T18:53:52 #rustdoc <imperio> onur: updated btw
2018-03-07T18:55:48 #rustdoc <onur> https://img10-1342.appspot.com/mbBlnKV.png
2018-03-07T18:56:52 #rustdoc <onur> I am off now imperio
2018-03-07T18:56:56 #rustdoc <imperio> onur: ah damn
2018-03-07T18:56:59 #rustdoc <imperio> just pushed another change
2018-03-07T18:57:06 #rustdoc <onur> ok last try
2018-03-07T18:57:06 #rustdoc <imperio> please send a screenshot once tested ;)
2018-03-07T18:57:11 #rustdoc <imperio> ah great thanks!
2018-03-07T18:59:00 #rustdoc <onur> its like pre-theme-picker navbar now: https://img10-1342.appspot.com/AysEJeK.png
2018-03-07T18:59:50 #rustdoc <onur> wait imperio 
2018-03-07T18:59:53 #rustdoc <onur> adding padding to sidebar is
2018-03-07T18:59:58 #rustdoc <onur> fixing this issue
2018-03-07T19:01:03 #rustdoc <onur> I am really gone now
2018-03-07T19:04:21 #rustdoc <imperio> ah right
2018-03-07T19:05:51 #rustdoc <imperio> onur: updated again
2018-03-07T20:41:01 #rustdoc <onur> I am back imperio, trying now
2018-03-07T20:52:01 #rustdoc <onur> imperio, its perfect now thanks!
2018-03-07T22:14:49 #rustdoc <imperio> onur: great! :p
2018-03-07T22:14:57 #rustdoc <imperio> coding without seeing directly the results was a fun experience
2018-03-07T23:12:09 #rustdoc <imperio> misdreavus: can you test https://github.com/rust-lang/rust/pull/48831 on your server please? :)
2018-03-07T23:12:44 #rustdoc <misdreavus> i'm also running a build for my own thing, but i'll get one started
2018-03-07T23:13:45 #rustdoc <misdreavus> my pool little server
2018-03-07T23:13:48 #rustdoc <misdreavus> **poor
2018-03-07T23:16:13 #rustdoc <imperio> hehe
2018-03-07T23:16:32 #rustdoc <imperio> then I'm going to sleep
2018-03-07T23:16:38 #rustdoc <misdreavus> sleep well! o/
2018-03-07T23:16:45 #rustdoc <imperio> please comment (here or on the PR) if you test it
2018-03-07T23:16:58 #rustdoc * misdreavus considers converting their patreon into just server funding
2018-03-07T23:18:08 #rustdoc <imperio> XD
2018-03-07T23:18:12 #rustdoc <imperio> thanks anyway :)
2018-03-07T23:19:49 #rustdoc <misdreavus> i'm lazy, so i just did a standard rebuild, and somethign about jumping between detached HEADs for remote branches constantly makes it rebuild from bootstrap
2018-03-07T23:19:59 #rustdoc <misdreavus> so it'll be done in lik 1.5 hours
2018-03-07T23:20:02 #rustdoc <misdreavus> **like
2018-03-07T23:21:04 #rustdoc <misdreavus> longer because i'm running a build of my own in another window >_>
2018-03-07T23:21:46 #rustdoc <misdreavus> every time i try to fix something to get doc(cfg) working for stdsimd, something else comes up, but it takes 40-60 minutes because i'm messing with std
2018-03-07T23:21:59 #rustdoc <misdreavus> longer now because i'm messing with bits that change stage0
2018-03-08T14:47:35 #rustdoc <misdreavus> imperio: your pr doesn't exhibit the blinking behavior on my server, but neither does the commit right before it >_>
2018-03-08T14:48:35 #rustdoc <misdreavus> if you'd like to compare
2018-03-08T14:48:39 #rustdoc <misdreavus> your pr: https://tonberry.quietmisdreavus.net/themes-std/std/index.html
2018-03-08T14:48:45 #rustdoc <misdreavus> without your pr: https://tonberry.quietmisdreavus.net/asdf-std/std/index.html
2018-03-08T14:48:53 #rustdoc <imperio> :-/
2018-03-08T14:49:00 #rustdoc <imperio> well that's still an improvement
2018-03-08T14:50:24 #rustdoc <misdreavus> yeah, but it's not a proven fix
2018-03-08T14:54:44 #rustdoc <imperio> unfortunately
2018-03-08T14:56:07 #rustdoc <misdreavus> there's a merge conflict anyway
2018-03-08T15:27:52 #rustdoc <imperio> indeed
2018-03-09T08:44:46 #rustdoc <SimonSapin> Any idea why removing a type alias in std would change the order of bounds in rustdoc output in an unrelated impl? https://github.com/rust-lang/rust/pull/48265/commits/a7ca6b27c20ec2ad10abb8bc392a01776b486599#r173391750
2018-03-09T08:44:46 #rustdoc <rustbot> [PR 48265] <open> Add 12 num::NonZero* types for primitive integers, deprecate core::nonzero <https://github.com/rust-lang/rust/pull/48265>
2018-03-09T14:39:42 #rustdoc <misdreavus> that's... weird
2018-03-09T14:40:02 #rustdoc <misdreavus> oh wait, it's a synthetic impl
2018-03-09T14:40:25 #rustdoc <misdreavus> is there a DefId ordering going on in there?
2018-03-09T16:47:12 #rustdoc <imperio> misdreavus: I was wondering why all things I fixed on rustdoc were still there
2018-03-09T16:47:20 #rustdoc <imperio> and then I saw that https://github.com/rust-lang/rust/pull/48755 was still not merged
2018-03-09T16:47:26 #rustdoc <imperio> so I fixed the test
2018-03-09T16:47:40 #rustdoc <imperio> that's quite the important fixes :-/
2018-03-09T16:51:20 #rustdoc <misdreavus> lol oops
2018-03-09T19:17:57 #rustdoc <imperio> misdreavus: https://github.com/rust-lang/rust/pull/48755 is ready
2018-03-09T19:17:59 #rustdoc <imperio> please give it a high priority
2018-03-09T19:18:15 #rustdoc <misdreavus> just finished a work thing, i'll give it another read-through and push it out
2018-03-09T19:20:03 #rustdoc <misdreavus> imperio: r+'d
2018-03-09T19:20:56 #rustdoc <imperio> thx!
2018-03-11T00:57:48 #rustdoc <jhorwitz> Hey all
2018-03-12T19:52:03 #rustdoc <imperio> misdreavus: emptying my PR queue
2018-03-12T19:52:19 #rustdoc <imperio> I just realized that it was a bit overloaded in there
2018-03-12T20:00:22 #rustdoc <misdreavus> heh
2018-03-12T21:45:29 #rustdoc * Havvy wonders if there's just a way to show the microscope picture for nightly only when in [-] mode in Rustdoc.
2018-03-14T20:37:49 #rustdoc <misdreavus> hmm, wondering whether we should start opening tracking issues for unstable flags
2018-03-14T20:42:28 #rustdoc <misdreavus> i'm putting together an "unstable features" chapter for the rustdoc book and realizing some of these options have no stabilization path but totally should
2018-03-14T20:42:53 #rustdoc <misdreavus> i should do a publicity run for --crate-version like i did with doc(cfg) recently, lol
2018-03-14T20:46:38 #rustdoc <misdreavus> i'm also finding flags that imply features i never knew existed o_O
2018-03-14T20:46:55 #rustdoc <misdreavus> --linker and --sort-modules-by-appearance are news to me >_>
2018-03-14T21:20:47 #rustdoc <misdreavus> oh wait, now i remember, i was the one who reviewed --sort-modules-by-appearance >_>
2018-03-14T21:53:25 #rustdoc <misdreavus> !gh 49028
2018-03-14T21:53:25 #rustdoc <rustbot> [PR 49028] <open> [WIP] add an "unstable features" chapter to the rustdoc book <https://github.com/rust-lang/rust/pull/49028>
2018-03-14T21:53:34 #rustdoc <misdreavus> if you want to read what i have so far
2018-03-15T21:19:36 #rustdoc <misdreavus> is it kosher to write "this is what this is intended for, but due to a bug it doesn't do that" ?
2018-03-15T21:30:35 #rustdoc <misdreavus> ohhh, the flag *used* to work, but now it doesn't? curious
2018-03-15T21:34:54 #rustdoc <misdreavus> so: --display-warnings was added in {!gh 41678}, and is demonstrated in the PR description to have the desired effect
2018-03-15T21:34:55 #rustdoc <rustbot> [PR 41678] <merged> Add option to display warnings in rustdoc <https://github.com/rust-lang/rust/pull/41678>
2018-03-15T21:35:47 #rustdoc <misdreavus> at some point between then and now, the option stopped working and is now swallowing warnings from the code compilation
2018-03-15T21:37:03 #rustdoc <misdreavus> the issue that spawned the pr {!gh 41574} is a makeshift tracking issue for the flag so i'll just make a comment there
2018-03-15T21:37:03 #rustdoc <rustbot> [Issue 41574] <open> Have an option to output warnings from doctests <https://github.com/rust-lang/rust/issues/41574>
2018-03-15T21:40:16 #rustdoc <misdreavus> wait, never mind, i was using the attributes wrong
2018-03-15T21:40:18 #rustdoc <misdreavus> curious
2018-03-15T21:40:34 #rustdoc <misdreavus> that's a bug in make_test then
2018-03-15T21:41:46 #rustdoc <misdreavus> no, i had my assumptions wrong
2018-03-15T21:42:00 #rustdoc <misdreavus> adding crate attributes in the *doctest* doesn't override the default allow(unused)
2018-03-15T21:42:07 #rustdoc <misdreavus> just doc(test(attr(...)))
2018-03-15T21:42:34 #rustdoc * misdreavus . o O ( this is why writing docs is useful >_> )
2018-03-15T21:43:19 #rustdoc <misdreavus> y'all didn't realize you were signing up for Misdreavus's Ramble Hour
2018-03-15T21:48:45 #rustdoc <misdreavus> i should probably make make_test honor --display-warnings and not put in the default allow(unused) if it's set
2018-03-15T21:49:03 #rustdoc <misdreavus> to the code!
2018-03-15T22:14:50 #rustdoc <misdreavus> !gh 49064
2018-03-15T22:14:50 #rustdoc <rustbot> [PR 49064] <open> rustdoctest: suppress the default allow(unused) under --display-warnings <https://github.com/rust-lang/rust/pull/49064>
2018-03-15T22:15:10 #rustdoc <misdreavus> let's see if it builds lol, i just kinda pushed to make travis deal with it so i can get back to writing docs >_>
2018-03-16T14:09:24 #rustdoc <imperio> onur: hi, please update to last rustdoc nightly if you can
2018-03-16T14:09:40 #rustdoc <imperio> apparently, a few people complained about a (fixed) bug
2018-03-16T14:10:03 #rustdoc <onur> yes I'll imperio, there is been a llvm issue on windows but I believe its fixed
2018-03-16T14:11:55 #rustdoc <imperio> ah no clue
2018-03-16T15:19:28 #rustdoc <misdreavus> okay, so without {!gh 49064}, `--display-warnings` is functionally no different than `--test-args --nocapture`
2018-03-16T15:19:28 #rustdoc <rustbot> [PR 49064] <open> rustdoctest: suppress the default allow(unused) under --display-warnings <https://github.com/rust-lang/rust/pull/49064>
2018-03-16T15:20:14 #rustdoc <misdreavus> oddly enough, doctest stdout is still hidden from --nocapture >_>
2018-03-16T15:20:50 #rustdoc <misdreavus> onur: i've heard that the "default target" setting on docs.rs isn't working for winapi. is this a known issue?
2018-03-16T15:21:05 #rustdoc <onur> yes misdreavus 
2018-03-16T15:21:11 #rustdoc <onur> default-target is not implemented yet
2018-03-16T15:21:13 #rustdoc <misdreavus> aha
2018-03-16T15:21:29 #rustdoc <WindowsBunny> misdreavus: if it was, it would be working for winapi already >:(
2018-03-16T15:21:43 #rustdoc <misdreavus> i thought it was a bug, not that it wasn't implemented >_>
2018-03-16T15:32:26 #rustdoc <WindowsBunny> onur: Would sending you pictures of cute rabbits get default-target implemented any faster?
2018-03-16T15:33:42 #rustdoc <onur> haha idk WindowsBunny
2018-03-16T15:34:13 #rustdoc <WindowsBunny> !lick @ onur
2018-03-16T15:34:13 #rustdoc <rustbot> onur: https://i.imgur.com/Q56adUQ.gifv
2018-03-16T15:35:20 #rustdoc <WindowsBunny> !bunroll @ onur
2018-03-16T15:35:20 #rustdoc <rustbot> onur: https://i.imgur.com/xywBfqu.gifv
2018-03-16T15:36:05 #rustdoc <misdreavus> hop flop and roll
2018-03-16T15:42:39 #rustdoc <misdreavus> another quirk of --display-warnings: it's supposed to affect regular documentation too, by adding allow(warnings) to the compilation
2018-03-16T15:42:51 #rustdoc <misdreavus> the problem: warnings aren't emitted anyway!
2018-03-16T15:44:58 #rustdoc <misdreavus> i'm struggling to find something --display-warnings does that is either not covered by some other flag or not rendered useless by a bug
2018-03-16T16:11:19 #rustdoc <imperio> misdreavus: it's super complicated --no-capture issue
2018-03-16T16:11:29 #rustdoc <misdreavus> i figured as much
2018-03-16T16:11:32 #rustdoc <imperio> I'll need a bit of time before getting back to it because it's quite complicated haha
2018-03-16T16:11:35 #rustdoc <misdreavus> i remember you talking about it
2018-03-16T16:11:41 #rustdoc <imperio> ah maybe
2018-03-16T16:11:45 #rustdoc <imperio> I gave a first look yes
2018-03-16T16:11:56 #rustdoc <imperio> I was had something "working", but not completely
2018-03-16T18:30:48 #rustdoc <misdreavus> farther research on --display-warnings https://github.com/rust-lang/rust/issues/41574#issuecomment-373804164
2018-03-16T18:30:53 #rustdoc <misdreavus> i'm going to ignore this flag for now
2018-03-16T19:44:47 #rustdoc <misdreavus> hmmmmm, i'm not sure we could ever commit to stabilizing --themes/--theme-checker
2018-03-16T19:45:00 #rustdoc <misdreavus> they're too fragile, we don't guarantee the contents of main.css
2018-03-16T19:53:33 #rustdoc <misdreavus> not without versioning our themes or something like that
2018-03-16T20:11:29 #rustdoc <misdreavus> hmm, should i *really* mention force-unstable-if-unmarked? that's hardly useful for rustdoc, and purely an implementation detail of the compiler/libstd
2018-03-19T15:38:46 #rustdoc <misdreavus> imperio: so for {!gh 49152}, it looks like the main change is (1) to only handle Escape when the search box is focused, and (2) stop bailing early if the search results are being shown?
2018-03-19T15:38:47 #rustdoc <rustbot> [PR 49152] <open> Fix events handling in rustdoc <https://github.com/rust-lang/rust/pull/49152>
2018-03-19T15:38:58 #rustdoc <misdreavus> just making sure i understand it correctly
2018-03-19T15:47:51 #rustdoc <imperio> misdreavus: yep
2018-03-19T16:00:14 #rustdoc <misdreavus> sweet
2018-03-19T16:02:31 #rustdoc <technetos> Hi guys, I am using docs generated by cargo doc on nightly and am unable to type an s in the search box 
2018-03-19T16:03:09 #rustdoc <misdreavus> known issue
2018-03-19T16:03:10 #rustdoc <misdreavus> ~gh 49075
2018-03-19T16:03:13 #rustdoc <misdreavus> !gh 49075
2018-03-19T16:03:13 #rustdoc <rustbot> [Issue 49075] <open> Cannot type letter 's' into search box in Nightly Rust Doc [1.26.0-nightly (392645394 2018-03-15)] <https://github.com/rust-lang/rust/issues/49075>
2018-03-19T16:03:23 #rustdoc <misdreavus> i'm about to approve a PR that fixes it, actually :P
2018-03-19T16:03:26 #rustdoc <technetos> good to know :)
2018-03-19T19:04:59 #rustdoc <ml47> misreavus: Concerning the issue https://github.com/rust-lang/rust/issues/49174, is it just enough to check, whether the string starts with "#[macro_use] extern crate"? I intuitively think that "#[macro_use] <tab> extern crate" (or something similar) should also be also moved to the front.
2018-03-19T19:05:13 #rustdoc <ml47> misdreavus: Concerning the issue https://github.com/rust-lang/rust/issues/49174, is it just enough to check, whether the string starts with "#[macro_use] extern crate"? I intuitively think that "#[macro_use] <tab> extern crate" (or something similar) should also be also moved to the front.
2018-03-19T19:05:31 #rustdoc <misdreavus> hmm, i hadn't considered tabs
2018-03-19T19:07:08 #rustdoc <misdreavus> are tabs in that position valid? i assume so, but it seems like a weird place to put it
2018-03-19T19:09:46 #rustdoc <misdreavus> hmm, looks like it's valid
2018-03-19T19:09:56 #rustdoc <misdreavus> https://play.rust-lang.org/?gist=2855e60f8e4bbfa51474f11579423559&version=stable
2018-03-19T19:10:54 #rustdoc <misdreavus> ml47: if you want to check for the tab version, be my guest, but i wouldn't demand it
2018-03-19T19:11:21 #rustdoc <ml47> You can even do this: https://play.rust-lang.org/?gist=b8d6a3836d216bc95d0705de4b6c4eab&version=stable
2018-03-19T19:11:35 #rustdoc <misdreavus> lol
2018-03-19T19:11:50 #rustdoc <misdreavus> i think we can safely ignore those
2018-03-19T19:12:00 #rustdoc <misdreavus> this is a basic text comparison, not a proper parser
2018-03-19T19:12:06 #rustdoc <ml47> Yeah, just gonna do it for spaces now
2018-03-19T19:12:20 #rustdoc <misdreavus> (^^)b
2018-03-19T19:13:22 #rustdoc <ml47> How do I check, whether it works? Just `./x.py build --stage 1` ?
2018-03-19T19:13:48 #rustdoc <misdreavus> if you want to build rustdoc, `x.py build --stage 1 src/tools/rustdoc` works for me
2018-03-19T19:14:02 #rustdoc <ml47> ok, just gonna do that before committing
2018-03-19T19:14:04 #rustdoc <misdreavus> (if you want to use it to render other docs, add `src/libstd` to the command as well)
2018-03-19T19:14:16 #rustdoc <ml47> kk
2018-03-19T19:14:31 #rustdoc <misdreavus> there's a cheat sheet here https://rust-lang-nursery.github.io/rustc-guide/rustdoc.html
2018-03-19T19:14:56 #rustdoc <ml47> ty :)
2018-03-19T19:15:01 #rustdoc <misdreavus> (also a lot of words about how rustdoc works, but the cheat sheet is at the top)
2018-03-19T19:16:35 #rustdoc <ml47> Well, technically this wouldn't work, right? Shouldn't it be `./x.py` instead of `x.py`?
2018-03-19T19:16:48 #rustdoc <misdreavus> i'm being generic, but yes
2018-03-19T19:17:15 #rustdoc <misdreavus> the style i'm used to seeing leaves out the leading `./` because on windows you actually run it via python directly: `python x.py`
2018-03-19T19:17:35 #rustdoc <ml47> Oh, alright.
2018-03-19T19:33:02 #rustdoc <ml47> Btw. what means `cc` on github?
2018-03-19T19:33:24 #rustdoc <misdreavus> like when someone says "cc @SomeUsername" ?
2018-03-19T19:33:41 #rustdoc <misdreavus> or "cc #some_issue" ?
2018-03-19T19:33:54 #rustdoc <misdreavus> nothing really
2018-03-19T19:34:20 #rustdoc <ml47> cc @SomeUsername
2018-03-19T19:34:21 #rustdoc <misdreavus> when someone mentions a user that user gets a notification and email, when someone links an issue number a reference appears in the other issue
2018-03-19T19:34:25 #rustdoc <ml47> means nothing? ^^
2018-03-19T19:34:37 #rustdoc <misdreavus> so linking another user brings the pr/issue to their attention
2018-03-19T19:34:49 #rustdoc <misdreavus> it's nothing particular to github other than the notification
2018-03-19T19:34:53 #rustdoc <ml47> ok, I see
2018-03-19T19:35:17 #rustdoc <misdreavus> it's not like "fixes/closes #issue" where it will automatically close that issue
2018-03-19T22:21:24 #rustdoc <imperio> Manishearth: misdreavus: your code on "automatic linking" is pretty good!
2018-03-19T22:21:33 #rustdoc <imperio> I had no problem getting into it and solved an issue
2018-03-19T22:21:36 #rustdoc * imperio feels proud
2018-03-19T22:21:38 #rustdoc <imperio> haha
2018-03-19T22:21:48 #rustdoc <misdreavus> oh, the intra links?
2018-03-19T22:21:53 #rustdoc <misdreavus> thanks!
2018-03-19T22:22:05 #rustdoc <imperio> I really love this feature
2018-03-19T22:22:17 #rustdoc <imperio> I can't to have it on stable so I can use it in gtk-rs as well
2018-03-19T22:22:23 #rustdoc <imperio> we'll *finally* have working urls
2018-03-19T22:22:26 #rustdoc <misdreavus> heh
2018-03-19T22:22:28 #rustdoc <imperio> (don't want to do it myself...)
2018-03-19T22:22:38 #rustdoc <misdreavus> it has a long way to go, sadly
2018-03-19T22:23:20 #rustdoc <imperio> yes I know...
2018-03-19T22:23:26 #rustdoc <imperio> so I try to bring my help
2018-03-19T22:23:27 #rustdoc <imperio> slowly
2018-03-19T22:23:29 #rustdoc <imperio> but still
2018-03-19T22:26:12 #rustdoc <imperio> I take my shower and I push
2018-03-19T22:26:23 #rustdoc <misdreavus> <3
2018-03-19T22:26:25 #rustdoc <imperio> misdreavus: oh btw, I updated my PR for the generic atomic docs
2018-03-19T22:26:39 #rustdoc <misdreavus> ah, cool
2018-03-19T22:26:56 #rustdoc <imperio> that sounded very french as an answer haha
2018-03-19T22:27:04 #rustdoc <misdreavus> lol
2018-03-19T22:51:17 #rustdoc <ml47> misdreavus: anything todo before starting the pull request? https://github.com/memoryleak47/rust
2018-03-19T22:52:20 #rustdoc <misdreavus> oh, can you put that commit on a new branch? https://stackoverflow.com/questions/1628563/move-the-most-recent-commits-to-a-new-branch-with-git
2018-03-19T22:53:29 #rustdoc <misdreavus> otherwise that looks great!
2018-03-19T22:53:38 #rustdoc <ml47> alright (:
2018-03-19T23:07:16 #rustdoc <ml47> misdreavus: Ok, pull request is out! thanks for the mentoring! :D
2018-03-19T23:13:20 #rustdoc <imperio> misdreavus: https://github.com/rust-lang/rust/pull/49189
2018-03-19T23:13:22 #rustdoc <imperio> tadam :D
2018-03-22T01:25:25 #rustdoc <alercah> joined your domain in case there's further discussion
2018-03-22T01:25:54 #rustdoc <alercah> https://github.com/rust-lang/rust/issues/48069
2018-03-22T01:28:44 #rustdoc <misdreavus> lol, welcome... to my domain
2018-03-22T01:28:56 #rustdoc <misdreavus> it's, uh, pretty quiet here
2018-03-22T10:49:10 #rustdoc <steveklabnik> hehe :)
2018-03-22T21:19:33 #rustdoc <alercah> wait, where's the rustdoc repo?
2018-03-22T21:19:38 #rustdoc <alercah> or is it just in rust?
2018-03-22T21:20:05 #rustdoc <alercah> oh found it
2018-03-22T21:20:54 #rustdoc <misdreavus> yeah, the current rustdoc is just in rust
2018-03-22T21:54:42 #rustdoc <misdreavus> !gh 49286
2018-03-22T21:54:42 #rustdoc <rustbot> [PR 49286] <open> rustdoc: move the "important traits" button to beside the type <https://github.com/rust-lang/rust/pull/49286>
2018-03-22T21:55:12 #rustdoc <misdreavus> imperio: ^ i fear this will take some convincing for you to approve this
2018-03-22T22:26:14 #rustdoc <alercah> misdreavus: I'm looking at the src thing for trait item impls and have no idea where to look; I can't find it in the renderer so maybe it's not being populated at all to begin with?
2018-03-22T22:26:56 #rustdoc <misdreavus> making src links requires an extra wrapper where you need them
2018-03-22T22:28:30 #rustdoc <alercah> oh?
2018-03-22T22:29:10 #rustdoc <misdreavus> i'm trying to dig up a previous pr where someone added src links to something else
2018-03-22T22:29:54 #rustdoc <alercah> ah cool, thanks :)
2018-03-22T22:31:59 #rustdoc <misdreavus> https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/render.rs#L2247-L2252
2018-03-22T22:32:02 #rustdoc <misdreavus> here's the basic structure
2018-03-22T22:32:24 #rustdoc <misdreavus> you need a clean::Item, then you wrap it in a render::Item and call src_href()
2018-03-22T22:32:43 #rustdoc <misdreavus> that looks for the link to the source view if it exists, and returns the url that you can paste in
2018-03-22T22:32:55 #rustdoc <misdreavus> so for trait functions...
2018-03-22T22:33:36 #rustdoc <misdreavus> you could probably add a thing here https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/render.rs#L2386
2018-03-22T22:34:31 #rustdoc <misdreavus> it would probably add links to associated items and consts, but it'll get the job done, lol
2018-03-22T22:35:23 #rustdoc <misdreavus> s/items/types/
2018-03-22T22:35:54 #rustdoc <misdreavus> oh wait, you were looking for impls
2018-03-22T22:36:06 #rustdoc <misdreavus> that's for provided functions, on the trait page
2018-03-22T22:40:15 #rustdoc <misdreavus> here's where impls are written https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/render.rs#L3309
2018-03-22T22:41:02 #rustdoc <misdreavus> from what it looks like, here's where methods from traits that weren't overridden are printed https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/render.rs#L3451
2018-03-22T22:41:49 #rustdoc <misdreavus> so you can use the check there to pass some kind of flag to make your indicator
2018-03-22T22:42:41 #rustdoc <alercah> right now I was just looking at source for trait items, yeah
2018-03-22T22:43:07 #rustdoc <alercah> since that one doesn't have controversy about the way to flag
2018-03-22T22:43:16 #rustdoc <misdreavus> okay cool
2018-03-22T22:44:09 #rustdoc <misdreavus> i need to head out, but hopefully that's enough to get you started?
2018-03-22T22:56:00 #rustdoc <alercah> I think so, I'll take a look1
2018-03-23T13:35:46 #rustdoc <misdreavus> imperio: ;_;
2018-03-23T13:35:57 #rustdoc <imperio> misdreavus: ?
2018-03-23T13:36:02 #rustdoc <misdreavus> https://github.com/rust-lang/rust/pull/49286#issuecomment-375606464
2018-03-23T13:36:18 #rustdoc <imperio> misdreavus: it makes the output even more heavy
2018-03-23T13:38:20 #rustdoc <misdreavus> in terms of "html generated"?
2018-03-23T13:40:54 #rustdoc <misdreavus> if it's about the circle-i appearing in more places than before, that can be changed
2018-03-23T13:41:05 #rustdoc <misdreavus> but the placement of it is the *most common* complaint about the feature
2018-03-23T13:44:33 #rustdoc <misdreavus> if anything, the removal of the tooltip makes it emit less output
2018-03-23T13:56:03 #rustdoc <imperio> no, I mean the rendering
2018-03-23T13:56:05 #rustdoc <imperio> it's heavier
2018-03-23T13:56:15 #rustdoc <imperio> more information
2018-03-23T13:56:20 #rustdoc <imperio> and not very pertinent
2018-03-23T14:11:45 #rustdoc <misdreavus> :/
2018-03-23T19:15:05 #rustdoc <squishy_clouds> recently found out that this channel exists, thought there was just #rust-docs
2018-03-23T19:15:31 #rustdoc <misdreavus> #rust-docs is for the documentation team, this is specifically for the rustdoc tool
2018-03-23T19:15:47 #rustdoc <squishy_clouds> well i know that now...
2018-03-23T19:15:58 #rustdoc <misdreavus> oh, heh
2018-03-23T19:16:09 #rustdoc <misdreavus> it's fairly new, and conversations still tend to happen in both
2018-03-23T19:16:52 #rustdoc <squishy_clouds> personally i think the circle-i thing is kind of weird, given that  most info in rustdoc is inline, but you have to click to see the important/spotlight traits
2018-03-23T19:17:14 #rustdoc <misdreavus> the very first version had them inline with the documentation for the function, and it was shot down
2018-03-23T19:17:26 #rustdoc <misdreavus> it seems anything is too noisy >_>
2018-03-23T19:19:03 #rustdoc <misdreavus> enjoy some history {!gh 45039}
2018-03-23T19:19:04 #rustdoc <rustbot> [PR 45039] <merged> show in docs whether the return type of a function impls Iterator/Read/Write <https://github.com/rust-lang/rust/pull/45039>
2018-03-23T19:22:06 #rustdoc <misdreavus> i still like the design from https://github.com/rust-lang/rust/pull/45039#issuecomment-342528108 but the double toggle wrapper meant it got shot down as well
2018-03-23T19:32:47 #rustdoc <squishy_clouds> hmm
2018-03-23T19:33:48 #rustdoc <squishy_clouds> fwiw i think the circle thingy being on the right near the type its talking about makes more sense than it being to side
2018-03-23T19:34:16 #rustdoc <squishy_clouds> should probably get around to making a github account so i can say this kind of stuff on the github issues
2018-03-23T19:34:26 #rustdoc <misdreavus> heh
2018-03-23T19:39:22 #rustdoc <squishy_clouds> the Read trait has #[doc(spotlight)] on it right?
2018-03-23T19:39:33 #rustdoc <misdreavus> yup
2018-03-23T19:39:57 #rustdoc <misdreavus> it's less useful since things like File don't have functions that return one directly
2018-03-23T19:40:11 #rustdoc <misdreavus> it's usually through a Result, which muddies things
2018-03-23T19:40:29 #rustdoc <squishy_clouds> yeah, all of the functions returning a Read type i can find do it in a Result
2018-03-23T19:40:43 #rustdoc <squishy_clouds> the spotlight thing doesn't seem to show up for Results
2018-03-23T19:41:00 #rustdoc <misdreavus> right
2018-03-23T19:41:13 #rustdoc <misdreavus> because Result itself doesn't implement any of those traits
2018-03-23T19:42:47 #rustdoc <squishy_clouds> feels to me like it should show the spotlight thing anyways but idk
2018-03-23T19:43:18 #rustdoc <squishy_clouds> since you're usually going to be using the thing in the result anyways
2018-03-23T19:43:26 #rustdoc <misdreavus> it takes special-casing Option/Result
2018-03-23T19:44:05 #rustdoc <misdreavus> or generally looking in the (first?) type param of a thing you're looking at
2018-03-23T19:45:07 #rustdoc <squishy_clouds> could probably be done with something like a #[doc(propagate_spotlight)] attribute
2018-03-23T19:45:18 #rustdoc <squishy_clouds> probably with a better name...
2018-03-23T19:45:45 #rustdoc <misdreavus> heh
2018-03-23T20:32:31 #rustdoc <imperio> misdreavus: we will be able to talk again this PR next week
2018-03-23T20:32:33 #rustdoc <imperio> full time
2018-03-23T20:32:41 #rustdoc <imperio> and figure out a better way to display it
2018-03-23T20:32:45 #rustdoc <misdreavus> o7
2018-03-23T20:32:48 #rustdoc <imperio> (I just remembered that)
2018-03-23T20:32:59 #rustdoc <imperio> you know when we start on monday?
2018-03-23T20:33:06 #rustdoc <imperio> I don't recall seeing anything about schedules
2018-03-23T20:33:11 #rustdoc <imperio> otherwise I'm just gonna sleep
2018-03-23T20:33:12 #rustdoc <imperio> a lot
2018-03-23T20:33:21 #rustdoc <misdreavus> one of the emails had a schedule thing on it
2018-03-23T20:33:27 #rustdoc <imperio> oh come on
2018-03-23T20:33:31 #rustdoc <imperio> how could I miss it...
2018-03-23T20:33:45 #rustdoc <misdreavus> i think each day starts with like breakfast at 830 and full-assembly presentation at 9?
2018-03-23T20:34:00 #rustdoc <imperio> uuuurg
2018-03-23T20:34:02 #rustdoc <imperio> I'm gonna die
2018-03-23T20:34:03 #rustdoc <misdreavus> it was a google sheet
2018-03-23T20:34:11 #rustdoc <imperio> yes, just found it
2018-03-23T20:34:28 #rustdoc <imperio> we have presentations?
2018-03-23T20:34:35 #rustdoc <imperio> that's a bit weird but why not XD
2018-03-23T20:34:43 #rustdoc <imperio> and there is a rust meetup on tuesday
2018-03-23T20:34:46 #rustdoc <misdreavus> yeah
2018-03-23T20:34:49 #rustdoc <imperio> lucky people attending it haha
2018-03-23T20:35:04 #rustdoc <misdreavus> the all-hands presentations are like things that they want all of us to know about, i guess
2018-03-23T20:35:09 #rustdoc <misdreavus> i don't remember all their topics tho >_>
2018-03-23T20:35:53 #rustdoc <misdreavus> then the per-team things are organized per-team, i think steve put together a few topics for the docs team sessions but it seemed fairly open
2018-03-23T20:35:54 #rustdoc <imperio> I'm reading them right now
2018-03-23T20:36:01 #rustdoc <imperio> oh I'll miss events friday evening
2018-03-23T20:36:11 #rustdoc <imperio> (I'm leaving on friday at 8 pm)
2018-03-23T20:36:17 #rustdoc <misdreavus> aww
2018-03-23T20:36:35 #rustdoc <imperio> well, hard times for my girlfriend so I prefer coming back quickly
2018-03-23T20:37:05 #rustdoc <misdreavus> ah, makes sense
2018-03-23T20:37:22 #rustdoc <imperio> isn't it? :)
2018-03-23T20:37:29 #rustdoc <imperio> I made a new pr to fix IE11 search
2018-03-23T20:37:33 #rustdoc <misdreavus> i saw
2018-03-23T20:37:35 #rustdoc <imperio> I'll need to check it though
2018-03-23T20:37:42 #rustdoc <imperio> but win10 doesn't seem to have it
2018-03-23T20:37:46 #rustdoc <imperio> it's a bit frustrating
2018-03-23T20:37:54 #rustdoc <imperio> I'll take a look at the link you gave me
2018-03-23T20:37:56 #rustdoc <imperio> ...
2018-03-23T20:37:57 #rustdoc <imperio> somewhere
2018-03-23T20:38:04 #rustdoc <misdreavus> modern.ie
2018-03-23T20:38:16 #rustdoc <imperio> ah thanks
2018-03-23T20:38:28 #rustdoc <misdreavus> the full link was in the "tiered browser support" tracking issue, but that will get you to the VMs in a few clicks
2018-03-23T20:38:52 #rustdoc <imperio> vms
2018-03-23T20:38:54 #rustdoc <imperio> uuuuuuurg
2018-03-23T20:38:58 #rustdoc <misdreavus> lol
2018-03-23T20:39:39 #rustdoc <imperio> if I say it works on modern browsers, is it good enough? :D
2018-03-23T20:39:58 #rustdoc <misdreavus> not according to that one person
2018-03-23T20:40:59 #rustdoc <imperio> I meant my pr
2018-03-23T20:41:23 #rustdoc <imperio> the sad thing being that rustdoc works even on ie7
2018-03-23T20:41:30 #rustdoc <imperio> I assured myself of this
2018-03-23T20:41:42 #rustdoc <imperio> but I never imagined that startsWith could be missing
2018-03-23T20:41:47 #rustdoc <misdreavus> oh, if you pr works on modern browsers it means nothing because IE is the culprit
2018-03-23T20:42:57 #rustdoc <imperio> damn, am I this bad at making joke? :'(
2018-03-23T20:44:00 #rustdoc <misdreavus> >_>
2018-03-23T20:45:11 #rustdoc <misdreavus> like, the "modern browsers" thinking is what created this PR in the first place, so even with the ":D" i kinda wanted to shoot down that line of thought
2018-03-23T20:45:39 #rustdoc <misdreavus> anyway, i copied the diff into a doc rendering i already had sitting around, so let's take a look
2018-03-23T20:46:05 #rustdoc <misdreavus> fortunately, my work computer only has IE11 and chrome, lol
2018-03-23T20:47:53 #rustdoc <misdreavus> good news, the search works
2018-03-23T20:49:34 #rustdoc <misdreavus> the stability indicator and [src] links seem to be printed on top of each other, tho
2018-03-23T20:52:04 #rustdoc <misdreavus> it also found a spot where my doc(spotlight) pr was breaking stuff, so that's nice
2018-03-23T20:52:39 #rustdoc <imperio> I'm the "only" (not sure about this statement) one who fought against the current browser support
2018-03-23T20:52:52 #rustdoc <imperio> I wanted to continue to include officially browsers like IE7
2018-03-23T20:52:57 #rustdoc <misdreavus> oh right
2018-03-23T20:53:09 #rustdoc <imperio> so it was really just a joke
2018-03-23T20:53:15 #rustdoc <misdreavus> i think i misread your joke, sorry >_>
2018-03-23T20:53:19 #rustdoc <imperio> it's supposed to work, whatever the browser
2018-03-23T20:53:30 #rustdoc <imperio> unofficially, we support even IE6
2018-03-23T20:53:36 #rustdoc <imperio> I made sure of that
2018-03-23T20:54:22 #rustdoc <misdreavus> nice
2018-03-23T20:59:55 #rustdoc <imperio> isn't it
2018-03-23T20:59:59 #rustdoc <imperio> try it out some times
2018-03-23T21:00:01 #rustdoc <imperio> :)
2018-03-23T21:00:34 #rustdoc <imperio> it could be a selling point of trying out rust: "it's amazing docs even handle IE6, even though no one does anymore!"
2018-03-23T21:00:37 #rustdoc <imperio> *its
2018-03-23T21:00:46 #rustdoc <misdreavus> lol
2018-03-23T21:02:01 #rustdoc <misdreavus> of course, someone's going to come along and test that
2018-03-23T21:02:21 #rustdoc <imperio> mouhahaha
2018-03-23T21:02:28 #rustdoc <imperio> functionalities work
2018-03-23T21:02:28 #rustdoc <misdreavus> the modern.ie VMs only go back to IE8 >_>
2018-03-23T21:02:34 #rustdoc <imperio> some fancy css3 might not
2018-03-23T21:02:41 #rustdoc <imperio> ah, that's too bad
2018-03-23T21:02:45 #rustdoc <imperio> where's the fun...
2018-03-23T21:02:48 #rustdoc <misdreavus> lol
2018-03-23T21:03:05 #rustdoc <imperio> oh, there're only 2040 contributors to rust
2018-03-23T21:03:11 #rustdoc <imperio> I thought we were so much more than that
2018-03-23T21:54:05 #rustdoc <imperio> misdreavus: do you know where in rustdoc we handle "#[path = something.rs]"?
2018-03-23T22:06:31 #rustdoc <misdreavus> plain path attributes? rustdoc doesn't handle those, rustc does
2018-03-23T22:09:19 #rustdoc <imperio> misdreavus: ah?
2018-03-23T22:09:22 #rustdoc <imperio> badly then
2018-03-23T22:09:29 #rustdoc <imperio> it causes a loss of session/context
2018-03-23T22:09:33 #rustdoc <misdreavus> oh dear
2018-03-23T22:09:43 #rustdoc <imperio> which causes a bug in rustdoc
2018-03-23T22:09:50 #rustdoc <imperio> that's why I asked
2018-03-23T22:10:52 #rustdoc <imperio> then it's in liburstc_metadata I assume
2018-03-23T22:10:57 #rustdoc <imperio> just need to find where exactly...
2018-03-23T22:12:02 #rustdoc <misdreavus> pretty sure it's libsyntax
2018-03-23T22:12:10 #rustdoc <misdreavus> from a quick ripgrep of my local clone
2018-03-23T22:12:21 #rustdoc <imperio> no, in the backtrace we don't go in there
2018-03-23T22:12:41 #rustdoc <imperio> there is a "provide_extern" in librustc_metadata
2018-03-23T22:12:52 #rustdoc <imperio> I think it's from there (but maybe I'm completely wrong...)
2018-03-23T22:13:41 #rustdoc <misdreavus> oh, i'm just looking at where #[path] attributes might be read, based on where the string `"path"` is
2018-03-23T22:14:30 #rustdoc <misdreavus> if the bug manifests somewhere else, then it's not being handled properly
2018-03-23T22:14:43 #rustdoc <imperio> yes, trying to figure where exactly
2018-03-23T22:14:56 #rustdoc <imperio> the loss of context, I'm not sure where it takes place
2018-03-23T22:18:51 #rustdoc <misdreavus> "If you encounter this, it's your own darn fault" rofl https://github.com/rust-lang/rust/blob/master/src/libsyntax/parse/parser.rs#L6113-L6119
2018-03-23T22:20:09 #rustdoc <imperio> XD
2018-03-23T22:26:41 #rustdoc <misdreavus> oh wow, that comment's pretty recent
2018-03-24T15:17:59 #rustdoc <imperio> misdreavus: another pr to fix the automatic linker
2018-03-24T15:18:07 #rustdoc <imperio> however, I'm worried of its future evolutions
2018-03-24T15:18:15 #rustdoc <imperio> everything seems to be redefined in it
2018-03-24T15:18:21 #rustdoc <imperio> which seems... not very efficient
2018-03-25T14:06:43 #rustdoc <imperio> misdreavus: when do you arrive in berlin?
2018-03-25T18:59:34 #rustdoc <misdreavus> imperio: oops lol, i arrived around 16:00 i think, i'm about to go to bed actually
2018-03-28T14:53:03 #rustdoc <imperio> Manishearth: piiiiing
2018-03-28T14:53:23 #rustdoc <imperio> do you know how I can get which compiler version I'm running? (I mean: nightly/beta/stable)
2018-03-29T04:36:02 #rustdoc <Manishearth> imperio: rustc -V ?
2018-03-29T14:09:14 #rustdoc <imperio> misdreavus: I'm almost done adding a page with every item from the crate in it
2018-03-29T14:09:26 #rustdoc <misdreavus> :o
2018-03-29T14:09:53 #rustdoc <imperio> since apparently it's under very high demand
2018-03-29T14:10:08 #rustdoc <imperio> just need to make the urls correct but otherwise almost done
2018-03-29T14:10:14 #rustdoc <misdreavus> that's awesome!
2018-03-29T14:10:20 #rustdoc <misdreavus> steveklabnik: ^
2018-03-29T14:10:43 #rustdoc <steveklabnik> :D
2018-03-29T22:51:55 #rustdoc <WindowsBunny> misdreavus: You know, because winapi is such a universal dependency on windows, rustdoc taking forever on it basically makes cargo doc unusable for any sizable windows project
2018-03-29T23:10:42 #rustdoc <squishy_clouds> I was just having that problem too 
2018-03-29T23:11:16 #rustdoc <squishy_clouds> thought it was a bug in rustdoc or something, it was just winapi taking ten whole minutes to document
2018-03-29T23:12:52 #rustdoc <squishy_clouds> i suppose one way to help with that would be to let people exclude some of their dependencies from being documented
2018-03-29T23:15:01 #rustdoc <WindowsBunny> squishy_clouds: Ideally rustdoc wouldn't create so many files for winapi, but it turns out it's really hard to come up with a way to do that without making docs inaccessible to a large number of people
2018-04-02T21:43:16 #rustdoc * misdreavus grumbles about commits which contain unrelated changes
2018-04-02T21:57:14 #rustdoc <imperio> misdreavus: mine?
2018-04-02T21:57:24 #rustdoc <misdreavus> yeah :/
2018-04-02T21:57:52 #rustdoc <misdreavus> i'm reading the "resolution failure warnings" pr now
2018-04-02T21:58:42 #rustdoc <imperio> ah?
2018-04-02T21:58:49 #rustdoc <imperio> I'm generally super careful about that
2018-04-02T21:58:51 #rustdoc <misdreavus> i don't mind that it introduces the rustdoc-ui test directory, but the fact that the bootstrap RustdocUi struct is introduced in the first commit (that primarily modifies rustdoc) is awkward
2018-04-02T21:58:55 #rustdoc <imperio> I suppose I failed...
2018-04-02T21:59:04 #rustdoc <misdreavus> https://github.com/rust-lang/rust/pull/49542/commits/41a7ef7e50db10b7985df86947d54c3112e8c3cb
2018-04-02T21:59:18 #rustdoc <misdreavus> i'm also thinking about the odd reformattings that sometimes occur in your prs
2018-04-02T21:59:42 #rustdoc <imperio> ah shit
2018-04-02T21:59:48 #rustdoc <imperio> this should have gone into the second commit
2018-04-02T22:00:40 #rustdoc <imperio> btw, have invited onur or not yet?
2018-04-02T22:00:50 #rustdoc <misdreavus> i have not
2018-04-02T22:01:25 #rustdoc <misdreavus> i'm still uncertain of the ordering between inviting onur, absorbing docs.rs, and the "officialness" rfc opening
2018-04-02T22:03:00 #rustdoc <imperio> nrc: ^
2018-04-02T22:03:08 #rustdoc <imperio> like that we'll know
2018-04-02T22:03:19 #rustdoc <misdreavus> steveklabnik: ^ as well
2018-04-02T22:05:03 #rustdoc <imperio> indeed
2018-04-02T22:06:10 #rustdoc <imperio> misdreavus: just opened a new PR
2018-04-02T22:06:18 #rustdoc <imperio> I'm going back to my usual pr opening rate
2018-04-02T22:06:21 #rustdoc <misdreavus> heh
2018-04-02T22:06:26 #rustdoc <imperio> you can relax now ;)
2018-04-02T22:06:39 #rustdoc <misdreavus> lol thanks <3
2018-04-02T22:18:52 #rustdoc <imperio> misdreavus: about https://github.com/rust-lang/rust/pull/49504, unless it's a bug, I prefer leave additional checks for further prs
2018-04-02T22:19:01 #rustdoc <imperio> like doc(inline)
2018-04-02T22:19:19 #rustdoc <imperio> however I was sure I added a test for it, I'm quite surprised...
2018-04-02T22:19:33 #rustdoc <misdreavus> i mean, there was no test whatsoever >_>
2018-04-02T22:19:36 #rustdoc <imperio> yes
2018-04-02T22:19:40 #rustdoc <imperio> that's what I just saw
2018-04-02T22:19:51 #rustdoc <imperio> I wrote one
2018-04-02T22:19:55 #rustdoc <imperio> just need to find it now XD
2018-04-02T22:20:35 #rustdoc <misdreavus> heh
2018-04-02T22:20:46 #rustdoc <misdreavus> if it's not super-fully-featured that's fine
2018-04-02T22:21:02 #rustdoc <misdreavus> just a thing that pokes the page to make sure it's there and has expected links is good
2018-04-02T22:21:51 #rustdoc <imperio> on that we agree
2018-04-02T22:21:56 #rustdoc <imperio> I think I just removed it
2018-04-02T22:21:57 #rustdoc <imperio> damn
2018-04-02T22:22:04 #rustdoc <imperio> I write one quickly before going to sleep
2018-04-02T22:22:08 #rustdoc <misdreavus> lol oops
2018-04-02T22:27:44 #rustdoc <imperio> you want it in a new commit or in the existing one btw?
2018-04-02T22:28:08 #rustdoc <imperio> misdreavus: ^
2018-04-02T22:28:36 #rustdoc <misdreavus> doesn't matter, make it a new one
2018-04-02T22:29:27 #rustdoc <imperio> ok
2018-04-02T23:06:12 #rustdoc <nrc> misdreavus: I don't think order is important - we can invite onur now (I thought he alreay was unofficially), I assume 'absorbing docs.rs' will take some time for various things, but you can start whenever, and the official-ness RFC should happen soon
2018-04-03T10:04:31 #rustdoc <steveklabnik> misdreavus: we can do the first two without the last one
2018-04-05T20:08:10 #rustdoc <misdreavus> !gh 49711
2018-04-05T20:08:10 #rustdoc <rustbot> [PR 49711] <open> Refactor auto trait handling in librustdoc to be accessible from librustc. <https://github.com/rust-lang/rust/pull/49711>
2018-04-05T20:08:11 #rustdoc <misdreavus> :o
2018-04-09T21:05:30 #rustdoc <imperio> misdreavus: https://github.com/rust-lang/rust/pull/49504 is ready btw
2018-04-09T21:05:36 #rustdoc <imperio> onur is waiting for it to update docs.rs
2018-04-09T21:05:55 #rustdoc <misdreavus> ack, i'll get to it
2018-04-09T21:06:04 #rustdoc <misdreavus> i spent today dealing with dayjob stuff
2018-04-09T21:06:50 #rustdoc <imperio> which seems normal :)
2018-04-09T21:06:55 #rustdoc <imperio> I did the same
2018-04-09T21:07:03 #rustdoc <imperio> we need to eat from time to time
2018-04-09T21:07:55 #rustdoc <imperio> and I need to make a post on reddit to announce new sysinfo version
2018-04-09T21:08:00 #rustdoc <imperio> I'm quite proud of it hehe
2018-04-09T21:08:32 #rustdoc <misdreavus> ooh
2018-04-09T21:09:08 #rustdoc <misdreavus> yeah, today was the day i converted from contract to full-time, so i had some training and forms to fill out
2018-04-09T21:09:20 #rustdoc <misdreavus> but i think i'm at a stalling point because the computer system hasn't caught up, lol
2018-04-09T21:12:10 #rustdoc <misdreavus> i was worried i wouldn't even be able to log into windows, but it seems like only some sites are having issues, not my entire accoutn
2018-04-09T21:16:13 #rustdoc <imperio> that's always good to take haha
2018-04-09T21:22:34 #rustdoc <misdreavus> i have a bunch of notifications from over the weekend but i'll try to get to the all.html PR today
2018-04-09T21:23:32 #rustdoc <misdreavus> thank you for the reminder
2018-04-09T21:30:26 #rustdoc <imperio> no problem
2018-04-09T21:30:35 #rustdoc <imperio> I'd like docs.rs to get updated
2018-04-09T21:30:53 #rustdoc <imperio> and onur and I agreed on doing it once all.html is merged
2018-04-09T21:31:15 #rustdoc <imperio> (because geal had issues with the 's' letter that couldn't be entered haha)
2018-04-09T21:31:38 #rustdoc <misdreavus> ah, yeah, i saw that conversation in #rust-docs 
2018-04-09T21:34:14 #rustdoc <imperio> then you know everything :)
2018-04-09T21:34:21 #rustdoc <imperio> btw, I'm very proud of https://www.reddit.com/r/rust/comments/8b27rg/new_sysinfo_version_huge_performance_improvements/
2018-04-09T21:34:28 #rustdoc <imperio> I worked on it this week-end
2018-04-09T21:46:33 #rustdoc <misdreavus> nice!
2018-04-09T21:46:51 #rustdoc <misdreavus> i need to get back to my rayon PR >_>
2018-04-09T21:47:00 #rustdoc <imperio> hehe
2018-04-09T21:47:37 #rustdoc <misdreavus> i've kinda let a few things just sit there since the all-hands
2018-04-09T21:47:54 #rustdoc <imperio> no need to hurry
2018-04-09T21:48:02 #rustdoc <imperio> it's important to take time for yourself as well
2018-04-09T21:48:17 #rustdoc <misdreavus> i tried to figure out how to make a "docs dashboard" by inspecting github PRs across several repos
2018-04-09T21:48:28 #rustdoc <imperio> oh right
2018-04-09T21:48:31 #rustdoc <misdreavus> but i hit snags in the major github rust libraries
2018-04-09T21:48:42 #rustdoc <misdreavus> so i might drop that
2018-04-09T21:48:48 #rustdoc <imperio> too bad...
2018-04-09T21:49:41 #rustdoc <misdreavus> if you'd like to take a look at https://github.com/softprops/hubcaps/issues/115 to remove the snag i found in hubcaps, be my guest :P
2018-04-09T21:50:13 #rustdoc <imperio> I didn't even know this repo
2018-04-09T21:51:00 #rustdoc <misdreavus> it's a serialize issue, they have things running through serde-json but their struct expects fields to be there that aren't
2018-04-09T21:51:31 #rustdoc <imperio> some fields should be optional I assume then (obvious man is back!)
2018-04-09T21:51:42 #rustdoc <misdreavus> at least, that's what i thought when i hit it
2018-04-09T21:51:53 #rustdoc <misdreavus> i haven't looked to hard in it because i hadn't ever touched the github api before this
2018-04-09T21:52:07 #rustdoc <imperio> I touched a lot of times
2018-04-09T21:52:15 #rustdoc <imperio> +it
2018-04-09T21:52:21 #rustdoc <imperio> it's a lot of json
2018-04-09T21:52:26 #rustdoc <imperio> and a lot of useless information
2018-04-09T21:52:36 #rustdoc <imperio> it's surprising that they send this much at this point
2018-04-09T21:52:39 #rustdoc <misdreavus> heh
2018-04-09T21:52:53 #rustdoc <misdreavus> i even looked at the graphql api but it doesn't expose the information i need (file diff info)
2018-04-09T21:53:07 #rustdoc <imperio> ah
2018-04-09T21:53:41 #rustdoc <misdreavus> also i didn't see an established crate for the graphql api >_>
2018-04-09T21:55:30 #rustdoc <misdreavus> alternately, i could give up on my dream of getting notified for every rustdoc pr, and just go back to a listing of nominated issues on all the docs repos
2018-04-09T21:55:52 #rustdoc <misdreavus> that doesn't need to go through the file diff listing, at least
2018-04-09T21:56:45 #rustdoc <imperio> that's still annoying though
2018-04-09T21:56:59 #rustdoc <imperio> I'd have appreciated to have a dashbord too
2018-04-09T21:57:31 #rustdoc <misdreavus> yeah
2018-04-09T22:12:10 #rustdoc <misdreavus> imperio: r+'d
2018-04-09T22:12:17 #rustdoc <imperio> thanks!
2018-04-09T22:12:40 #rustdoc <misdreavus> imperio: out of curiosity, what editor do you use? i keep seeing github's diffs point out that there's no ending newline in files when you edit them
2018-04-09T22:12:56 #rustdoc <imperio> sublime text
2018-04-09T22:13:04 #rustdoc <misdreavus> nice
2018-04-09T22:13:22 #rustdoc <imperio> I find it beautiful :)
2018-04-09T22:13:30 #rustdoc <misdreavus> it's like, super irrelevant, but just a thing i noticed
2018-04-09T22:13:38 #rustdoc <imperio> that's a good point
2018-04-09T22:13:47 #rustdoc <misdreavus> i use vim and it will automatically add these newlines back
2018-04-09T22:14:31 #rustdoc <misdreavus> (i don't mean that it being beautiful is irrelevant, just the observation of missing trailing newlines)
2018-04-09T22:14:42 #rustdoc <misdreavus> (>_>)
2018-04-09T22:14:58 #rustdoc <misdreavus> anyway, yeah
2018-04-09T22:15:41 #rustdoc <misdreavus> it's 5pm and i'm finally caught up on twitter from having to set it down this morning
2018-04-09T22:18:21 #rustdoc <imperio> I use vim only when I only have console
2018-04-09T22:18:32 #rustdoc <imperio> with graphic environment, I just use sublime
2018-04-09T22:18:43 #rustdoc <misdreavus> yeha
2018-04-09T22:18:45 #rustdoc <misdreavus> **yeah
2018-04-09T22:18:57 #rustdoc <misdreavus> i'm In Too Deep and got too used to vim
2018-04-09T22:30:59 #rustdoc <imperio> it was emacs for me
2018-04-09T22:31:18 #rustdoc <imperio> but emacs isn't installed by default
2018-04-09T22:31:28 #rustdoc <imperio> so I learnt vim a bit
2018-04-09T22:49:58 #rustdoc <misdreavus> yeah, for me i picked vim specifically because it was so exotic, and also so that i could use something in the terminal
2018-04-11T12:16:15 #rustdoc <monti> Hi! I have a strange warning in doctests in rustc 1.25, but not in nightly (1.26): "Code block is not currently run as a test, but will in future versions of rustdoc. Please ensure this code block is a runnable test, or use the `ignore` directive."
2018-04-11T12:16:16 #rustdoc <monti> Was it a bug in 1.25? Or "no_run" will be actually deleted anytime soon?
2018-04-11T12:20:57 #rustdoc <ollie27> monti: Could you share the rust code that is triggering that warning?
2018-04-11T12:22:49 #rustdoc <imperio> monti: just like ollie27 said
2018-04-11T12:29:02 #rustdoc <monti> Well, it turned out that it's the same error with newline absence (there is a couple of similar issues in github):
2018-04-11T12:29:02 #rustdoc <monti> Example:
2018-04-11T12:29:02 #rustdoc <monti> ```rust,no_run``` <-- here we go
2018-04-11T12:29:27 #rustdoc <monti> It was fixed in beta/nightly, it seems.
2018-04-11T12:30:04 #rustdoc <monti> Putting an extra newline before code block resolves it in stable.
2018-04-11T12:30:30 #rustdoc <monti> Anyway, thanks :)
2018-04-11T12:33:42 #rustdoc <imperio> luckily for us, we'll have no more of such issues when pulldown will hit stable
2018-04-11T14:10:16 #rustdoc <misdreavus> well, the warning will stop printing, and instead people's tests will start failing >_>
2018-04-11T14:14:34 #rustdoc <imperio> not my problem :)
2018-04-11T14:14:42 #rustdoc <misdreavus> >_>
2018-04-11T14:14:58 #rustdoc <imperio> I went through months of adding useless warnings
2018-04-11T14:15:13 #rustdoc <imperio> either they ignored them or not isn't of my concern
2018-04-11T14:15:51 #rustdoc <misdreavus> although i guess at this point that warning is the "reverse warning" where there were hoedown tests that pulldown didn't have?
2018-04-11T14:15:57 #rustdoc <misdreavus> since iirc pulldown is default now
2018-04-11T14:16:19 #rustdoc <imperio> I suppose
2018-04-11T14:16:31 #rustdoc <misdreavus> (actually i thought hoedown was already removed on stable >_>)
2018-04-11T14:17:38 #rustdoc <imperio> (I thought too XD)
2018-04-14T15:22:00 #rustdoc <imperio> misdreavus: https://github.com/rust-lang/rust/pull/49966
2018-04-14T15:22:04 #rustdoc <imperio> :)
2018-04-15T17:25:35 #rustdoc <brson> is there a way to force rustdoc / cargo to use the old markdown renderer?
2018-04-15T17:25:41 #rustdoc <brson> was it sundown? hoedown?
2018-04-15T17:25:56 #rustdoc <brson> I'm seeing 'differences' warnings that I don't understand
2018-04-15T17:26:00 #rustdoc <brson> steveklabnik: ^
2018-04-15T18:14:13 #rustdoc <imperio> brson: talking about hoedown?
2018-04-15T18:14:29 #rustdoc <imperio> (hi btw, it's been a long time!)
2018-04-15T18:14:49 #rustdoc <imperio> brson: and there is still (I think) in stable for the moment
2018-04-15T18:14:52 #rustdoc <imperio> but it won't last
2018-04-15T18:15:14 #rustdoc <imperio> brson: if you need help to fix warnings, just ask
2018-04-15T18:18:53 #rustdoc <brson> hi emperio
2018-04-15T18:19:12 #rustdoc <brson> yea is it possbile to switch renderers at the command line?
2018-04-15T18:22:55 #rustdoc <imperio> on stable it should yes
2018-04-15T18:23:04 #rustdoc <imperio> let me find you how
2018-04-15T18:23:27 #rustdoc <imperio> (but again, it's possible until next version comes out)
2018-04-15T18:24:04 #rustdoc <imperio> brson: rustdoc --disable-commonmark
2018-04-15T18:29:39 #rustdoc <brson> thanks imperio <#
2018-04-15T18:29:44 #rustdoc <brson> <#3
2018-04-15T18:29:55 #rustdoc <imperio> hope to see you around again ;)
2018-04-15T18:30:25 #rustdoc <brson> fwiw is the commonmark conversion moving to commonmark wholesale or are there any backcompat concessions for hoedown?
2018-04-15T18:30:48 #rustdoc <imperio> actually, it's as simple as this: hoedown had very weird issues
2018-04-15T18:31:03 #rustdoc <imperio> so for example, some codeblocks were not interpreted as such with hoedown
2018-04-15T18:31:14 #rustdoc <imperio> but they are with commonmark (and it makes sense)
2018-04-15T18:31:37 #rustdoc <brson> so rust is pure commonmark now?
2018-04-15T18:31:45 #rustdoc <imperio> yes
2018-04-15T18:31:52 #rustdoc <imperio> with add for tables iirc
2018-04-15T18:31:59 #rustdoc <imperio> and footnotes
2018-04-15T18:32:03 #rustdoc <brson> i'm doing a commonmark conversion at reddit, and as a product decision they are kind of mutilating it into whatever product feels like
2018-04-15T18:32:11 #rustdoc <brson> from an engineering standpoint it's kinda stinky
2018-04-15T18:32:18 #rustdoc <imperio> you bet
2018-04-15T18:32:41 #rustdoc <imperio> there is a nice rust crate for commonmark rendering written in rust by a googler
2018-04-15T18:32:49 #rustdoc <imperio> (which is the one we're using in rust)
2018-04-15T18:33:04 #rustdoc <brson> i'm hoping to slowly seprate out the bits that are reddit-flavored, and the parts that are real commonmark, and slowly phasing out the reddit-quirks
2018-04-15T18:33:10 #rustdoc <brson> we're using comrak, from github
2018-04-15T18:33:16 #rustdoc <brson> which crates.io and docs.rs also use
2018-04-15T18:33:24 #rustdoc <brson> ours is heavily modified
2018-04-15T18:33:35 #rustdoc <brson> it's going to be the largest deploy of comrak
2018-04-15T18:33:43 #rustdoc <brson> (and we found a security bug this week)
2018-04-15T18:33:48 #rustdoc <imperio> ah?
2018-04-15T18:33:55 #rustdoc <brson> which I'm currently investigating wrt rusts infra
2018-04-15T18:34:09 #rustdoc <imperio> is this bug specific to reddit or is it more global? (rustc might requires a fix)
2018-04-15T18:35:21 #rustdoc <brson> it's specific to any commonmark implemintation that is exposing arbitrary user input. I don't _think_ it's necessary for rustdoc to have a fix, since rustdoc output is local ind user-specific, but well, it could be since i think cargo doc has a mode to generate all dependency docs
2018-04-15T18:35:34 #rustdoc <brson> i shouldn't really say more until I've sent a full report to security@
2018-04-15T18:35:40 #rustdoc <brson> it definitely affects docs.rs though
2018-04-15T18:36:51 #rustdoc <imperio> hum ok
2018-04-15T18:37:08 #rustdoc <brson> yeah cargo doc --all basically gives you docs for any potentially malicous downstream crates
2018-04-15T18:37:08 #rustdoc <imperio> please send us (to rust or me directly) more details when you have them
2018-04-15T18:38:31 #rustdoc <brson> cool. nice to talk to you imperio. let me know if you are ever in the bay
2018-04-15T18:39:05 #rustdoc <imperio> not gonna happen any time soon but sure. Tell me if youre' in france some day!
2018-04-15T20:06:58 #rustdoc <brson> how much do doc-difference warnings even matter, cause i see lots of em
2018-04-17T13:01:24 #rustdoc <steveklabnik> imperio: misdreavus https://github.com/rust-lang/rust/issues/50023 :/
2018-04-17T13:01:34 #rustdoc <steveklabnik> i don't know how to respond to this yet
2018-04-17T13:01:58 #rustdoc <steveklabnik> i'm not sure this should be an issue at this point
2018-04-17T13:45:58 #rustdoc <misdreavus> :/
2018-04-17T13:50:51 #rustdoc <imperio> :-/
2018-04-17T13:52:33 #rustdoc <imperio> steveklabnik: I answered on the issue
2018-04-17T14:16:14 #rustdoc <steveklabnik> <3
2018-04-17T14:19:12 #rustdoc <imperio> steveklabnik: does it sound good as is or should I add more details to my answer?
2018-04-17T14:19:35 #rustdoc <steveklabnik> i think it's fine at the moment
2018-04-17T14:46:21 #rustdoc <misdreavus> we need to get a minifier for rustdoc so we can start putting comments in our javascript >_>
2018-04-17T14:47:55 #rustdoc <imperio> misdreavus: I started writting one
2018-04-17T14:48:03 #rustdoc <imperio> and now I have a huge lack of time
2018-04-17T14:48:30 #rustdoc <misdreavus> :/
2018-04-17T14:48:32 #rustdoc <imperio> but I think there is an open issue about it
2018-04-17T14:48:37 #rustdoc <misdreavus> probably
2018-04-17T14:56:25 #rustdoc <misdreavus> imperio: i'm not sure i understand what's going on in the mergeArrays function here https://github.com/rust-lang/rust/pull/49966/files#diff-f3aa05ee448be83e65a501258d3aac2bR1333
2018-04-17T14:56:54 #rustdoc <imperio> misdreavus: let me explain then
2018-04-17T14:56:55 #rustdoc <misdreavus> i get the overall goal (merge the results of all queries, sorting by their lev distance from their chosen query
2018-04-17T14:56:58 #rustdoc <misdreavus> )
2018-04-17T14:57:07 #rustdoc <imperio> the point is, it's already sorted at this point (each result set)
2018-04-17T14:57:13 #rustdoc <alercah> meta-issues like this are unhelpful
2018-04-17T14:57:13 #rustdoc <misdreavus> aha
2018-04-17T14:57:44 #rustdoc <alercah> I'd be inclined to close it and say "please file one issue per issue, after checking if ones already exist"
2018-04-17T14:57:58 #rustdoc <imperio> alercah: yes and no
2018-04-17T14:58:03 #rustdoc <imperio> it's a bit abrupt
2018-04-17T14:58:18 #rustdoc <imperio> they're not *wrong* properly speaking
2018-04-17T14:58:31 #rustdoc <misdreavus> alercah: it's more like their point was that all these issues have appeared recently
2018-04-17T14:58:38 #rustdoc <alercah> ahh
2018-04-17T14:58:45 #rustdoc <misdreavus> and they're asking us to please stop messing things up
2018-04-17T14:58:55 #rustdoc <imperio> misdreavus: so back to my explanations
2018-04-17T14:59:01 #rustdoc <imperio> since you have already sorted arrays
2018-04-17T14:59:07 #rustdoc <imperio> you don't want to sort them again
2018-04-17T14:59:07 #rustdoc <misdreavus> imperio: now that i know it's already sorted, things make way more sense
2018-04-17T14:59:13 #rustdoc <imperio> it'd disrupt the result
2018-04-17T14:59:17 #rustdoc <imperio> ah perfect :=)
2018-04-17T15:00:36 #rustdoc <misdreavus> i sometimes wonder what it would be like to pull rustdoc *out* of tree, turn it into a submodule
2018-04-17T15:00:48 #rustdoc <imperio> not a good idea for the moment
2018-04-17T15:00:58 #rustdoc <imperio> with we didn't rely so much on rust internals, it'd make sense
2018-04-17T15:01:02 #rustdoc <imperio> but not now
2018-04-17T15:01:06 #rustdoc <misdreavus> it's probably deeper into the compiler internals than even clippy
2018-04-17T15:01:12 #rustdoc <imperio> clearly haha
2018-04-17T15:01:16 #rustdoc <misdreavus> (and we all know how often clippy breaks, lol)
2018-04-17T15:01:26 #rustdoc <imperio> we made changes into rust internals specifically for rustdoc
2018-04-17T15:01:36 #rustdoc <misdreavus> yeah
2018-04-17T15:01:39 #rustdoc <misdreavus> that's also true
2018-04-17T15:01:45 #rustdoc <imperio> clippy will get stabilized this year iirc so we'll see :)
2018-04-17T15:01:57 #rustdoc <Manishearth> nah clippy is deeper
2018-04-17T15:02:11 #rustdoc <Manishearth> rustdoc could run off save-analysis with some additional apis
2018-04-17T15:02:11 #rustdoc <misdreavus> you think so?
2018-04-17T15:02:14 #rustdoc <Manishearth> yeah
2018-04-17T15:02:28 #rustdoc <Manishearth> clippy looks at the source itself which is a whole other thing
2018-04-17T15:02:33 #rustdoc <Manishearth> as in functiom bodies
2018-04-17T15:02:52 #rustdoc <misdreavus> here's also bits like how doc(include) runs in libsyntax
2018-04-17T15:02:54 #rustdoc <imperio> I thought the runners were at a upper level
2018-04-17T15:03:00 #rustdoc <Manishearth> and ALSO looks at everything rustdoc needs
2018-04-17T15:03:05 #rustdoc <Manishearth> yep
2018-04-17T15:03:29 #rustdoc <Manishearth> but you can still separate rustdoc out keeping some things in the compiler
2018-04-17T15:04:44 #rustdoc <Manishearth> imperio: i mean, the plan for stable clippy is to distribute it with rustup, which doesnt affect this
2018-04-17T15:04:55 #rustdoc <Manishearth> there is a plan to decouple it a bit more
2018-04-17T15:05:22 #rustdoc <imperio> so it'll still heavily depend on rust internals
2018-04-17T15:11:26 #rustdoc <steveklabnik> alercah: i thought about saying "hey this sounds more like an internals post"
2018-04-17T16:52:52 #rustdoc <imperio> misdreavus: do you mind going a bit faster on https://github.com/rust-lang/rust/pull/49954 please?
2018-04-17T16:53:13 #rustdoc <imperio> people are starting to complain a lot and it'd ease me a lot to not have to go through this for too long...
2018-04-17T17:17:29 #rustdoc <misdreavus> i'll try to get to it today
2018-04-17T17:20:49 #rustdoc <imperio> misdreavus: thanks a lot!
2018-04-17T17:20:56 #rustdoc <imperio> it'll relieve a lot of pression for me
2018-04-17T17:21:11 #rustdoc <misdreavus> <3
2018-04-17T17:21:23 #rustdoc <imperio> <3
2018-04-17T18:29:06 #rustdoc <misdreavus> imperio: there are some comments on the settings pr
2018-04-17T20:46:38 #rustdoc <misdreavus> imperio: ollie27: steveklabnik: what would y'all think if we started doing a weekly/every-other-weekly meeting to triage issues, talk about projects in flight, and bring up ideas?
2018-04-17T20:48:42 #rustdoc <misdreavus> it would be cool if we could start cutting through the massive backlog of A-rustdoc/T-dev-tools-rustdoc/WG-dev-tools-rustdoc issues
2018-04-17T20:51:20 #rustdoc <misdreavus> plus, since we're bring onur onto the team, we can also start to discuss plans for docs.rs
2018-04-17T20:52:22 #rustdoc <misdreavus> when i talked to nrc about this in the past, he said it would be alright to start off using nrc/dev-tools-team issues for meeting agendas, like how the docs team does it
2018-04-17T20:55:06 #rustdoc <misdreavus> if we decide move to our own org and/or repo, then we'll get there when we get there
2018-04-17T20:55:47 #rustdoc <misdreavus> anyway, if we want to get something rolling, i can set up a doodle to find a time for everyone
2018-04-17T21:02:27 #rustdoc <WindowsBunny> misdreavus: Primary plan for docs.rs needs to be making default-target actually work
2018-04-17T21:03:27 #rustdoc <misdreavus> p sure that falls firmly under "prs accepted" for now
2018-04-17T21:04:28 #rustdoc * WindowsBunny sighs
2018-04-17T22:03:09 #rustdoc <nrc> I created a rustdoc Gitter channel at https://gitter.im/rust-lang/rustdoc
2018-04-18T14:33:45 #rustdoc <misdreavus> i just sent an email to the team mailing list - if i've talked to you about being on the team and you didn't get an email from me just now, please let me (or nrc) know!
2018-04-18T14:33:55 #rustdoc <misdreavus> steveklabnik: imperio: ollie27: ^
2018-04-18T14:35:12 #rustdoc <imperio> misdreavus: received it
2018-04-18T14:35:22 #rustdoc <misdreavus> \o/
2018-04-19T10:52:53 #rustdoc <imperio> misdreavus: next thing I do: writing a js minifier
2018-04-19T10:52:57 #rustdoc <imperio> we definitely need it
2018-04-19T14:15:58 #rustdoc <misdreavus> :D
2018-04-19T14:16:00 #rustdoc <misdreavus> but also lol
2018-04-19T14:55:29 #rustdoc <killercup> you should talk to mgatozzi who is very experienced in writing minifiers
2018-04-19T14:55:34 #rustdoc <killercup> and is the maintainer of uglify-hs
2018-04-19T14:56:11 #rustdoc <misdreavus> orly
2018-04-19T14:56:28 #rustdoc <killercup> `cargo install uglify-hs` if you dont believe me
2018-04-19T14:56:51 #rustdoc <misdreavus> no, i've seen him talk about uglify-hs
2018-04-19T14:57:00 #rustdoc <misdreavus> i just didn't know what it was
2018-04-19T14:59:16 #rustdoc <killercup> misdreavus: https://twitter.com/killercup/status/956167987958108160 is the best summary i can give
2018-04-19T15:00:53 #rustdoc <misdreavus> lol
2018-04-19T15:56:44 #rustdoc <imperio> killercup: I want to test a few things first
2018-04-19T15:56:53 #rustdoc <imperio> writing a js parser and stuff looks like fun :D
2018-04-19T15:57:16 #rustdoc <killercup> imperio: i was kidding uglify-hs is not actually a thing
2018-04-19T15:57:24 #rustdoc <imperio> oh ok
2018-04-19T15:57:27 #rustdoc <imperio> ...
2018-04-19T15:57:32 #rustdoc <imperio> I'm bad at getting jokes >
2018-04-19T15:58:09 #rustdoc <killercup> haha, it's a joke that requires you to install a crate, not one of the obvious ones ;)
2018-04-19T16:11:56 #rustdoc <imperio> ooooh
2018-04-19T20:51:00 #rustdoc <misdreavus> oh snap, {!gh 49883} is on stable D:
2018-04-19T20:51:00 #rustdoc <rustbot> [Issue 49883] <open> `cargo doc` fails with panic in rustc. <https://github.com/rust-lang/rust/issues/49883>
2018-04-19T21:22:21 #rustdoc <misdreavus> ...even better, it's *not* on nightly o_O
2018-04-19T21:29:49 #rustdoc <misdreavus> it is on beta
2018-04-19T21:30:04 #rustdoc <misdreavus> the panic is from a bug!() macro in rustc_metadata
2018-04-19T21:30:29 #rustdoc <misdreavus> the stack trace first re-enters rustdoc in a function called print_inlined_const
2018-04-19T21:36:32 #rustdoc <imperio> who is oliver btw?
2018-04-19T21:36:41 #rustdoc <misdreavus> imperio: ollie27
2018-04-19T21:36:44 #rustdoc <imperio> (saw his name on the news but don't know the corresponding pseduo)
2018-04-19T21:36:48 #rustdoc <imperio> oh I see
2018-04-19T21:37:36 #rustdoc <misdreavus> yeah, the starting team is you, me, steve, ollie27, and onur
2018-04-20T02:17:29 #rustdoc <misdreavus> idle remark: it seems a bit overkill to load in literally every trait implementation the compiler knows about the moment we import anything from another crate
2018-04-20T02:17:54 #rustdoc <misdreavus> i have no idea whether there's a way to trim that down tho
2018-04-20T02:22:23 #rustdoc <misdreavus> eddyb: is there a query for "just the trait implementations of this one type item", even if that item is from another crate? rustdoc currently calls all_trait_implementations so it can cache them for later
2018-04-20T02:23:48 #rustdoc <misdreavus> possibly a fool's errand but it's causing this ICE
2018-04-20T02:27:02 #rustdoc <misdreavus> hot take: defining all the queries by macro makes it impossible to read a stack trace and figure out what is actually being executed
2018-04-20T02:30:00 #rustdoc <misdreavus> oh, it just adds several layers of padding between "do this thing" and "doing the thing"
2018-04-21T20:03:39 #rustdoc <imperio> misdreavus: have you see https://github.com/rust-lang/rust/pull/49757 btw?
2018-04-21T20:03:53 #rustdoc <imperio> doesn't it seem awesome? :D
2018-04-21T20:06:46 #rustdoc <misdreavus> yeah, i read it over yesterday :P
2018-04-21T20:15:10 #rustdoc <misdreavus> imperio: https://github.com/rust-lang/rust/pull/49757#issuecomment-383326617
2018-04-21T20:15:34 #rustdoc <imperio> wo
2018-04-21T20:15:38 #rustdoc <imperio> sounds like a lot of work haha
2018-04-21T20:16:00 #rustdoc <misdreavus> heh
2018-04-21T20:16:07 #rustdoc <imperio> the number of commits will keep growing up
2018-04-21T20:16:18 #rustdoc <misdreavus> it's a feature gate, that means docs
2018-04-21T20:16:29 #rustdoc <imperio> so I have to stop writing my js parser
2018-04-21T20:16:29 #rustdoc <imperio> damn
2018-04-21T20:16:40 #rustdoc <imperio> oh I have no issue with that
2018-04-21T20:16:50 #rustdoc <imperio> just sad to put my js parser on pause
2018-04-21T20:16:54 #rustdoc <misdreavus> ah
2018-04-21T20:17:10 #rustdoc <imperio> I'm so close to have the token generation complete :)
2018-04-21T20:17:18 #rustdoc <misdreavus> even a couple lines like "here's the tracking issue, this feature gate lets you use this attribute, it lets you search for the thing with a different name, it was meant for the standard library, it was added here"
2018-04-21T20:17:31 #rustdoc <imperio> I was just trolling
2018-04-21T20:17:35 #rustdoc <misdreavus> oh, welp >_>
2018-04-21T20:17:40 #rustdoc <imperio> well, I really need to pause my writing of js parser
2018-04-21T20:17:46 #rustdoc <imperio> but I don't really care haha
2018-04-21T20:17:50 #rustdoc <misdreavus> lol cool
2018-04-21T20:17:56 #rustdoc <imperio> I'll try to write in the next hour
2018-04-21T20:17:58 #rustdoc <misdreavus> <3
2018-04-21T20:18:15 #rustdoc <misdreavus> i'm writing a thing of my own, but i'm confused by the rustdoc-ui tests
2018-04-21T20:18:22 #rustdoc <imperio> ah?
2018-04-21T20:18:28 #rustdoc <imperio> what's wrong about them?
2018-04-21T20:18:43 #rustdoc <misdreavus> i'm adding some deprecation warnings, which means printing through eprintln
2018-04-21T20:18:50 #rustdoc <misdreavus> so i'm adding a ui test to make sure it prints right
2018-04-21T20:18:51 #rustdoc <imperio> euh
2018-04-21T20:19:04 #rustdoc <misdreavus> but the ui test doesn't want to recognize the stderr properly
2018-04-21T20:19:08 #rustdoc <imperio> you're not supposed to write directly something using eprintln I think
2018-04-21T20:19:12 #rustdoc <misdreavus> -_-
2018-04-21T20:19:24 #rustdoc <imperio> rustdoc-ui is using json to generate output
2018-04-21T20:19:30 #rustdoc <imperio> so if you use eprintln!
2018-04-21T20:19:31 #rustdoc <imperio> well
2018-04-21T20:19:39 #rustdoc <misdreavus> oh, it's going through the error thing?
2018-04-21T20:19:40 #rustdoc <imperio> not much good things will come out of it XD
2018-04-21T20:19:43 #rustdoc <misdreavus> damn
2018-04-21T20:19:57 #rustdoc <imperio> that's why I told you we had almost everything needed to have a full error engine
2018-04-21T20:20:01 #rustdoc <misdreavus> welp, there goes the hope of that feature being tested
2018-04-21T20:20:02 #rustdoc <imperio> just look at how I did
2018-04-21T20:20:09 #rustdoc <imperio> no no
2018-04-21T20:20:16 #rustdoc <imperio> it needs to be tested
2018-04-21T20:20:25 #rustdoc <imperio> just look at how I throw warnings
2018-04-21T20:20:34 #rustdoc <misdreavus> got an example on hand?
2018-04-21T20:20:40 #rustdoc <imperio> let me check
2018-04-21T20:21:34 #rustdoc <imperio> https://github.com/rust-lang/rust/pull/49542/files#diff-6ad072c1ebc79b7620832915f2323d55R1182
2018-04-21T20:21:48 #rustdoc <imperio> if you don't have a context yet, it's another way
2018-04-21T20:22:02 #rustdoc <imperio> btw, we should use this everywhere we need to send errors/warnings
2018-04-21T20:23:00 #rustdoc <misdreavus> https://github.com/rust-lang/rust/blob/master/src/librustdoc/lib.rs#L659-L676
2018-04-21T20:23:06 #rustdoc <misdreavus> iirc the context is gone by that point
2018-04-21T20:23:21 #rustdoc <imperio> then you need to look at how rustc does when it doesn't have a context yet
2018-04-21T20:23:40 #rustdoc <imperio> it's quite simple iirc
2018-04-21T20:24:21 #rustdoc <misdreavus> hmm
2018-04-21T20:24:30 #rustdoc <imperio> liberror is the name
2018-04-21T20:24:32 #rustdoc <imperio> I think
2018-04-21T20:25:24 #rustdoc <misdreavus> ah, librustc_errors?
2018-04-21T20:25:36 #rustdoc <misdreavus> the emitter there?
2018-04-21T20:27:49 #rustdoc <imperio> yep
2018-04-21T20:28:06 #rustdoc <misdreavus> looks reasonable
2018-04-21T20:28:54 #rustdoc * misdreavus stashes these changes and starts a new branch to create one of these immediately in rustdoc
2018-04-21T20:29:16 #rustdoc <imperio> when I said we were super close to a full error handling, I wasn't kidding
2018-04-21T20:29:22 #rustdoc <misdreavus> heh
2018-04-21T20:41:30 #rustdoc <imperio> misdreavus: done
2018-04-21T20:41:37 #rustdoc <imperio> tell me if there's anything I need to change
2018-04-21T20:44:51 #rustdoc <misdreavus> (^^)b
2018-04-21T20:55:03 #rustdoc <imperio> this request was fun
2018-04-21T20:55:10 #rustdoc <imperio> s/request/feature/
2018-04-21T20:55:30 #rustdoc <imperio> something I've been thinking for a time now but still: our js is slow
2018-04-21T20:55:36 #rustdoc <imperio> I'll make it faster
2018-04-21T20:55:52 #rustdoc <imperio> I have a few things in mind to do that
2018-04-21T22:09:12 #rustdoc <imperio> misdreavus: mouhahahahaha, I now have a fully working tokenizer for js code
2018-04-21T22:09:13 #rustdoc <imperio> ...
2018-04-21T22:09:22 #rustdoc <imperio> which is not very difficult to do but I'm still proud
2018-04-21T22:09:25 #rustdoc <misdreavus> lol
2018-04-21T22:09:27 #rustdoc <misdreavus> nice
2018-04-21T22:09:31 #rustdoc * imperio is still learning how to write parsers
2018-04-23T11:29:41 #rustdoc <imperio> misdreavus: std docs haven't been generated since 5 days now, any news about this?
2018-04-23T13:23:56 #rustdoc <misdreavus> imperio: has there been a nightly in these five days? they've started to fail again as things like RLS fail
2018-04-23T13:24:08 #rustdoc <imperio> ah
2018-04-23T13:24:12 #rustdoc <imperio> that might explain why
2018-04-23T13:50:44 #rustdoc <misdreavus> i poked a bit last night at what it would take to have an error emitter available all the time in rustdoc
2018-04-23T13:51:26 #rustdoc <misdreavus> turns out, there's not much we need to set it up
2018-04-23T13:53:00 #rustdoc <misdreavus> plus, it may be possible to rip out the emitter from the compiler session before it gets discarded
2018-04-23T13:53:17 #rustdoc <misdreavus> so we can keep it around and use it (complete with its codemap!) during rendering
2018-04-23T13:55:44 #rustdoc <imperio> misdreavus: isn't it exactly what I said? :p
2018-04-23T13:55:56 #rustdoc <misdreavus> maaaaaaaaaybe? >_>;;
2018-04-23T13:55:57 #rustdoc <imperio> (with a few extra details)
2018-04-23T13:56:15 #rustdoc <imperio> na it's fine
2018-04-23T13:56:21 #rustdoc <imperio> I'm used to get ignored
2018-04-23T13:56:29 #rustdoc <imperio> as long as it happens, I'm happy :)
2018-04-23T13:56:45 #rustdoc <misdreavus> like, you said it would be easy, i looked to see how easy it was
2018-04-23T13:56:49 #rustdoc <misdreavus> because i wanted to implement it
2018-04-23T13:57:09 #rustdoc <imperio> go ahead
2018-04-23T13:57:16 #rustdoc <imperio> I did a big part of the work already :)
2018-04-23T13:57:20 #rustdoc <misdreavus> <3
2018-04-23T13:59:07 #rustdoc <misdreavus> there will need to be some plain prints, unless we want "argument is invalid unicode" to cause a crash rather than just discarding the argument
2018-04-23T13:59:19 #rustdoc <imperio> it's fine
2018-04-23T13:59:27 #rustdoc <misdreavus> all the rest can be converted to call early_error() instead
2018-04-23T13:59:29 #rustdoc <imperio> as always: first version doesn't need to be perfect
2018-04-23T15:19:37 #rustdoc <misdreavus> oh, eww, the emitter and codemap aren't Send, and the rustc monitor closure needs to be Send
2018-04-23T15:25:28 #rustdoc <misdreavus> so, we can't reuse the same one between setting up, extracting docs, and rendering them
2018-04-23T16:01:50 #rustdoc <misdreavus> it seems like other one-shot places in the compiler have no problem creating new emitters on the fly, so i guess i'll just do that
2018-04-23T16:01:58 #rustdoc <misdreavus> sad i can't keep the codemap around, tho
2018-04-23T22:02:54 #rustdoc <imperio> misdreavus: small question
2018-04-23T22:03:01 #rustdoc <imperio> is the mailing address where we live?
2018-04-23T22:03:15 #rustdoc <misdreavus> ?
2018-04-23T22:03:54 #rustdoc <imperio> I assume it is
2018-04-24T18:27:46 #rustdoc <imperio> misdreavus: oh btw
2018-04-24T18:27:50 #rustdoc <imperio> I going over the js code
2018-04-24T18:27:59 #rustdoc <imperio> goals: make it more clear and more efficient
2018-04-24T18:28:08 #rustdoc <imperio> a few things have been on my mind since a while
2018-04-24T18:28:11 #rustdoc <imperio> time to try them out
2018-04-24T18:28:23 #rustdoc <misdreavus> :D
2018-04-25T19:43:16 #rustdoc <imperio> misdreavus: I'm starting to pile up PRs :)
2018-04-25T19:43:33 #rustdoc <misdreavus> i'm making a comment on the "add more aliases" one right now :3
2018-04-25T19:44:25 #rustdoc <imperio> haha
2018-04-25T19:44:31 #rustdoc <imperio> what about the js fixes I wrote?
2018-04-25T19:44:47 #rustdoc <misdreavus> the one where i asked about the reference? i r+'d that one
2018-04-25T19:46:09 #rustdoc <imperio> ah thanks!
2018-04-25T19:46:23 #rustdoc <imperio> it has some very interesting performance improvements
2018-04-25T19:48:04 #rustdoc <imperio> huuum
2018-04-25T19:48:13 #rustdoc <imperio> I'll have dependencies between PRs
2018-04-25T19:49:44 #rustdoc <misdreavus> really wish there was a diff algorithm that could detect when a block of text was copied wholesale to a different spot :/
2018-04-25T19:50:41 #rustdoc <imperio> it's kinda supposed to be
2018-04-25T19:50:44 #rustdoc <imperio> more or less
2018-04-25T19:50:47 #rustdoc <misdreavus> r+'d the "go to only result" pr
2018-04-25T19:50:59 #rustdoc <imperio> some people will be happy
2018-04-25T19:51:14 #rustdoc <imperio> (thanks for the review!)
2018-04-25T19:51:32 #rustdoc <imperio> moving forward on the ToString PR? :)
2018-04-25T19:51:35 #rustdoc <misdreavus> (^^)b
2018-04-25T19:51:51 #rustdoc <misdreavus> i haven't dug into that one seriously yet
2018-04-25T19:52:03 #rustdoc <misdreavus> been running around with dayjob work
2018-04-25T19:52:25 #rustdoc <imperio> if we can have this work
2018-04-25T19:52:33 #rustdoc <imperio> we'll solve one of the biggest and oldest issue ever
2018-04-25T19:52:37 #rustdoc <imperio> it'll be awesome!
2018-04-25T19:52:42 #rustdoc <misdreavus> also i have the "use a real error emitter" branch in progress already
2018-04-25T19:52:48 #rustdoc <imperio> oh right
2018-04-25T19:52:52 #rustdoc <misdreavus> i'm slow :P
2018-04-25T19:53:02 #rustdoc <imperio> well, I'll start poking again to the ToString PR this w-e
2018-04-25T19:53:07 #rustdoc <misdreavus> cool
2018-04-25T19:53:12 #rustdoc <imperio> slow is better than not contributing :)
2018-04-25T19:53:39 #rustdoc <misdreavus> i'm going to be on vacation this weekend (will probably be on a plane during the next docs team meeting >_>) so i'll probably be scarce
2018-04-25T19:54:10 #rustdoc <misdreavus> okay yeah, definitely on a plane during the next docs team meeting
2018-04-25T19:54:41 #rustdoc <steveklabnik> <3
2018-04-25T19:54:48 #rustdoc <steveklabnik> mind r+ing the rustc book ;) <#
2018-04-25T19:54:52 #rustdoc <misdreavus> lol
2018-04-25T19:55:07 #rustdoc * misdreavus opens a new tab
2018-04-25T19:55:55 #rustdoc <imperio> misdreavus: have fun then!
2018-04-25T19:56:16 #rustdoc <imperio> try to stay away from computers, they're litteraly destrying time continuum
2018-04-25T19:56:29 #rustdoc <misdreavus> lol
2018-04-25T19:56:48 #rustdoc <misdreavus> i will be with my sisters and grandparents, i will probably be away from computers a lot
2018-04-25T19:57:01 #rustdoc <imperio> ;)
2018-04-25T20:04:08 #rustdoc <misdreavus> steveklabnik: here we goooooo
2018-04-25T20:05:58 #rustdoc <steveklabnik> <3
2018-05-01T14:42:31 #rustdoc <deed> Is there a way to have rustdoc ignore a function/struct? 
2018-05-01T17:18:15 #rustdoc <steveklabnik> gah, deed left
2018-05-01T17:18:17 #rustdoc <steveklabnik> #[doc(hidden)]
2018-05-01T18:29:47 #rustdoc <deedasmi> Still had it up on another computer :P Thanks!
2018-05-01T18:31:24 #rustdoc <imperio> you're welcome?
2018-05-01T18:33:36 #rustdoc <deedasmi> Was responding to an hour and a half old message that was itself a response to a 2.5 hour old message :P
2018-05-01T18:38:10 #rustdoc <imperio> oh you changed nick meanwhile
2018-05-01T18:38:20 #rustdoc <imperio> now I got it
2018-05-01T19:45:58 #rustdoc <steveklabnik> deedasmi: ah nice :)
2018-05-03T20:15:20 #rustdoc <imperio> misdreavus: uuuuuurg
2018-05-03T20:15:31 #rustdoc <imperio> I'm stacking prs and it's becoming an issue
2018-05-03T20:15:38 #rustdoc <imperio> I start having prs depending on others
2018-05-03T20:16:33 #rustdoc <misdreavus> sorry, a dayjob thing blew up into way more than i anticipated
2018-05-03T20:18:31 #rustdoc <imperio> no problem
2018-05-03T20:18:38 #rustdoc <imperio> but be careful in your reviews
2018-05-03T20:18:44 #rustdoc <imperio> some extra commits might be there
2018-05-03T20:18:54 #rustdoc <imperio> I'll comment when such dependencies occur but just be careful
2018-05-03T20:19:40 #rustdoc <misdreavus> alright
2018-05-03T20:20:09 #rustdoc <misdreavus> i try to hit the earliest PRs first so hopefully i can spot when one depends on another
2018-05-03T20:21:50 #rustdoc <imperio> haha
2018-05-04T19:59:55 #rustdoc <misdreavus> oh no, imperio's offline D:
2018-05-05T14:45:21 #rustdoc <imperio> misdreavus: I'm currently reducing the index.js and alias.js files
2018-05-05T14:45:30 #rustdoc <imperio> it'll be good :)
2018-05-07T02:00:15 #rustdoc <nrc> Hey all, I changed the team name on GitHub from dev-tools-docs to rustdoc to reflect the new status of the team
2018-05-07T02:00:21 #rustdoc <nrc> I also invited the new members
2018-05-07T13:58:53 #rustdoc <misdreavus> nrc: thanks! <3
2018-05-07T21:27:03 #rustdoc <misdreavus> imperio: in https://github.com/rust-lang/rust/pull/50432, what's the difference between not setting "ignore-order" and setting "exact-check"? what is the middle ground between them?
2018-05-07T21:27:31 #rustdoc <imperio> misdreavus: exact-check checks if the output is exactly the same
2018-05-07T21:27:48 #rustdoc <imperio> ignore-order is for ignoring order (obviously)
2018-05-07T21:28:12 #rustdoc <imperio> and by default I check orders (so if one item shows up before another one whereas it shouldn't, it'll fail)
2018-05-07T21:28:15 #rustdoc <misdreavus> isnt't hat already done by the "(thing) was suppsoed to be before (thing)"?
2018-05-07T21:28:41 #rustdoc <misdreavus> i'm failing to see what exact-check is actually doign differently
2018-05-07T21:30:24 #rustdoc <misdreavus> i guess you're making sure that there are no extra items? i thought that was already being done elsewhere
2018-05-07T21:31:13 #rustdoc <misdreavus> i guess not
2018-05-07T21:33:39 #rustdoc <imperio> yep
2018-05-07T21:33:45 #rustdoc <imperio> the exact same output
2018-05-07T21:34:15 #rustdoc <misdreavus> okay, that makes more sense
2018-05-07T21:35:03 #rustdoc <misdreavus> i feel like it could have a better name
2018-05-07T21:35:25 #rustdoc <misdreavus> something like "no-extra-items", maybe?
2018-05-07T21:35:33 #rustdoc <misdreavus> "no-unknown-items"?
2018-05-07T21:37:01 #rustdoc <misdreavus> i feel like it makes the test slightly more fragile against changes to the standard library
2018-05-07T21:37:53 #rustdoc <misdreavus> it would be really nice to extend these tests with an accompanying rust library, rather than having to use the standard library's search index
2018-05-07T21:38:50 #rustdoc <misdreavus> imperio: thoughts? ^
2018-05-07T21:39:20 #rustdoc <imperio> wait hold on
2018-05-07T21:39:28 #rustdoc <misdreavus> there are two things there
2018-05-07T21:39:37 #rustdoc <imperio> so for the first, what's wrong about "exact-check"? :-/
2018-05-07T21:39:50 #rustdoc <imperio> it states exactly what it does
2018-05-07T21:39:59 #rustdoc <misdreavus> it's a test flag, we're already "checking" things
2018-05-07T21:40:23 #rustdoc <misdreavus> it wasn't obvious to me what was meant by "exact" there
2018-05-07T21:40:24 #rustdoc <imperio> "exact" indicates which kind of test
2018-05-07T21:40:53 #rustdoc <imperio> well anyway
2018-05-07T21:41:02 #rustdoc <imperio> if you want to change, pick a better name
2018-05-07T21:41:05 #rustdoc <misdreavus> whereas "no-unknown-items" states what it's actually testign
2018-05-07T21:41:18 #rustdoc <imperio> yes and no
2018-05-07T21:41:19 #rustdoc <misdreavus> it does so by also enforcing order, but that's an implementation detail
2018-05-07T21:41:23 #rustdoc <imperio> for me it makes less sense
2018-05-07T21:41:48 #rustdoc <imperio> it matches less what I have in mind
2018-05-07T21:42:23 #rustdoc <imperio> so now, let me try to figure out your second issue XD
2018-05-07T21:42:27 #rustdoc <misdreavus> i guess i already thought we were testing for "actual results have the same number of items"
2018-05-07T21:42:41 #rustdoc <imperio> no we didn't :)
2018-05-07T21:43:01 #rustdoc <misdreavus> right, i learned that today
2018-05-07T21:43:04 #rustdoc <misdreavus> :P
2018-05-07T21:43:12 #rustdoc <imperio> and putting this into a crate on its own seems ultra super giga weird
2018-05-07T21:43:14 #rustdoc <imperio> it's just js code
2018-05-07T21:43:16 #rustdoc <imperio> sooooooo
2018-05-07T21:43:19 #rustdoc <misdreavus> no no
2018-05-07T21:43:30 #rustdoc <misdreavus> i mean, make the js tests build docs on a test crate
2018-05-07T21:43:56 #rustdoc <imperio> it's more or less the case with the std
2018-05-07T21:44:03 #rustdoc <imperio> or do you mean something else?
2018-05-07T21:44:33 #rustdoc <misdreavus> i'm concerned that if we have many exact-check tests, then they have the opportunity to break additions to the standard library
2018-05-07T21:44:40 #rustdoc <misdreavus> because they can break by things out of their control
2018-05-07T21:45:26 #rustdoc <imperio> that's the exact point
2018-05-07T21:45:44 #rustdoc <misdreavus> if there's an addition to the standard library that has a similar name to one of our rustdoc-js exact-check tests, then that test will break /through no fault of the person who's adding the new thing/
2018-05-07T21:45:47 #rustdoc <imperio> if it's just because new things have been added, then it should be alright
2018-05-07T21:46:06 #rustdoc <imperio> if that's because they *changed* something, then it's normal to update tests
2018-05-07T21:46:19 #rustdoc <imperio> and there is only one test with the exact check
2018-05-07T21:46:24 #rustdoc <misdreavus> for now
2018-05-07T21:46:36 #rustdoc <imperio> I don't intend to add much of them
2018-05-07T21:46:43 #rustdoc <imperio> I just added it because I needed it
2018-05-07T21:46:53 #rustdoc <misdreavus> why?
2018-05-07T21:47:08 #rustdoc <imperio> to be sure that for this search, you wouldn't get unwanted results
2018-05-07T21:47:13 #rustdoc <imperio> search is very easy to break
2018-05-07T21:47:23 #rustdoc <imperio> the more strict the tests, the better
2018-05-07T21:47:29 #rustdoc <imperio> and they're not *that* strict
2018-05-07T21:48:30 #rustdoc <misdreavus> hmm
2018-05-07T21:50:05 #rustdoc <imperio> just this PR fixes at least 2 bugs
2018-05-07T21:50:11 #rustdoc <misdreavus> there's "strict" and then there's "brittle"
2018-05-07T21:50:20 #rustdoc <misdreavus> but i don't think it's a big deal for now
2018-05-07T21:50:20 #rustdoc <imperio> (and I'd really like to get it merged some day :p)
2018-05-07T21:51:08 #rustdoc <misdreavus> heh
2018-05-07T22:04:22 #rustdoc <misdreavus> imperio: i would have an easier time with review if there was an explanation of the change - what it was trying, what goes wrong in the existing version, what the fix does, etc
2018-05-07T22:04:39 #rustdoc <imperio> hoho
2018-05-07T22:04:42 #rustdoc <imperio> that's why it's magical
2018-05-07T22:04:50 #rustdoc <imperio> try out the search tests I added
2018-05-07T22:04:53 #rustdoc <misdreavus> i'm speaking generally, btw
2018-05-07T22:04:57 #rustdoc <imperio> Vec::new is very clear
2018-05-07T22:05:01 #rustdoc <imperio> oh sorry...
2018-05-07T22:05:24 #rustdoc <imperio> generally you ask me so like that we can iterate on things that aren't so great directly
2018-05-07T22:05:31 #rustdoc <imperio> it allows me to do things a bit faster
2018-05-07T22:05:53 #rustdoc <misdreavus> i appreciate when the research is on a linked issue, but there have been a couple times where i get a vaguely worded pr title with no description >_>
2018-05-07T22:06:36 #rustdoc <misdreavus> i kinda have to piece together what's actually going on
2018-05-07T22:06:50 #rustdoc <misdreavus> and i don't like bugging people, especially when the author is seven time zones away >_>
2018-05-07T22:07:10 #rustdoc <misdreavus> anyway
2018-05-07T22:07:23 #rustdoc <imperio> I like talking with you huhu
2018-05-07T22:07:30 #rustdoc <misdreavus> aww thanks :3
2018-05-07T22:07:52 #rustdoc <misdreavus> i tried the demo searches but i'm failing to see what the fix is doing that fixes it
2018-05-07T22:08:19 #rustdoc <misdreavus> it's a magic one-line change in code i'm not familiar with >_>
2018-05-07T22:08:44 #rustdoc <imperio> vec::new is working fine for you? O.o
2018-05-07T22:09:10 #rustdoc <misdreavus> no, it fails as expected
2018-05-07T22:09:18 #rustdoc <misdreavus> i don't know *why* the fix works
2018-05-07T22:09:42 #rustdoc <imperio> aaaaah
2018-05-07T22:09:53 #rustdoc <imperio> hold on let me put the code back in my mind
2018-05-07T22:10:21 #rustdoc <misdreavus> sorry for making you page it back in, lol
2018-05-07T22:11:24 #rustdoc <imperio> no problem :)
2018-05-07T22:11:33 #rustdoc <imperio> so, like I said, search is very sensitive
2018-05-07T22:11:54 #rustdoc <imperio> in case we have a multi-path search, I slightly modify the final check
2018-05-07T22:12:50 #rustdoc <imperio> in short, if we found the query, I still want the average of paths to be the major "sorter" instead of the normal thing (which is used to put some results before other when there is a full match of your string)
2018-05-07T22:14:49 #rustdoc <misdreavus> so "paths.length < 2" is expected to hold if there's one item in the query?
2018-05-07T22:15:18 #rustdoc <imperio> not sure to understand your comment :-s
2018-05-07T22:15:35 #rustdoc <misdreavus> when is "paths.length < 2" expected to hit?
2018-05-07T22:15:51 #rustdoc <imperio> anything not containing "::"
2018-05-07T22:15:56 #rustdoc <misdreavus> cool
2018-05-07T22:16:33 #rustdoc <misdreavus> so that fixes "vec::new" because now all these "new" functions aren't being given the same weight?
2018-05-07T22:19:14 #rustdoc <misdreavus> that makes sense
2018-05-07T22:19:35 #rustdoc <imperio> very sensitive
2018-05-07T22:19:44 #rustdoc <imperio> took me hours to figure out what was wrong
2018-05-07T22:19:46 #rustdoc <misdreavus> heh
2018-05-07T22:36:17 #rustdoc <misdreavus> small fixes that took that long to write are perfect candidates for writing up, so reviewers don't have to draw the same map
2018-05-07T22:36:38 #rustdoc <misdreavus> even if it's "obvious" in the end, i still appreciate the exercise
2018-05-07T22:36:44 #rustdoc <misdreavus> (as a writer and a reader)
2018-05-07T22:36:48 #rustdoc <misdreavus> anyway, i r+'d that
2018-05-08T20:34:25 #rustdoc <imperio> misdreavus: funny issue on the auto-impl for primitive types pr
2018-05-08T20:34:32 #rustdoc <imperio> when generating std docs, it works
2018-05-08T20:34:36 #rustdoc <imperio> otherwise it doesn't
2018-05-08T20:34:44 #rustdoc <imperio> *dark magic*
2018-05-08T20:38:50 #rustdoc <misdreavus> ???
2018-05-08T20:39:03 #rustdoc <misdreavus> actually, there's a better reaction
2018-05-08T20:39:04 #rustdoc <misdreavus> ?!?!?
2018-05-08T21:12:50 #rustdoc <imperio> test yourself
2018-05-08T21:12:52 #rustdoc <imperio> you'll see
2018-05-08T21:12:55 #rustdoc <imperio> it's quite funny :)
2018-05-10T18:43:14 #rustdoc <alercah> misdreavus: so at risk of bikeshedding things even further
2018-05-10T18:43:59 #rustdoc * misdreavus hides their "Bikeshed Master" certificate
2018-05-10T18:44:18 #rustdoc <alercah> would it possibly make sense to have type definition hiding only hide the body by default? it's caught me a few times now when I'm looking for where a type parameter is declared
2018-05-10T18:44:47 #rustdoc <imperio> alercah: ah, sounds like something to discuss with me
2018-05-10T18:45:05 #rustdoc <imperio> I assume that it includes the fact that the settings have been merged
2018-05-10T18:45:15 #rustdoc <imperio> and the current thing isn't pleasing you
2018-05-10T18:45:18 #rustdoc <imperio> am I right?
2018-05-10T18:45:23 #rustdoc <alercah> I haven't checked settings yet
2018-05-10T18:45:54 #rustdoc <imperio> then try it and tell me
2018-05-10T18:46:10 #rustdoc <imperio> otherwise it might be duplicata and not bikeshedding :p
2018-05-10T18:46:50 #rustdoc <alercah> imperio: ok, I checked, it's not
2018-05-10T18:47:03 #rustdoc <imperio> cool
2018-05-10T18:47:08 #rustdoc <alercah> what I am suggesting is only hiding the contents of the braces, so you can still see the type parameters
2018-05-10T18:47:25 #rustdoc <alercah> specifically, on docs for, say Add
2018-05-10T18:47:29 #rustdoc <imperio> that could be an additional settings
2018-05-10T18:47:32 #rustdoc <alercah> RHS isn't mentioned anywhere on the default view
2018-05-10T18:47:35 #rustdoc <alercah> which is confusing
2018-05-10T18:47:45 #rustdoc <alercah> because it's hidden away in "pub trait Add<RHS = Self>"
2018-05-10T18:48:03 #rustdoc <alercah> so I was thinking you could do "pub trait Add<RHS = Self> { /* collapse body */ }"
2018-05-10T18:48:15 #rustdoc <imperio> yes yes
2018-05-10T18:48:21 #rustdoc <alercah> that way you wouldn't have the vertical space taken up on enormous traits
2018-05-10T18:48:29 #rustdoc <imperio> I'm just thinking how to provide such a thing without having to rewrite everything
2018-05-10T18:48:54 #rustdoc <alercah> I think it would also draw more attention to the declaration, since I personally was tripped up by the switch
2018-05-10T18:49:07 #rustdoc <alercah> so it might be more accessible that way?
2018-05-10T18:49:20 #rustdoc <imperio> just add a setting to do it then
2018-05-10T18:49:28 #rustdoc <imperio> a partial one
2018-05-10T18:49:57 #rustdoc <imperio> something like "hides item's body but not type parameters"
2018-05-10T18:50:36 #rustdoc <imperio> shouldn't take you too long :)
2018-05-10T18:51:20 #rustdoc <alercah> well I'd argue it should be default :P
2018-05-10T18:51:31 #rustdoc <imperio> by default you see everything
2018-05-10T18:51:31 #rustdoc <alercah> yeah it wouldn't be too long, I don't think I can prioritize it though
2018-05-10T18:51:35 #rustdoc <alercah> should I file an issue?
2018-05-10T18:51:37 #rustdoc <alercah> wait you do?
2018-05-10T18:51:43 #rustdoc <imperio> normally yes
2018-05-10T18:51:45 #rustdoc <alercah> how did my setting get set to hiding by default then?
2018-05-10T18:51:51 #rustdoc <imperio> no clue
2018-05-10T18:51:57 #rustdoc <alercah> huh
2018-05-10T18:51:57 #rustdoc <alercah> ok
2018-05-10T18:51:59 #rustdoc <imperio> try on another browser
2018-05-10T18:52:16 #rustdoc <imperio> maybe it's by default and then I need to update it
2018-05-10T18:52:28 #rustdoc <imperio> but anyway, please open an issue and cc me on it
2018-05-10T18:52:40 #rustdoc <imperio> if you don't do it before sunday, I'll certainly
2018-05-10T18:52:51 #rustdoc <imperio> except if you want to keep it for yourself :)
2018-05-10T18:53:09 #rustdoc <alercah> nope, definitely don't have the time for it :)
2018-05-10T18:53:19 #rustdoc <imperio> then just open the issue and cc me on it ;)
2018-05-10T20:13:38 #rustdoc <imperio> misdreavus: I just pushed the update for the js minifier (in my crate)
2018-05-10T20:13:55 #rustdoc <imperio> if you want to see the minification: https://github.com/GuillaumeGomez/minifier-rs/pull/11/files#diff-c9bf2390b329499e60008efed0cc9125R194
2018-05-11T20:45:04 #rustdoc <imperio> misdreavus: my first minifier version divides the js size by 2
2018-05-11T20:45:09 #rustdoc <imperio> good start it is :)
2018-05-11T20:45:16 #rustdoc <misdreavus> nice!
2018-05-11T20:45:33 #rustdoc <imperio> and it's just from tokens (regex got me cold sweat)
2018-05-11T20:45:50 #rustdoc <imperio> the ast has been started but I think that it's nice enough already :)
2018-05-11T21:01:29 #rustdoc <imperio> misdreavus: 85965 -> 41644 (on main.js)
2018-05-11T21:01:59 #rustdoc <misdreavus> damn!
2018-05-11T21:10:00 #rustdoc <imperio> misdreavus: want to know more fun things? It even helped to improve the js
2018-05-11T21:10:05 #rustdoc <imperio> we had some js invalid code
2018-05-11T21:10:08 #rustdoc <imperio> (shame on us!)
2018-05-11T21:10:27 #rustdoc <misdreavus> lol
2018-05-11T21:10:48 #rustdoc <imperio> oh shit
2018-05-11T21:10:55 #rustdoc <imperio> rustdoc-js might not work anymore
2018-05-11T21:11:03 #rustdoc <imperio> urg
2018-05-11T21:11:08 #rustdoc <misdreavus> D:
2018-05-11T21:11:24 #rustdoc <imperio> I need to update it and make it more clever
2018-05-11T21:11:47 #rustdoc <imperio> or try to find a way to disable minification when testing
2018-05-11T21:11:52 #rustdoc <imperio> not sure which way is the best...
2018-05-11T21:12:19 #rustdoc <misdreavus> well, weren't you considering putting in an option to disable minification anyway? :P
2018-05-11T21:12:24 #rustdoc <imperio> I did
2018-05-11T21:12:36 #rustdoc <imperio> just don't know how to activate it in case of test
2018-05-11T21:12:55 #rustdoc <imperio> any idea? :)
2018-05-11T21:13:38 #rustdoc <misdreavus> ohh, right, don't you just generate the docs like normal and pull the js file from taht?
2018-05-11T21:13:41 #rustdoc <misdreavus> hmm
2018-05-11T21:13:54 #rustdoc <imperio> that's exactly what I do :)
2018-05-11T21:14:51 #rustdoc <imperio> and I don't really want to parse js in js (obviously)
2018-05-11T21:14:58 #rustdoc <imperio> I already parsed js in rust
2018-05-11T21:15:01 #rustdoc <imperio> it was awful
2018-05-11T21:15:20 #rustdoc <misdreavus> i'm going to resurrect my previous suggestion to make the rustdoc-js tests use demo crates instead of just pulling from the standard library
2018-05-11T21:16:23 #rustdoc <imperio> that could be quite inconvenient for testing the search
2018-05-11T21:16:29 #rustdoc <imperio> or not
2018-05-11T21:16:35 #rustdoc <imperio> depending on what you want
2018-05-11T21:16:49 #rustdoc <imperio> I suppose I'll have to parse js in js
2018-05-11T21:16:52 #rustdoc <imperio> *sigh*
2018-05-11T21:17:15 #rustdoc <misdreavus> what, there's no "load this other file and give me its exports"?
2018-05-11T21:17:50 #rustdoc <imperio> it's not really possible
2018-05-11T21:18:03 #rustdoc <imperio> main.js is entirely in a function
2018-05-11T21:18:06 #rustdoc <misdreavus> what are you doing now?
2018-05-11T21:18:21 #rustdoc <imperio> I parse the file in a very stupid way and extract what I need
2018-05-11T21:18:39 #rustdoc <misdreavus> "extract" how?
2018-05-11T21:18:59 #rustdoc <imperio> I load the string containing the content I'm looking for
2018-05-11T21:19:04 #rustdoc <imperio> :)
2018-05-11T21:20:07 #rustdoc <misdreavus> hmm
2018-05-11T21:20:15 #rustdoc <imperio> it's not really difficult in itself
2018-05-11T21:20:18 #rustdoc <imperio> just a bit annoying
2018-05-11T21:20:41 #rustdoc <imperio> but I suppose it'll take me less than a hour to be able to make rustdoc-js extraction work again with whatever js format
2018-05-11T22:43:25 #rustdoc <imperio> misdreavus: tadam!
2018-05-11T22:43:31 #rustdoc <imperio> updated and working again
2018-05-11T22:43:33 #rustdoc <misdreavus> nice
2018-05-11T22:43:38 #rustdoc <imperio> now I need to remove all the debug logs...
2018-05-11T22:43:54 #rustdoc <imperio> it even allowed me to spot a potential bug in my minifier
2018-05-11T22:44:03 #rustdoc <imperio> didn't expect that parsing things would be so funny
2018-05-11T22:46:27 #rustdoc <imperio> misdreavus: https://github.com/rust-lang/rust/pull/50632 is ready now from my side
2018-05-11T22:46:58 #rustdoc <imperio> minification is just removing comments and useless whitespaces for now
2018-05-11T22:47:03 #rustdoc <imperio> nothing agressive or whatever
2018-05-11T22:47:06 #rustdoc <misdreavus> cool, i'm about to head home for the day, so i dunno if i'll get to it before monday >_>
2018-05-11T22:47:16 #rustdoc <imperio> ah damn
2018-05-11T22:47:22 #rustdoc <imperio> well, this one isn't in a hurry
2018-05-11T22:47:25 #rustdoc <misdreavus> but i'll make sure to put it into my queue
2018-05-11T22:47:25 #rustdoc <imperio> but the other one is
2018-05-11T22:47:35 #rustdoc <imperio> https://github.com/rust-lang/rust/pull/50259
2018-05-11T22:47:42 #rustdoc <imperio> it's really stacking up
2018-05-11T22:47:53 #rustdoc <imperio> the only issue remaining is one already existing
2018-05-11T22:48:10 #rustdoc <imperio> so I'd really like to see it getting merge and I'll write the fix right away
2018-05-11T22:48:23 #rustdoc <imperio> but it has just too many fixes/improvements to be remaining there
2018-05-11T22:51:14 #rustdoc <misdreavus> can do
2018-05-11T22:52:25 #rustdoc <imperio> thanks
2018-05-11T22:57:04 #rustdoc <imperio> misdreavus: gonna sleep then, if I don't see you around before monday, have a nice week-end! :)
2018-05-12T12:28:24 #rustdoc <imperio> misdreavus: I found a bug in my huge PR
2018-05-12T12:28:26 #rustdoc <imperio> fixing it
2018-05-12T12:28:40 #rustdoc <imperio> please not merge until then (speaking about https://github.com/rust-lang/rust/pull/50259/files)
2018-05-12T12:58:13 #rustdoc <imperio> misdreavus: ok, now it's ready again
2018-05-14T20:54:15 #rustdoc <carllerche> Is there any way for a macro to know if it is being called by rustdoc?
2018-05-14T20:54:46 #rustdoc <misdreavus> not taht i know of, but i'm curious what you're trying
2018-05-14T20:56:16 #rustdoc <misdreavus> if it's a proc-macro, i dunno how we'd carry that state over, and if it's a classic macro-by-example, i dunno how the question is relevant
2018-05-14T20:57:00 #rustdoc <imperio> carllerche: for gtk-rs, we have added a feature when we're building docs
2018-05-14T20:57:08 #rustdoc <imperio> maybe that could be something to look for?
2018-05-14T20:58:25 #rustdoc <carllerche> Yeah, i'm trying to write a macro that does something different to generate docs...
2018-05-14T20:58:29 #rustdoc <carllerche> mostly working around some macro limitations
2018-05-14T20:58:50 #rustdoc <carllerche> but, the macro would be to generate docs for the caller...
2018-05-14T20:59:09 #rustdoc <carllerche> I"m mostly trying to work around some rust macro limitations which should hopefully be gone soonish...
2018-05-14T20:59:48 #rustdoc <imperio> carllerche: you want to generate docs using macros?
2018-05-14T20:59:52 #rustdoc <imperio> I wrote a crate for that
2018-05-14T21:00:01 #rustdoc <imperio> it's used in the std too
2018-05-14T21:00:05 #rustdoc <imperio> pretty convenient
2018-05-14T21:00:29 #rustdoc <imperio> carllerche: https://crates.io/crates/doc-comment
2018-05-14T21:00:35 #rustdoc <imperio> is it what you were looking for?
2018-05-14T21:01:31 #rustdoc <carllerche> I'm not entirely sure what I am looking for... trying to figure things out I guess
2018-05-14T21:01:38 #rustdoc <misdreavus> wait, are you looking for a special cfg that rustdoc sets?
2018-05-14T21:01:49 #rustdoc <misdreavus> like how libstd has cfg(dox)?
2018-05-14T21:02:34 #rustdoc <carllerche> that could work...
2018-05-14T21:02:47 #rustdoc <carllerche> the problem is, I can't figure out how to write the macro to both do the code gen and the doc gen it needs :P
2018-05-14T21:02:58 #rustdoc <carllerche> but I am able to write it to do one or the other
2018-05-14T21:03:07 #rustdoc <misdreavus> it's not something rustdoc does by default, so you'll need a "dox" cargo feature or something like that
2018-05-14T21:03:08 #rustdoc <imperio> carllerche: my crate generates doc inside macros
2018-05-14T21:03:16 #rustdoc <imperio> if that's what you need, give it a try
2018-05-14T21:03:23 #rustdoc <imperio> otherwise I really don't know
2018-05-14T21:03:42 #rustdoc <carllerche> I'll take a look, thanks
2018-05-14T21:06:41 #rustdoc <misdreavus> the doc_comment!() macro that imperio wrote is how we have the integer/float/atomic docs using the real type name instead of all being u8/f32/AtomicBool or whatever
2018-05-14T21:07:25 #rustdoc <imperio> the only issue is for the code examples
2018-05-14T21:07:37 #rustdoc <imperio> trying to write something working for all cases is complicated sometimes
2018-05-14T21:08:10 #rustdoc <misdreavus> yeah
2018-05-14T21:09:03 #rustdoc <misdreavus> re-reading your questions, tho, it soudns more like you want the special cfg
2018-05-14T21:09:23 #rustdoc <carllerche> i think a cfg would do it
2018-05-14T21:09:30 #rustdoc <imperio> I think too
2018-05-14T21:10:06 #rustdoc <misdreavus> then you can tag the "codegen" version with cfg(not(feature = "dox")) and the "doc gen" version with cfg(feature = "dox") or whatever
2018-05-14T21:10:15 #rustdoc <misdreavus> you just need to make sure to build your docs with --feature dox
2018-05-14T21:10:24 #rustdoc <misdreavus> or --all-features or whatever
2018-05-14T21:10:46 #rustdoc <misdreavus> i mention the idea here https://quietmisdreavus.net/code/2018/03/09/the-union-of-parallel-universes/
2018-05-14T21:10:50 #rustdoc <imperio> just like we did with gtk-rs
2018-05-14T21:11:30 #rustdoc <imperio> doc cfg is still unstable? :-/
2018-05-14T21:11:38 #rustdoc <misdreavus> yeah
2018-05-14T21:11:38 #rustdoc <imperio> might be time to stabilize it noz
2018-05-14T21:11:46 #rustdoc <misdreavus> there are still problems
2018-05-14T21:12:25 #rustdoc <misdreavus> if one platform imports a specific crate, imports from that crate cause problems
2018-05-14T21:13:00 #rustdoc <misdreavus> shortly after i posted that i got someone who tried to add it to their crate
2018-05-14T21:13:08 #rustdoc <imperio> haha
2018-05-14T21:13:18 #rustdoc <misdreavus> but they had issues because they couldn't do the imports right
2018-05-14T21:13:37 #rustdoc <misdreavus> iirc they had to do a cfg dance inside a function
2018-05-14T21:13:47 #rustdoc <misdreavus> which *shouldn't* be necessary, but that's how it came out
2018-05-14T21:14:05 #rustdoc <misdreavus> i wish i had them report it
2018-05-14T21:16:08 #rustdoc <misdreavus> and i'm *not* scrolling through two months of twitter mentions to find that conversation >_>
2018-05-14T21:16:46 #rustdoc <imperio> always create the issue
2018-05-14T21:16:51 #rustdoc <imperio> and assign yourself
2018-05-14T21:17:01 #rustdoc <imperio> like that you're free of memory loss
2018-05-14T21:17:25 #rustdoc <misdreavus> lol
2018-05-14T21:17:32 #rustdoc <misdreavus> yeah, that's why i regret not doing it
2018-05-14T21:17:44 #rustdoc <imperio> oh I know
2018-05-14T21:17:59 #rustdoc <imperio> I'm just having fun of that ;)
2018-05-14T21:20:27 #rustdoc <misdreavus> okay, a quick search tells me it may not have happened on twitter
2018-05-14T21:21:02 #rustdoc <imperio> haha
2018-05-14T21:21:34 #rustdoc <misdreavus> the conversation may have happened on irc, but if that's the case i'm not sure i want to search through logs for #rust
2018-05-14T21:23:38 #rustdoc <misdreavus> botbot doesn't let me search through the #rust-docs logs anyway
2018-05-14T21:40:03 #rustdoc <imperio> ah
2018-05-14T21:40:06 #rustdoc <imperio> not cool :-/
2018-05-14T21:43:14 #rustdoc <imperio> misdreavus: I updated https://github.com/rust-lang/rust/pull/50533
2018-05-14T21:43:38 #rustdoc <imperio> since it's not supposed to be used by anyone outside std people, I think we should merge it as is
2018-05-14T21:43:50 #rustdoc <imperio> it fixes the issue and is not really a problem
2018-05-14T21:43:56 #rustdoc <imperio> anyway, going to sleep
2018-05-14T21:44:01 #rustdoc <imperio> see you tomorrow!
2018-05-14T21:44:03 #rustdoc <misdreavus> sleep well!
2018-05-14T21:44:19 #rustdoc <misdreavus> even in std, there's still the problem of no bool and two str, thio
2018-05-14T21:44:22 #rustdoc <misdreavus> **tho
2018-05-15T08:23:29 #rustdoc <imperio> misdreavus: yep
2018-05-15T08:23:40 #rustdoc <imperio> but let's make a step at a time would you ;)
2018-05-15T21:35:21 #rustdoc <misdreavus> ack, 247 A-rustdoc issues
2018-05-15T21:37:35 #rustdoc <misdreavus> just renamed the T-dev-tools-rustdoc label to just T-rustdoc, for maximum confusion
2018-05-15T21:37:48 #rustdoc <misdreavus> i should honestly go in and retag all A-rustdoc with T-rustdoc and delete A-rustdoc >_>
2018-05-15T21:48:31 #rustdoc <misdreavus> okay, after some conversation in #rust-infra (mainly rubber-ducking), i've renamed A-rustdoc to T-rustdoc and deleted the other labels
2018-05-15T21:48:44 #rustdoc <misdreavus> they were mainly redundant anyway
2018-05-15T21:49:36 #rustdoc <misdreavus> ("labels" plural because i also ditched WG-docs-rustdoc)
2018-05-17T20:35:00 #rustdoc <imperio> misdreavus: I fixed tidy for https://github.com/rust-lang/rust/pull/50533 btw
2018-05-17T20:36:01 #rustdoc <misdreavus> oh! sorry about that
2018-05-17T20:36:19 #rustdoc <imperio> no problemo ;)
2018-05-17T20:36:27 #rustdoc <imperio> this one wasn't really in a hurry
2018-05-17T20:38:06 #rustdoc <misdreavus> you have good timing, tho, i had enough of a break from rustdoc PRs that i was able to return to my twitter library and review a massive PR that's been sitting there a while
2018-05-17T21:01:22 #rustdoc <misdreavus> imperio: r+'d
2018-05-17T22:04:02 #rustdoc <imperio> misdreavus: thanks!
2018-05-17T22:04:46 #rustdoc <misdreavus> (^^)b
2018-05-18T15:06:20 #rustdoc <misdreavus> imperio: can the width of tab characters be changed in css? https://github.com/rust-lang/rust/issues/49155#issuecomment-390235964
2018-05-18T15:06:40 #rustdoc <imperio> looking
2018-05-18T15:06:45 #rustdoc <misdreavus> i'm not sold on the feature, i'm just trying to see whether it's possible
2018-05-18T15:07:53 #rustdoc <imperio> directly in css, not sure
2018-05-18T15:07:56 #rustdoc <imperio> but can be done
2018-05-18T15:07:59 #rustdoc <imperio> just strange
2018-05-18T15:09:38 #rustdoc <misdreavus> there's a small part of me that wants to dismiss this by saying that tabs aren't in the style guide
2018-05-18T15:09:41 #rustdoc <misdreavus> but that seems a bit harsh
2018-05-18T15:28:50 #rustdoc <imperio> misdreavus: it's not really a priority or anything
2018-05-18T15:29:06 #rustdoc <misdreavus> yeah
2018-05-18T15:33:47 #rustdoc <imperio> misdreavus: well, maybe just say that considering that it's not a priority, we'll discuss internally about it in the next months?
2018-05-18T15:33:53 #rustdoc <imperio> sounds acceptable no?
2018-05-18T15:34:26 #rustdoc <misdreavus> sure
2018-05-18T15:36:05 #rustdoc <ollie27> there is https://developer.mozilla.org/en-US/docs/Web/CSS/tab-size and it wouldn't hurt to have rustdoc set that to 4 by default
2018-05-18T15:43:27 #rustdoc <imperio> ollie27: it is 4 by default from what I'm seeing
2018-05-18T15:43:31 #rustdoc <imperio> did I miss something?
2018-05-18T15:44:02 #rustdoc <imperio> well whatever
2018-05-18T15:44:09 #rustdoc <imperio> we use whitespaces
2018-05-18T15:44:10 #rustdoc <misdreavus> no support in IE/edge tho
2018-05-18T15:44:16 #rustdoc <imperio> by default
2018-05-18T15:44:23 #rustdoc <misdreavus> imperio: "Initial value: 8"
2018-05-18T15:44:24 #rustdoc <imperio> and this is an experimental tech
2018-05-18T15:44:46 #rustdoc <imperio> misdreavus: yes, I corrected myself just after ;)
2018-05-18T15:45:00 #rustdoc <misdreavus> :)
2018-05-18T15:46:33 #rustdoc <misdreavus> so what i'm seeing is, a small PR to set `tab-size` and `-moz-tab-size` right now is fine, but full .editorconfig support is not planned?
2018-05-18T15:54:25 #rustdoc <ollie27> yeah, that seems reasonable
2018-05-18T15:54:44 #rustdoc <misdreavus> cool, i just made a comment to summon a lot of people for maximum bikeshed
2018-05-18T15:58:52 #rustdoc <imperio> thanks
2018-05-23T19:02:39 #rustdoc <misdreavus> ollie27: i'm having a hard time connecting "name resolution favors types over values/macros" with what i know about how rustdoc collects items
2018-05-23T19:02:44 #rustdoc <misdreavus> re: https://github.com/rust-lang/rust/issues/50647#issuecomment-391429567
2018-05-23T19:03:50 #rustdoc <misdreavus> ohhhh, i think i see it
2018-05-23T19:03:56 #rustdoc <misdreavus> wait, no
2018-05-23T19:04:02 #rustdoc <misdreavus> !gh 34843
2018-05-23T19:04:06 #rustdoc <misdreavus> er
2018-05-23T19:04:22 #rustdoc <misdreavus> rustbot why ;_;
2018-05-23T19:04:26 #rustdoc <misdreavus> https://github.com/rust-lang/rust/issues/34843
2018-05-23T19:09:16 #rustdoc <misdreavus> because "use alloc_crate::vec" now technically pulls in both the crate and the module, but rustdoc only sees one because rustc_resolve only pulls one into the def map
2018-05-23T19:09:32 #rustdoc <misdreavus> er, pulls in both the module and the macro
2018-05-23T19:10:17 #rustdoc <misdreavus> this is slightly hilarious and slightly frustrating
2018-05-23T19:17:11 #rustdoc <misdreavus> wait
2018-05-23T19:17:12 #rustdoc <misdreavus> wait
2018-05-23T19:17:37 #rustdoc <misdreavus> the existing macro re-export code already looks through the def map
2018-05-23T19:18:04 #rustdoc <misdreavus> but the std docs already properly include both the module and the macro
2018-05-23T19:18:12 #rustdoc <misdreavus> i'm confus
2018-05-23T19:19:28 #rustdoc <misdreavus> unless tcx.module_exports does something else
2018-05-23T19:20:39 #rustdoc <misdreavus> ugh, this is a mess
2018-05-23T20:34:50 #rustdoc <misdreavus> grah, the module_exports doesn't keep the attributes on the export statement *pout*
2018-05-23T20:47:41 #rustdoc <misdreavus> grr, any attempt to cache the macro defition and load it later falls afoul of the std::vec problem
2018-05-23T20:47:58 #rustdoc <misdreavus> https://doc.rust-lang.org/nightly/std/#reexports note how `pub use alloc_crate::vec;` is not present
2018-05-23T20:48:10 #rustdoc <misdreavus> https://doc.rust-lang.org/nightly/std/#macros yet the vec macro is
2018-05-23T20:48:18 #rustdoc <misdreavus> this is completely bonkers
2018-05-23T20:54:40 #rustdoc <misdreavus> an alternate method would be to attempt to do it the other way, keeping the macro inlining then removing it if the export statement doesn't call for it
2018-05-23T20:55:08 #rustdoc <misdreavus> yet another method would be to scan the export statements in the module to find one that matches the ident of the macro being exported
2018-05-23T20:55:11 #rustdoc <misdreavus> this fails on glob imports tho
2018-05-23T21:02:08 #rustdoc <ollie27> the simplest work around to fix the std docs would be to have try_inline return Some(Vec::new()) for macro defs
2018-05-23T21:07:24 #rustdoc <misdreavus> which would just remove the export statemetn?
2018-05-23T21:07:26 #rustdoc <misdreavus> **statement?
2018-05-23T21:07:40 #rustdoc <ollie27> yeah
2018-05-23T21:07:44 #rustdoc <misdreavus> hm
2018-05-23T21:08:14 #rustdoc <misdreavus> that would fix the std docs, yeah, but wouldn't touch the issue
2018-05-23T21:09:05 #rustdoc <ollie27> yeah, but it's easy and safe to backport to beta
2018-05-23T21:09:10 #rustdoc <misdreavus> heh
2018-05-23T21:10:16 #rustdoc <misdreavus> you have a good point
2018-05-23T21:11:23 #rustdoc <misdreavus> i'll cook that up because i'm already neck deep in rustdoc and rustc_resolve code at this point
2018-05-23T21:11:58 #rustdoc <misdreavus> had no idea the rabbit hole went this deep
2018-05-23T22:10:46 #rustdoc <misdreavus> !gh 51011
2018-05-23T22:10:46 #rustdoc <rustbot> [PR 51011] <open>  rustdoc: hide macro export statements from docs <https://github.com/rust-lang/rust/pull/51011>
2018-05-23T22:47:48 #rustdoc <imperio> misdreavus: you didn't take a look at https://github.com/rust-lang/rust/pull/50953 yet? :p
2018-05-23T23:28:13 #rustdoc <misdreavus> oh! i completely overlooked that ;_;
2018-05-26T14:23:15 #rustdoc <killercup> misdreavus: one huge png https://www.dropbox.com/s/jcatenxlsdkaotp/Vintage%20Rustdoc.png?dl=0
2018-05-26T14:23:31 #rustdoc <killercup> misdreavus: and as svg https://www.dropbox.com/s/sl110hwha7x8gjb/Vintage%20Rustdoc.svg?dl=0
2018-05-28T20:08:19 #rustdoc <misdreavus> imperio: today's a holiday in the US, so i don't have silly things like a dayjob distrcting me from your recent PR :P
2018-05-28T20:08:44 #rustdoc <misdreavus> it's pretty exciting, imo
2018-05-28T20:09:27 #rustdoc <imperio> it'll still require to write docs
2018-05-28T20:09:59 #rustdoc <misdreavus> of course
2018-05-28T20:10:03 #rustdoc <misdreavus> but the mechanism will be there
2018-05-28T20:10:11 #rustdoc <misdreavus> sounds like a checklist issue to me :P
2018-05-28T20:14:15 #rustdoc <misdreavus> meanwhile i have librustc_resolve back to a point where it passes `x.py check` but i'm running tests because i have no idea if it still works, lol
2018-05-28T20:28:22 #rustdoc <imperio> haha
2018-05-28T20:39:07 #rustdoc <misdreavus> oh god it's building llvm, looks like i'm not coming back to this for a while
2018-05-28T20:41:52 #rustdoc <misdreavus> imperio: commented
2018-05-28T21:31:32 #rustdoc <imperio> misdreavus: I'll make a few new commits to split new "features" you asked
2018-05-28T21:31:44 #rustdoc <misdreavus> <3
2018-05-31T14:19:18 #rustdoc <imperio> misdreavus: wanna work on the test output not being displayed?
2018-05-31T14:19:40 #rustdoc <misdreavus> i guess? i want to see whether Zoxc replies
2018-05-31T14:20:08 #rustdoc <imperio> it was just to know if I added it to my todo list or not
2018-05-31T14:20:19 #rustdoc <misdreavus> oh, then i guess i'll shepherd it
2018-05-31T14:20:20 #rustdoc <imperio> but let's wait for Zoxc's answer first :)
2018-05-31T14:20:22 #rustdoc * misdreavus self-assigns
2018-05-31T14:20:26 #rustdoc <imperio> please do
2018-05-31T14:20:34 #rustdoc <steveklabnik> imperio: btw don't forget that rustdoc issues are A-rustdoc, not A-doc :)
2018-05-31T14:20:39 #rustdoc <steveklabnik> been re-tagging a few
2018-05-31T14:21:01 #rustdoc <imperio> steveklabnik: I use T-rustdoc mainly, sorry if I failed some :-/
2018-05-31T14:21:06 #rustdoc <steveklabnik> its all good
2018-05-31T14:21:20 #rustdoc <imperio> still in paris or did you come back?
2018-05-31T14:21:28 #rustdoc <steveklabnik> i am now in berlin
2018-05-31T14:21:32 #rustdoc <steveklabnik> i'm actually at the mozilla office :)
2018-05-31T14:21:35 #rustdoc <imperio> europe trip :D
2018-05-31T14:21:40 #rustdoc <misdreavus> nice
2018-05-31T14:21:43 #rustdoc <steveklabnik> yeah; rotterdam next
2018-05-31T14:21:43 #rustdoc <imperio> the berlin's office is really nice
2018-05-31T14:21:56 #rustdoc <misdreavus> good times, miss that place
2018-05-31T14:22:03 #rustdoc <imperio> true!
2018-05-31T14:22:12 #rustdoc <imperio> hope we'll have such an event next year as well :)
2018-05-31T14:22:20 #rustdoc <misdreavus> i hope so too!
2018-05-31T14:22:23 #rustdoc <steveklabnik> me too
2018-05-31T14:22:37 #rustdoc <misdreavus> i love every chance i get to hang out with rust people
2018-05-31T14:23:26 #rustdoc <imperio> steveklabnik and I just did thanks to rustfest
2018-05-31T14:23:31 #rustdoc <misdreavus> nice!
2018-05-31T14:23:40 #rustdoc <imperio> he had to watch over me for like 5 minutes haha
2018-05-31T14:25:42 #rustdoc <steveklabnik> :)
2018-05-31T14:25:59 #rustdoc <steveklabnik> (I was the last employee in the office so the last people were my responsibility)
2018-05-31T14:26:26 #rustdoc <imperio> steveklabnik: you didn't have issues with rain on tuesday btw?
2018-05-31T14:26:41 #rustdoc <imperio> started to rain quite a lot not so long after I left
2018-05-31T14:26:42 #rustdoc <misdreavus> oh okay, that makes sense
2018-05-31T14:27:10 #rustdoc <imperio> misdreavus: yes, Felix was looking around in a hurry and was assigning people to mozilla's employees
2018-05-31T14:27:12 #rustdoc <imperio> it was quite funny
2018-05-31T14:27:16 #rustdoc <misdreavus> lol
2018-05-31T14:27:31 #rustdoc <imperio> with some passive-agressive: "please get the fuck out of here"
2018-05-31T14:28:47 #rustdoc <steveklabnik> i had some issues, but just ducked into a brasserie and drank wine until it stopped
2018-05-31T14:28:50 #rustdoc <steveklabnik> :)
2018-05-31T14:29:05 #rustdoc <imperio> wine is always the solution
2018-05-31T14:29:16 #rustdoc <misdreavus> lol
2018-05-31T14:29:34 #rustdoc <steveklabnik> when in france...
2018-05-31T14:29:57 #rustdoc <imperio> in most western european countries I'd assume
2018-05-31T14:30:12 #rustdoc <imperio> italy, spain and portugal have wines as well ;)
2018-05-31T14:31:48 #rustdoc <steveklabnik> true, true
2018-05-31T20:07:33 #rustdoc <SimonSapin> in https://github.com/rust-lang/rust/pull/51241 I’m adding interlinks like [`GlobalAlloc`] to std docs and they seem to be working there. But now rustdoc-ui tests fail because running rustdoc on even an empty file emits some warnings
2018-05-31T20:07:33 #rustdoc <rustbot> [PR 51241] <open> Stabilize GlobalAlloc and #[global_allocator] <https://github.com/rust-lang/rust/pull/51241>
2018-05-31T20:08:05 #rustdoc <SimonSapin> % build/x86_64-unknown-linux-gnu/stage2/bin/rustdoc <(echo)      
2018-05-31T20:08:07 #rustdoc <SimonSapin> warning: [System] cannot be resolved, ignoring it...
2018-05-31T20:08:09 #rustdoc <SimonSapin> warning: [GlobalAlloc] cannot be resolved, ignoring it...
2018-05-31T20:09:11 #rustdoc <SimonSapin> imperio, misdreavus: are my std links really not resolved? If so, why are warnings for std emitted when documenting other crates?
2018-05-31T20:10:08 #rustdoc <imperio> SimonSapin: that's a pretty that still need to be solved
2018-05-31T20:10:15 #rustdoc <imperio> s/pretty/problem
2018-05-31T20:10:43 #rustdoc <misdreavus> SimonSapin: are these links on things that are automatically re-exported (say, in the prelude?)
2018-05-31T20:12:12 #rustdoc <SimonSapin> they’re not in the prelude
2018-05-31T20:12:34 #rustdoc <misdreavus> i see, they're in the std::alloc docs
2018-05-31T20:12:37 #rustdoc <misdreavus> this is strange
2018-05-31T20:12:40 #rustdoc <imperio> yep
2018-05-31T20:12:41 #rustdoc <SimonSapin> but std::alloc docs link to [`System`] for example, and std::alloc::System is a re-export
2018-05-31T20:12:46 #rustdoc <imperio> but sometimes they can get further
2018-05-31T20:13:21 #rustdoc <imperio> misdreavus: just fixed the crate-name option in rustdoc
2018-05-31T20:13:28 #rustdoc <imperio> weird we didn't get problems before now...
2018-05-31T20:13:41 #rustdoc <misdreavus> i'll need to get to it later, i'm stuck in dayjob stuff
2018-05-31T20:13:56 #rustdoc <misdreavus> SimonSapin: for now i would recommend not using type links for these
2018-05-31T20:14:18 #rustdoc <SimonSapin> I’m not even sure which are the faulty links
2018-05-31T20:14:39 #rustdoc <imperio> SimonSapin: the pr which adds context for these resolution errors is being merged
2018-05-31T20:14:47 #rustdoc <imperio> I r+ed it recently
2018-05-31T20:14:54 #rustdoc <imperio> not sure of it status though
2018-05-31T20:15:07 #rustdoc <misdreavus> the entire queue got wiped recently because of a submodule change
2018-05-31T20:15:20 #rustdoc <misdreavus> submodule/cargo.lock, something like that
2018-05-31T20:15:38 #rustdoc <misdreavus> so it may be stuck with a phony "merge conflict"
2018-05-31T20:15:52 #rustdoc <imperio> ah
2018-05-31T20:15:56 #rustdoc <imperio> that came from that
2018-05-31T20:15:57 #rustdoc <imperio> damn
2018-05-31T20:16:08 #rustdoc <imperio> my short error-format pr got stuck because of that :'(
2018-05-31T20:16:36 #rustdoc <misdreavus> anyway, i think it's the links in the std::alloc module docs, because that's the only place those traits are being linked directly
2018-05-31T20:18:36 #rustdoc <misdreavus> is there something the compiler does to bring that into scope? i could believe that rustdoc is emitting that for private docs when it otherwise shouldn't
2018-05-31T20:20:36 #rustdoc <imperio> that'd quite the issue!
2018-05-31T22:29:06 #rustdoc <misdreavus> SimonSapin: btw i was able to find the cause of #[doc(inline)] not applying to cross-crate glob imports {!gh 51252}
2018-05-31T22:29:06 #rustdoc <rustbot> [Issue 51252] <open> rustdoc: #[doc(inline)] does not work on cross-crate glob re-exports <https://github.com/rust-lang/rust/issues/51252>
2018-05-31T22:29:30 #rustdoc <misdreavus> spoiler, it's deliberate, but for no reason
2018-05-31T22:29:30 #rustdoc <SimonSapin> oh, nice
2018-05-31T22:29:34 #rustdoc <SimonSapin> thanks for looking into it
2018-05-31T22:29:47 #rustdoc <misdreavus> i was looking in that code for something else and realized that was where that happened
2018-05-31T22:30:52 #rustdoc <misdreavus> it also was Bothering Me and i was curious how imports were processed in the first place
2018-06-01T15:19:27 #rustdoc <misdreavus> beginning to think we should add the "strip-priv-imports" pass to the "document private items" set
2018-06-01T16:45:26 #rustdoc * SimonSapin nods
2018-06-04T19:23:16 #rustdoc <imperio> misdreavus: I updated https://github.com/rust-lang/rust/pull/51140#issuecomment-394300417
2018-06-04T19:23:27 #rustdoc <imperio> and everytime it adds the end of the url
2018-06-04T19:23:29 #rustdoc <imperio> damn it ><
2018-06-04T19:23:45 #rustdoc <imperio> well whatever, like you prefer, I added it in a commit on its own
2018-06-04T19:23:54 #rustdoc <imperio> a little review when you have time please :)
2018-06-04T19:24:03 #rustdoc <imperio> ah
2018-06-04T19:24:05 #rustdoc <imperio> weeeeell
2018-06-04T19:24:11 #rustdoc <imperio> you're, as usual, too fast
2018-06-04T19:25:49 #rustdoc <misdreavus> :3
2018-06-04T19:25:55 #rustdoc <misdreavus> because you added it in its own commit, it was easy
2018-06-04T19:30:56 #rustdoc <imperio> haha
2018-06-04T19:31:02 #rustdoc <imperio> I'll just do this in the future then
2018-06-04T19:31:21 #rustdoc <imperio> I don't like that since it makes useless commits but whatever
2018-06-04T19:36:09 #rustdoc <misdreavus> yeah
2018-06-04T19:36:43 #rustdoc <misdreavus> but when it's squashed together every time i have to reread everything to make sure it's all still good
2018-06-04T19:37:45 #rustdoc <imperio> btw, is there something I need to do on https://github.com/rust-lang/rust/pull/51256 ?
2018-06-04T19:39:57 #rustdoc <misdreavus> take out that unrelated whitespace change
2018-06-04T19:40:23 #rustdoc <imperio> ok
2018-06-04T19:40:29 #rustdoc <imperio> funny github bug: https://github.com/rust-lang/rust/issues/50239
2018-06-04T19:40:32 #rustdoc <misdreavus> it's worth noting that rustc has the same problem btw
2018-06-04T19:40:37 #rustdoc <imperio> you removed the t-doc label but it's still there
2018-06-04T19:40:48 #rustdoc <imperio> really?
2018-06-04T19:40:57 #rustdoc <misdreavus> i mean, it handles the --crate-name flag just fine
2018-06-04T19:41:10 #rustdoc <misdreavus> but if you don't give it then it will complain
2018-06-04T19:41:17 #rustdoc <imperio> that's normal
2018-06-04T19:41:26 #rustdoc <imperio> and expected
2018-06-04T19:43:20 #rustdoc <misdreavus> huh
2018-06-04T19:43:55 #rustdoc <misdreavus> oh, that tagging thing was the Rustdoc Tag Massacre
2018-06-04T19:44:45 #rustdoc <misdreavus> i initially renamed T-dev-tools-rustdoc to T-rustdoc, then realized that more issues were already tagged A-rustdoc so i torched that tag and renamed A-rustdoc to T-rustdoc
2018-06-04T19:45:23 #rustdoc <misdreavus> tag rename events aren't saved anywhere, they're just applied retroactively
2018-06-04T19:46:36 #rustdoc <misdreavus> anyway, the net effect is that all the rustdoc issues have that weird contradiction in them now
2018-06-04T19:52:03 #rustdoc <imperio> haha
2018-06-04T20:08:07 #rustdoc <imperio> misdreavus: is there a way to get the id of the elem we're documenting?
2018-06-04T20:08:19 #rustdoc <imperio> this DocContext is a bit dark for me
2018-06-04T20:09:31 #rustdoc <misdreavus> what type do you have?
2018-06-04T20:09:42 #rustdoc <imperio> a struct
2018-06-04T20:09:55 #rustdoc <misdreavus> Item? ItemEnum? what function are you in?
2018-06-04T20:10:09 #rustdoc <misdreavus> what information are you trying to get?
2018-06-04T20:10:11 #rustdoc <imperio> impl Clean<Attributes> for [ast::Attribute] {
2018-06-04T20:10:12 #rustdoc <imperio>     fn clean(&self, cx: &DocContext) -> Attributes {
2018-06-04T20:10:14 #rustdoc <imperio> this one :)
2018-06-04T20:10:21 #rustdoc <imperio> the intra-link function
2018-06-04T20:10:21 #rustdoc <misdreavus> ah
2018-06-04T20:10:39 #rustdoc <imperio> I'm a bit afraid that this might not be possible
2018-06-04T20:10:52 #rustdoc <misdreavus> that one is really awkward because it's currently disconnected from its item
2018-06-04T20:11:10 #rustdoc <imperio> it's not awkward in itself
2018-06-04T20:11:11 #rustdoc <misdreavus> i remember discussing putting the "current DefId" into the DocContext but i don't remember whether that happened
2018-06-04T20:11:22 #rustdoc <imperio> didn't see it
2018-06-04T20:11:25 #rustdoc <misdreavus> damn
2018-06-04T20:11:42 #rustdoc <imperio> but at least you confirmed what I feared
2018-06-04T20:11:52 #rustdoc <imperio> we don't care about the item, just about the doc comment
2018-06-04T20:12:11 #rustdoc <misdreavus> yeah, that function currently doesn't know/care about the item it's on
2018-06-04T20:12:26 #rustdoc <misdreavus> so unless there's some way to get from like the attribute to the item its on...
2018-06-04T20:12:31 #rustdoc <misdreavus> through the TyCtxt, i mean
2018-06-04T20:12:48 #rustdoc <imperio> I can try looking this way
2018-06-04T20:15:10 #rustdoc <imperio> no, we need an id
2018-06-04T20:15:17 #rustdoc <imperio> which we don't have
2018-06-04T20:15:52 #rustdoc <misdreavus> damn
2018-06-04T20:16:57 #rustdoc <imperio> I can add the missing part though
2018-06-04T20:17:01 #rustdoc <imperio> the famous id
2018-06-04T20:17:06 #rustdoc <imperio> I'm just afraid it won't work
2018-06-04T20:17:12 #rustdoc <imperio> the doc comment is before the item
2018-06-04T20:17:20 #rustdoc <imperio> therefore, not sure if it'll work
2018-06-04T20:17:23 #rustdoc <imperio> worth a try
2018-06-04T20:17:35 #rustdoc <misdreavus> wait, what id are you adding?
2018-06-04T20:18:27 #rustdoc <imperio> working on the "self" intra-link issue
2018-06-04T20:18:39 #rustdoc <imperio> https://github.com/rust-lang/rust/issues/49583
2018-06-04T20:18:42 #rustdoc <imperio> this one ^
2018-06-04T20:19:00 #rustdoc <imperio> it might be easier than we thought
2018-06-04T20:19:01 #rustdoc <misdreavus> oh
2018-06-04T20:19:46 #rustdoc <misdreavus> if you're going to add "current item" to DocContext, be aware that attrs.clean() is called all over the place
2018-06-04T20:20:04 #rustdoc <misdreavus> i started implementing it a while back
2018-06-04T20:20:39 #rustdoc <misdreavus> i forget why i pulled it out, i think Manishearth found a better way or we just decided not to support the thing i was aiming for
2018-06-04T20:22:44 #rustdoc <imperio> I'll see
2018-06-04T20:22:52 #rustdoc <Manishearth> misdreavus: ?
2018-06-04T20:22:56 #rustdoc <imperio> once I'll have failed, I'll understand why
2018-06-04T20:23:00 #rustdoc <misdreavus> lol
2018-06-04T20:23:20 #rustdoc <misdreavus> Manishearth: talking about saving the "current item"'s DefId so we could have it on hand while resolving intra links
2018-06-04T20:23:50 #rustdoc <imperio> well first, the node id
2018-06-04T20:23:55 #rustdoc <imperio> then I'll see about defid
2018-06-04T20:24:07 #rustdoc <imperio> but in case of mod, defid isn't what I'm looking for
2018-06-04T20:24:23 #rustdoc <misdreavus> i mean, isn't defid just nodeid + cratenum?
2018-06-04T20:25:16 #rustdoc <misdreavus> but anyway, you're the one actually writing it so i'll let you deal with it
2018-06-04T20:25:57 #rustdoc <imperio> please let me fail in pease :p
2018-06-04T20:26:42 #rustdoc <misdreavus> meanwhile my own change turned into a rustc refactor
2018-06-04T20:26:52 #rustdoc <imperio> well, I don't intend to go this far
2018-06-04T20:27:09 #rustdoc <misdreavus> and now i've currently broken something inscrutable and i have no idea how to figure out what went wrong
2018-06-04T20:27:25 #rustdoc <imperio> annoy eddyb
2018-06-04T20:27:28 #rustdoc <misdreavus> lol
2018-06-04T20:27:28 #rustdoc <imperio> he loves that haha
2018-06-04T20:28:11 #rustdoc <imperio> ah
2018-06-04T20:28:15 #rustdoc <imperio> it seems to work
2018-06-04T20:28:29 #rustdoc <imperio> that's a bit unexpected
2018-06-04T20:28:33 #rustdoc <misdreavus> lol
2018-06-04T20:28:51 #rustdoc <eddyb> no I don't
2018-06-04T20:29:11 #rustdoc <imperio> eddyb: oh crap, I was sure we were far away for the almighty you
2018-06-04T20:29:28 #rustdoc <eddyb> omnipresence is harder here than on discord
2018-06-04T20:29:29 #rustdoc <misdreavus> lol they were like the first or second in the channel
2018-06-04T20:29:40 #rustdoc <eddyb> but still vaguely manageable
2018-06-04T20:29:47 #rustdoc <imperio> you're incredible
2018-06-04T20:30:03 #rustdoc <misdreavus> anyway this particular problem is probably better served by oli or niko
2018-06-04T20:30:11 #rustdoc <imperio> maybe?
2018-06-04T20:30:23 #rustdoc <imperio> it's quite difficult to know when it comes to internals :-/
2018-06-04T20:30:32 #rustdoc <imperio> and niko is pretty difficult to reach
2018-06-04T20:30:39 #rustdoc <misdreavus> yeah ._.
2018-06-04T20:30:46 #rustdoc <imperio> but oli asked to ask him whenever I had a question
2018-06-04T20:30:55 #rustdoc <imperio> instead of eddyb
2018-06-04T20:32:02 #rustdoc <imperio> eddyb: wile you're around, do you know how I can get an item from an ast::NodeId? :)
2018-06-04T20:32:06 #rustdoc <eddyb> a DefId is better because it works cross-crate
2018-06-04T20:32:21 #rustdoc <imperio> ok, then I'm going to try to get a DefId out of a mod
2018-06-04T20:32:23 #rustdoc <eddyb> imperio: tcx.hir is the "go figure it out yourself" answer
2018-06-04T20:32:35 #rustdoc <imperio> thanks ;)
2018-06-04T20:32:55 #rustdoc <eddyb> tcx.hir.expect_item is the "you sure it's a hir::Item" answer
2018-06-04T20:33:22 #rustdoc <imperio> even better!
2018-06-04T20:33:23 #rustdoc <eddyb> imperio: note that NodeId and DefId are trivially interchangeable in the local crate
2018-06-04T20:33:33 #rustdoc <eddyb> via tcx.hir methods
2018-06-04T20:33:33 #rustdoc <imperio> it's only supposed to be local
2018-06-04T20:33:40 #rustdoc <imperio> so should be fine
2018-06-04T20:33:49 #rustdoc <imperio> I just need to get an item's name after all
2018-06-04T20:34:13 #rustdoc <eddyb> as long as you're sure it can't be a import thing
2018-06-04T20:34:28 #rustdoc <eddyb> imperio: ehm see there's the A/B creeping in
2018-06-04T20:34:44 #rustdoc <imperio> if it's an import thing, it'll fail and that's what I want
2018-06-04T20:34:45 #rustdoc <eddyb> can't you use tcx.hir.name(node_id)?
2018-06-04T20:34:51 #rustdoc <imperio> I can? O.o
2018-06-04T20:35:15 #rustdoc <eddyb> even better, there is something on tcx that works cross-crate
2018-06-04T20:35:22 #rustdoc <eddyb> but I can't remember it
2018-06-04T20:35:33 #rustdoc <imperio> well, again, I don't need cross-crate
2018-06-04T20:36:53 #rustdoc <imperio> eddyb: thanks a lot for the name function, completely missed it
2018-06-04T20:37:48 #rustdoc <eddyb> one of these days we'll make it simple enough that there aren't many ways left to do anything
2018-06-04T20:38:09 #rustdoc <eddyb> *there won't
2018-06-04T20:38:24 #rustdoc <misdreavus> can you really get away with not needing it cross-crate? cross-crate imports are like rustdoc's second-biggest weakness >_>
2018-06-04T20:38:27 #rustdoc <imperio> the thing is that this code is just HUGE
2018-06-04T20:38:51 #rustdoc <imperio> finding your way through thousands of code lines is rather difficult
2018-06-04T20:39:01 #rustdoc <imperio> even more when you just come once in months
2018-06-04T20:39:12 #rustdoc <imperio> IT WORKS
2018-06-04T20:39:16 #rustdoc <misdreavus> :o
2018-06-04T20:39:17 #rustdoc <imperio> yeaaaaaaaaaah
2018-06-04T20:39:27 #rustdoc <imperio> eddyb: again, you're my hero! :)
2018-06-04T20:52:21 #rustdoc <imperio> misdreavus: how can I test if there is no warning? :)
2018-06-04T20:52:28 #rustdoc <imperio> because the linking is working as expected
2018-06-04T20:53:13 #rustdoc <imperio> but don't know how to test it...
2018-06-04T20:53:44 #rustdoc <imperio> (on rustc test I mean)
2018-06-04T20:53:54 #rustdoc <misdreavus> i'm missing something
2018-06-04T20:54:51 #rustdoc <misdreavus> what are you intending to test and how?
2018-06-04T20:54:55 #rustdoc <imperio> well, now the linking is working
2018-06-04T20:55:02 #rustdoc <imperio> so I want to write a test for it
2018-06-04T20:55:14 #rustdoc <imperio> should I put it in ui?
2018-06-04T20:55:22 #rustdoc <misdreavus> ordinarily these go into the rustdoc tests >_>
2018-06-04T20:55:24 #rustdoc <imperio> should I test the url works as expected?
2018-06-04T20:55:32 #rustdoc <imperio> ...
2018-06-04T20:55:38 #rustdoc <imperio> I feel incredibly stupid right now
2018-06-04T20:55:43 #rustdoc <misdreavus> <3
2018-06-04T20:55:58 #rustdoc <imperio> let's just forget everything I said
2018-06-04T20:55:58 #rustdoc <misdreavus> i'm like, you've written rustdoc tests for intra-links before...
2018-06-04T20:56:04 #rustdoc <imperio> yep
2018-06-04T20:56:04 #rustdoc <misdreavus> o7
2018-06-04T20:56:05 #rustdoc <imperio> I did
2018-06-04T20:56:10 #rustdoc <imperio> let's forget now
2018-06-04T20:56:14 #rustdoc <misdreavus> can do
2018-06-04T20:56:17 #rustdoc <imperio> thanks ;)
2018-06-04T21:06:01 #rustdoc <imperio> misdreavus: removed unwanted change in https://github.com/rust-lang/rust/pull/51256
2018-06-04T21:06:09 #rustdoc <imperio> but this whitespace was too much
2018-06-04T21:06:16 #rustdoc <imperio> so it's making me sad to put it back :'(
2018-06-04T21:07:12 #rustdoc <misdreavus> yeah, it's awkward but it would create a really confusing commit history for that file
2018-06-04T21:07:48 #rustdoc <imperio> still makes me sad, but done anyway
2018-06-05T19:46:26 #rustdoc <misdreavus> imperio: i commented on your self-links PR
2018-06-05T19:46:36 #rustdoc <misdreavus> i don't think your implementation will work outside of your single test case
2018-06-05T19:46:45 #rustdoc <imperio> misdreavus: oh? :'(
2018-06-05T19:47:07 #rustdoc <misdreavus> the place where you're setting the ID is well before it's needed
2018-06-05T19:47:23 #rustdoc <misdreavus> so by the time it gets pulled back out, it's just set to the very last thing we saw
2018-06-05T19:47:37 #rustdoc <imperio> oh, I see
2018-06-05T19:47:45 #rustdoc <imperio> not cool
2018-06-05T19:48:09 #rustdoc <misdreavus> i offered a suggestion in the PR
2018-06-05T19:48:19 #rustdoc <misdreavus> this is going to be a tedious fix to do properly
2018-06-05T19:48:49 #rustdoc <imperio> I'm not sure we need it on everything
2018-06-05T19:49:07 #rustdoc <imperio> just on what we'd like to document
2018-06-05T19:49:47 #rustdoc <misdreavus> then i guess on the unimportant things we can leave the Clean<Attribute> impl and defer to the new function
2018-06-05T19:50:06 #rustdoc <imperio> I'll give it a try
2018-06-05T19:50:13 #rustdoc <imperio> (another one hehe)
2018-06-05T19:50:27 #rustdoc <misdreavus> make it an Option<DefId> in the function, i guess
2018-06-05T19:51:02 #rustdoc <imperio> I'll
2018-06-05T19:51:12 #rustdoc <imperio> for now, trying to turn resolution failures into a lint
2018-06-05T19:51:28 #rustdoc <imperio> it's "working" since I don't get compilation failure but I don't get anything printed
2018-06-05T19:51:33 #rustdoc <imperio> it's very frustrating
2018-06-05T19:51:46 #rustdoc <misdreavus> :/
2018-06-05T19:58:52 #rustdoc <misdreavus> my rustdoc-fix-turned-compiler-refactor is blocked on something i broke that i have no idea about, and my docs.rs upstreaming isn't working like i expected >_>
2018-06-05T19:59:24 #rustdoc <imperio> haha
2018-06-05T19:59:27 #rustdoc <steveklabnik> <3 <3 <3
2018-06-05T19:59:29 #rustdoc <imperio> a thing at a time
2018-06-05T19:59:31 #rustdoc <misdreavus> heh
2018-06-05T20:00:19 #rustdoc <misdreavus> i'm rebuilding with debug-assertions, because apparently i never copied my config.toml over to this working tree, and trying to print-debug my way through this
2018-06-05T20:01:03 #rustdoc <misdreavus> it's fine that i need to wait on the rebuild because i have dayjob things i need to do anyway
2018-06-05T20:06:11 #rustdoc <imperio> found it!
2018-06-05T20:06:19 #rustdoc <imperio> lintd are disabled in rustdoc
2018-06-05T20:10:12 #rustdoc <misdreavus> lolnice
2018-06-05T20:11:41 #rustdoc <imperio> weeeeell
2018-06-05T20:11:52 #rustdoc <imperio> enabling them makes a lot of warnings
2018-06-05T20:11:54 #rustdoc <imperio> a looooooot
2018-06-05T20:12:31 #rustdoc <imperio> I need to enable just the one I'm looking for
2018-06-05T20:36:53 #rustdoc <misdreavus> okay, i'm pretty sure i have it working now, i'll probably have a PR posted tonight (for me, overnight for you :P)
2018-06-05T20:40:30 #rustdoc <imperio> yeay
2018-06-05T23:47:27 #rustdoc <misdreavus> i posted the PR, but i'm still at work because of dayjob things so i need to /log off/ for a while
2018-06-05T23:47:52 #rustdoc <misdreavus> (tbh i finished the dayjob things and posted the pr while it was fresh in mind)
2018-06-11T15:11:42 #rustdoc <misdreavus> the more i think about {!gh 50617}, the more conflicted i get about the whole affair
2018-06-11T15:11:42 #rustdoc <rustbot> [PR 50617] <open> Fix extern prelude failure in rustdoc <https://github.com/rust-lang/rust/pull/50617>
2018-06-11T15:12:38 #rustdoc <misdreavus> we've had three different issues filed about it, so people are definitely hitting it and it's being disruptive
2018-06-11T15:12:41 #rustdoc <misdreavus> however
2018-06-11T15:12:56 #rustdoc <misdreavus> the links were dead and these crates were being published without people realizing they had put dead links into their docs
2018-06-11T15:13:46 #rustdoc <misdreavus> unless we can find an example where a link was supposed to exist but it hit the extern-prelude failure instead, i'm halfway to classifying this wontfix
2018-06-11T15:15:05 #rustdoc <misdreavus> and now i'm back to wondering how good the type-links feature actually is, because it's so wildly misunderstood
2018-06-11T15:15:33 #rustdoc <misdreavus> not necessarily misused, but i've seen too many people get confused as to how it actually works
2018-06-11T15:15:55 #rustdoc <misdreavus> that and the cross-crate-export problem have led this to be a bit of a botched feature
2018-06-11T15:17:56 #rustdoc <misdreavus> and i'm a little miffed that crates are being published where the *code* compiles on stable, but the *docs* require nightly
2018-06-11T15:20:28 #rustdoc <misdreavus> like, for most users it won't matter but there's always people who want to use local docs, and it won't work if they use local docs built with stable
2018-06-11T15:33:49 #rustdoc <imperio> misdreavus: if it's really an issue, we can just fix my "fix" and open an issue about improving it later
2018-06-11T15:44:43 #rustdoc <misdreavus> welp, it got petrochenkov's blessing, so i won't hold it up
2018-06-11T15:53:43 #rustdoc <misdreavus> imperio: depending on how the feature goes, we may not need to fix it later
2018-06-11T15:54:11 #rustdoc <imperio> so what do I need to add btw?
2018-06-11T15:54:14 #rustdoc <misdreavus> nothing
2018-06-11T15:54:17 #rustdoc <misdreavus> i already r+'d it
2018-06-11T15:54:47 #rustdoc <misdreavus> petrochenkov said that code has already been messed with to prevent breaking code when it stabilized
2018-06-11T15:54:48 #rustdoc <imperio> ah ok
2018-06-11T15:54:50 #rustdoc <imperio> thanks XD
2018-06-11T15:55:05 #rustdoc <misdreavus> so when that context i'm okay keeping it
2018-06-11T15:55:35 #rustdoc <misdreavus> i'm really worried that the type-links will become even more magical and inscrutable than they already are, but i'm not willing to fight it
2018-06-11T15:57:25 #rustdoc <imperio> lost fight we call that I think haha
2018-06-11T15:59:13 #rustdoc <misdreavus> like, so much effort has gone into this, and it's a great little feature, but it has so far to go before i would consider it ready for the light of day
2018-06-11T16:00:07 #rustdoc <misdreavus> like, i can easily imagine situations where someone would want to link to something that's not in-scope, but importing it just for the link will cause an "unused import" lint when you're just compiling
2018-06-11T16:01:08 #rustdoc <misdreavus> what do we do then? introduce `cfg(dox)` for everyone? make a special `use` statement to use within docs?
2018-06-11T16:01:28 #rustdoc <misdreavus> tell people to silence the lint on the import?
2018-06-11T16:02:23 #rustdoc <misdreavus> i'm tempted to propose the first, because it's helpful for doc(cfg)
2018-06-11T16:02:27 #rustdoc <misdreavus> as wel
2018-06-11T16:02:32 #rustdoc <misdreavus> +l
2018-06-11T16:37:27 #rustdoc <imperio> misdreavus: btw, there is still https://github.com/rust-lang/rust/issues/51451 :)
2018-06-11T17:32:24 #rustdoc <misdreavus> are you asking me to make the checklist or write the docs? >_>
2018-06-11T18:15:51 #rustdoc <imperio> misdreavus: euh, it was about writing the docs
2018-06-11T18:16:04 #rustdoc <imperio> but you can make the checklist as well if you want to :p
2018-06-11T18:16:17 #rustdoc <misdreavus> ...i like making checklists >_>
2018-06-11T18:22:09 #rustdoc <imperio> ... I like that >_>
2018-06-11T18:22:19 #rustdoc <imperio> *the disturbed people in rust*
2018-06-11T18:22:32 #rustdoc <imperio> +too
2018-06-11T18:22:56 #rustdoc <misdreavus> lol
2018-06-11T19:14:36 #rustdoc <imperio> misdreavus: oh there is https://github.com/rust-lang/rust/pull/51382 too
2018-06-11T20:47:52 #rustdoc <misdreavus> imperio: oh, that's ready? i kinda just let the discussion happen, lol
2018-06-11T20:48:21 #rustdoc <imperio> you're allowed to comment if you feel the need you know XD
2018-06-11T20:49:08 #rustdoc <misdreavus> i was distracted by my own pr, lol
2018-06-12T14:36:51 #rustdoc <misdreavus> imperio: i commented on your prs
2018-06-12T14:37:04 #rustdoc <imperio> thanks!
2018-06-13T20:16:20 #rustdoc <imperio> misdreavus: hoho
2018-06-13T20:16:24 #rustdoc <imperio> about the lint
2018-06-13T20:16:30 #rustdoc <imperio> without knowing, I fixed a bug
2018-06-13T20:16:41 #rustdoc <imperio> rustdoc wasn't applying rules as it should have
2018-06-13T20:17:07 #rustdoc <misdreavus> lol
2018-06-13T20:17:07 #rustdoc <imperio> the #[allow(missing_docs)] wasn't in scope and you shouldn't have been applied
2018-06-13T20:17:21 #rustdoc <imperio> rustc doesn't have access to windows mod, logical
2018-06-13T20:17:30 #rustdoc <misdreavus> but... how did it build when makign std for windows?
2018-06-13T20:17:30 #rustdoc <imperio> then rustdoc pass and has access to it thanks to cfg magic
2018-06-13T20:17:46 #rustdoc <imperio> when on windows, you have sys/windows/mod.rs
2018-06-13T20:17:56 #rustdoc <imperio> when not on windows, you have sys/windows/ext.rs
2018-06-13T20:18:01 #rustdoc <imperio> you'll see in my commit
2018-06-13T20:18:05 #rustdoc <misdreavus> huh....
2018-06-13T20:18:24 #rustdoc <imperio> so I fixed an unknown bug without knowing
2018-06-13T20:18:26 #rustdoc <imperio> mouhahaha
2018-06-13T20:18:34 #rustdoc <imperio> that's a first
2018-06-13T20:18:35 #rustdoc <misdreavus> lol
2018-06-13T20:19:39 #rustdoc <misdreavus> ping me on github when you get it working, i'm wrapped up in dayjob stuff so i may not get to it until tonight
2018-06-13T20:19:49 #rustdoc <imperio> no problem
2018-06-13T20:19:55 #rustdoc <imperio> it's rebuilding docs right now
2018-06-13T20:19:59 #rustdoc <misdreavus> cool
2018-06-13T20:33:45 #rustdoc <imperio> misdreavus: ok, I confirm that my thinking was correct
2018-06-13T20:33:55 #rustdoc <imperio> fixed by adding #![allow(missing_docs)]
2018-06-13T21:25:07 #rustdoc <misdreavus> imperio: do you need to change the name of the lint in the test?
2018-06-13T21:25:34 #rustdoc <imperio> oh shit I forgot
2018-06-13T21:25:47 #rustdoc <misdreavus> :)
2018-06-13T21:30:53 #rustdoc <imperio> misdreavus: ok, updated completely this time
2018-06-13T21:31:02 #rustdoc <imperio> time, 3 things at a time isn't a good idea
2018-06-13T21:34:27 #rustdoc <misdreavus> heh
2018-06-13T21:34:44 #rustdoc <imperio> s/time/damn
2018-06-13T21:34:47 #rustdoc <imperio> I'm really tired
2018-06-13T21:34:49 #rustdoc <misdreavus> this is why i tend to rate-limit my active branches, lol
2018-06-13T21:34:52 #rustdoc <imperio> but I need to end this relm pr
2018-06-13T21:35:08 #rustdoc <imperio> yes, but while one build, I can work on another one
2018-06-13T21:35:11 #rustdoc <misdreavus> yeah
2018-06-13T21:35:38 #rustdoc <misdreavus> i left a comment, btw
2018-06-13T21:35:55 #rustdoc <misdreavus> hopefully something you don't need to change, but it could be another strange bug
2018-06-13T21:36:53 #rustdoc <imperio> that's working this way for all lints
2018-06-13T21:37:03 #rustdoc <imperio> if you have the same error repeated, it shows "normally"
2018-06-13T21:37:24 #rustdoc <imperio> you error then eventually lint error message then everything else (help, note, etc...)
2018-06-13T21:38:09 #rustdoc <misdreavus> no, i mean it's showing a / when it should show a \
2018-06-13T21:42:29 #rustdoc <imperio> wut?
2018-06-13T21:42:41 #rustdoc <imperio> not from me either, so no clue...
2018-06-13T21:42:49 #rustdoc <imperio> might be a bug in lints renderer?
2018-06-13T21:44:29 #rustdoc <misdreavus> if you try to doc that test yourself, what does it show?
2018-06-13T21:45:08 #rustdoc <imperio> let me check
2018-06-13T21:45:45 #rustdoc <imperio> ah shit
2018-06-13T21:45:47 #rustdoc <imperio> need to recompile
2018-06-13T21:45:58 #rustdoc <imperio> we'll tell after the shower then
2018-06-13T21:48:46 #rustdoc <misdreavus> cool
2018-06-13T21:48:57 #rustdoc <misdreavus> because if rustdoc itself is outputting that, we can't use it
2018-06-13T21:49:15 #rustdoc <misdreavus> if it's just the ui tests being broken, then it's fine
2018-06-13T22:09:11 #rustdoc <imperio> misdreavus: = help: to escape `[` and `]` characters, just add '\' before them like `\[` or `\]`
2018-06-13T22:09:16 #rustdoc <imperio> so not rustdoc issue
2018-06-13T22:09:18 #rustdoc <misdreavus> sweet
2018-06-13T22:09:20 #rustdoc <imperio> on this, good night!
2018-06-13T22:09:31 #rustdoc <misdreavus> kennytm said it was part of ui test normalization too
2018-06-13T22:09:34 #rustdoc <misdreavus> sleep well!
2018-06-13T23:23:44 #rustdoc <misdreavus> imperio: i just noticed an incredibly hilarious bug
2018-06-13T23:26:20 #rustdoc <misdreavus> imperio: so we have this "display warnings" flag to determine whether or not we should mask warnings when building or testing docs https://github.com/rust-lang/rust/blob/b907d966528a6859ec847a2a4d32f092a5be6584/src/librustdoc/lib.rs#L632
2018-06-13T23:27:59 #rustdoc <misdreavus> imperio: however, when we pass it to `core::run_core`, it's then treated as "allow warnings", meaning that it's doing the opposite of what the flag intended https://github.com/rust-lang/rust/blob/b907d966528a6859ec847a2a4d32f092a5be6584/src/librustdoc/core.rs#L176
2018-06-13T23:29:45 #rustdoc <misdreavus> it's kept the same when it's passed to core
2018-06-13T23:30:13 #rustdoc <misdreavus> i remember finding an issue related to --display-warnings, so i'll write it down there
2018-06-13T23:30:17 #rustdoc <misdreavus> not sure if it's the same
2018-06-13T23:31:07 #rustdoc <alercah> bool is a truly evil type
2018-06-13T23:34:25 #rustdoc <misdreavus> hehe
2018-06-13T23:41:31 #rustdoc <misdreavus> oh, wait, i'm wrong
2018-06-13T23:41:40 #rustdoc <misdreavus> imperio: never mind, i misread the argument's use -_-
2018-06-13T23:41:59 #rustdoc <misdreavus> "allow" here isn't "allow to be seen", it's "allow through the compilation process"
2018-06-13T23:51:21 #rustdoc <misdreavus> imperio: i left a new comment on the intra-doc-link lint PR, for when you wake up
2018-06-14T18:07:32 #rustdoc <imperio> misdreavus: saw it and answered
2018-06-14T18:08:05 #rustdoc <imperio> basically, we disable every lint unless there is #![deny(whatever)] in the code
2018-06-14T18:08:18 #rustdoc <misdreavus> yeah
2018-06-14T18:08:19 #rustdoc <imperio> except for the intra doc lint
2018-06-14T18:08:27 #rustdoc <imperio> we want to warn by default after all
2018-06-14T18:08:59 #rustdoc <misdreavus> wonder if we could have done something like allow(warnings), warn(intra-doc)
2018-06-14T18:09:24 #rustdoc <imperio> tried to
2018-06-14T18:09:28 #rustdoc <misdreavus> but then that would have overridden that default
2018-06-14T18:09:30 #rustdoc <imperio> I'd rather not
2018-06-14T18:09:31 #rustdoc <misdreavus> oh, well then
2018-06-14T18:09:42 #rustdoc <imperio> I think we'll add warnings in rustdoc in the future
2018-06-14T18:09:49 #rustdoc <imperio> don't want to enable/disable each one of them
2018-06-14T18:09:56 #rustdoc <misdreavus> in any case, i r+'d it as-is
2018-06-14T18:10:02 #rustdoc <imperio> cool
2018-06-14T18:10:11 #rustdoc <imperio> I think it's a great step forward
2018-06-14T18:10:15 #rustdoc <imperio> we now have lints in rustdoc
2018-06-14T18:10:16 #rustdoc <misdreavus> i'm very happy for it
2018-06-14T18:10:27 #rustdoc <imperio> basically, we have everything for errors/warnings handling
2018-06-14T18:10:30 #rustdoc <imperio> me too :)
2018-06-14T18:10:47 #rustdoc <misdreavus> now we can do things like "these docs don't actually show up" warnings
2018-06-14T18:11:39 #rustdoc <misdreavus> or whatever else we can dream up
2018-06-14T18:14:51 #rustdoc <imperio> yep!
2018-06-14T18:15:01 #rustdoc <imperio> We can write a "real" linter inside rustdoc
2018-06-14T18:15:12 #rustdoc <imperio> damn, I wanna write one
2018-06-14T18:15:19 #rustdoc <imperio> but first I need to end my css minifier
2018-06-14T18:47:46 #rustdoc <misdreavus> lol
2018-06-14T19:43:32 #rustdoc <imperio> misdreavus: don't laugh, it's on a good way already
2018-06-14T19:43:39 #rustdoc <imperio> much simpler than JS to write haha
2018-06-14T20:55:45 #rustdoc <misdreavus> imperio: what do you make of this? https://github.com/rust-lang/rust/issues/51231
2018-06-14T20:55:54 #rustdoc <misdreavus> !gh 51231
2018-06-14T20:55:54 #rustdoc <rustbot> [Issue 51231] <open> Implied shortcut reference link produces spurious warning on nightly <https://github.com/rust-lang/rust/issues/51231>
2018-06-14T20:56:12 #rustdoc <imperio> wo that's a funny one
2018-06-14T20:56:43 #rustdoc <imperio> and what was the purpose of your question?
2018-06-14T20:56:49 #rustdoc <imperio> you want to do it?
2018-06-14T20:56:58 #rustdoc <misdreavus> to see if you knew better than me
2018-06-14T20:57:02 #rustdoc <misdreavus> about what might be causing it
2018-06-14T20:57:21 #rustdoc <imperio> I think we come through this link twice
2018-06-15T20:41:54 #rustdoc <misdreavus> thinking about {!gh 51252} and starting to wonder what kinds of things are pulled in by glob imports
2018-06-15T20:41:55 #rustdoc <rustbot> [Issue 51252] <open> rustdoc: #[doc(inline)] does not work on cross-crate glob re-exports <https://github.com/rust-lang/rust/issues/51252>
2018-06-15T20:44:49 #rustdoc <misdreavus> i think a first approximation could recreate what rustdoc already does for local re-exports, but i bet we could run into {!gh 50196} if we're not careful
2018-06-15T20:44:49 #rustdoc <rustbot> [Issue 50196] <closed> rustdoc stack overflow on stable (1.25.0) and nightly (ac3c2288f) <https://github.com/rust-lang/rust/issues/50196>
2018-06-15T20:50:00 #rustdoc <misdreavus> my first thought is to create a separate entry point to clean/inline.rs just for glob imports, which checks the cleaned Path to see whether it's a glob on a module or an enum (or at the least, not-a-module)
2018-06-15T20:50:56 #rustdoc <misdreavus> then, if it is a module, calls the same method that inlines modules, but instead of returning a module item directly, takes out its items instead and returns those
2018-06-15T20:51:45 #rustdoc <misdreavus> presumably, for glob imports on not-modules, we still want to leave those showing, just like we have for local glob exports on enums
2018-06-15T20:52:52 #rustdoc <misdreavus> i wonder if we should handle the import somehow to make sure we don't link it to the external crate if the target has since been inlined?
2018-06-15T20:53:01 #rustdoc <misdreavus> may be out of scope for an initial PR
2018-06-15T21:40:44 #rustdoc <imperio> misdreavus: I allowed myself to make a few improvements at the same time for future contributors: https://github.com/rust-lang/rust/pull/51581
2018-06-15T21:41:00 #rustdoc <imperio> now I'm gonna reduce search-index size
2018-06-15T21:41:04 #rustdoc <imperio> again
2018-06-15T21:43:00 #rustdoc <misdreavus> lol, glad you picked the one with a name collision to go first
2018-06-15T21:47:22 #rustdoc <imperio> I wanted to check everything went fine
2018-06-15T21:47:24 #rustdoc <imperio> it didn't
2018-06-15T21:48:16 #rustdoc <misdreavus> lol
2018-06-15T21:48:33 #rustdoc <imperio> easy fix but still haha
2018-06-15T21:48:50 #rustdoc <misdreavus> i'm just happy we got this *now* instead of *later* when some unfortunate soul hits that on their first contribution
2018-06-15T21:49:11 #rustdoc <imperio> haha
2018-06-15T21:49:18 #rustdoc <imperio> that'd have been very fun for us
2018-06-15T21:49:27 #rustdoc <imperio> maybe not for the "chosen one" XD
2018-06-15T21:49:32 #rustdoc <misdreavus> yeah, lol
2018-06-15T21:49:46 #rustdoc <misdreavus> it'd be like "oh, crap, we need to fix this, hold onto this branch and rebase it later"
2018-06-15T21:50:14 #rustdoc <imperio> well, it'd have been hell I think to find where it got fucked up in the search too
2018-06-15T21:50:25 #rustdoc <imperio> for someone who doesn't know it
2018-06-15T21:50:31 #rustdoc <misdreavus> yeah
2018-06-15T21:50:39 #rustdoc <misdreavus> what goes wrong without the fix, btw?
2018-06-15T21:51:57 #rustdoc <misdreavus> does it just show one of them?
2018-06-15T21:52:22 #rustdoc <imperio> just one yes
2018-06-15T21:52:27 #rustdoc <imperio> which is a bit sad
2018-06-15T21:52:38 #rustdoc <imperio> my duplicate protection was too powerful
2018-06-15T21:52:54 #rustdoc <misdreavus> lol
2018-06-15T21:53:18 #rustdoc <misdreavus> left a comment
2018-06-15T21:54:06 #rustdoc <imperio> misdreavus: simple answer
2018-06-15T21:54:24 #rustdoc <imperio> how do you know in case that error_text is empty if you failed or succeeded?
2018-06-15T21:55:03 #rustdoc <imperio> error_text will never get fulfilled with should_fail option activated
2018-06-15T21:55:20 #rustdoc <misdreavus> that's what i meant when i said "the early return"
2018-06-15T21:55:34 #rustdoc <misdreavus> because you added the extra check to break out of the loop
2018-06-15T21:55:52 #rustdoc <misdreavus> without that check and break, i would assume you could use error-text
2018-06-15T21:56:41 #rustdoc <imperio> oh I see your point
2018-06-15T21:57:36 #rustdoc <misdreavus> but with that check and break, it doesn't seem like you could (for example) combine should-fail with exact-check?
2018-06-15T21:57:49 #rustdoc <imperio> good point
2018-06-15T21:57:53 #rustdoc <imperio> I'll go your way
2018-06-15T21:57:55 #rustdoc <misdreavus> <3
2018-06-15T21:57:55 #rustdoc <imperio> way better
2018-06-15T21:58:04 #rustdoc <imperio> thanks for the suggestion!
2018-06-15T21:58:07 #rustdoc <misdreavus> no problem!
2018-06-15T22:00:01 #rustdoc <imperio> hum weird...
2018-06-15T22:00:12 #rustdoc <imperio> switching branches makes everything being rebuilt
2018-06-15T22:00:17 #rustdoc <imperio> annoying
2018-06-15T22:00:55 #rustdoc <misdreavus> yeah, it's a pain
2018-06-15T22:01:14 #rustdoc <misdreavus> it's why i made a second working-tree on my server
2018-06-15T22:01:41 #rustdoc <misdreavus> i think eddyb has like seven?
2018-06-15T22:02:21 #rustdoc <misdreavus> they each keep their own build artifacts (for better or worse, lol)
2018-06-15T22:04:04 #rustdoc <eddyb> I used to have 3
2018-06-15T22:04:11 #rustdoc <eddyb> now I'm stuck using only rust-2
2018-06-15T22:04:42 #rustdoc <eddyb> I fixed my stuff to use the new git thing (it was previously the older buggy one) but I still haven't hooked anything up to the server
2018-06-15T22:05:15 #rustdoc <misdreavus> ah
2018-06-15T22:05:32 #rustdoc <misdreavus> there was someone who had a ton, i thought
2018-06-15T22:07:57 #rustdoc <imperio> maybe oli-obk?
2018-06-15T22:09:21 #rustdoc <misdreavus> i don't remember
2018-06-15T22:13:44 #rustdoc <imperio> misdreavus: ok updated
2018-06-15T22:14:44 #rustdoc <misdreavus> taking a look
2018-06-15T22:20:22 #rustdoc <misdreavus> left a comment, tiny style thing that was copied from the primitive docs but is probably unnecessary
2018-06-15T22:20:47 #rustdoc <misdreavus> (probably unnecessary for the primitive docs too, but we can at least start fresh for keywords)
2018-06-15T22:25:50 #rustdoc <imperio> I appreciate it
2018-06-15T22:25:55 #rustdoc <imperio> comments are welcome
2018-06-15T22:26:14 #rustdoc <imperio> and I have checkout to another branch once again 
2018-06-15T22:26:22 #rustdoc <misdreavus> unrelated: yay, i got inlining glob re-exports working!
2018-06-15T22:26:24 #rustdoc <imperio> I really hope I don't need to test this change XD
2018-06-15T22:26:31 #rustdoc <imperio> oh well done
2018-06-15T22:26:40 #rustdoc <misdreavus> it was less code than i thought it would take, lol
2018-06-15T22:27:11 #rustdoc <misdreavus> i'm gonna add a test for it later tonight and open the PR
2018-06-15T22:29:17 #rustdoc <misdreavus> i've been ruined by my still-ongoing export-namespaces compiler refactore
2018-06-15T22:29:24 #rustdoc <misdreavus> **refactor
2018-06-15T22:30:29 #rustdoc <imperio> oh btw
2018-06-15T22:30:35 #rustdoc <imperio> my intra link lint is stucked
2018-06-15T22:30:45 #rustdoc <imperio> apparently clippy doesn't build
2018-06-15T22:30:48 #rustdoc <imperio> is it normal?
2018-06-15T22:30:57 #rustdoc <misdreavus> no idea :/
2018-06-15T22:31:02 #rustdoc <imperio> Manishearth: any idea?
2018-06-15T23:22:00 #rustdoc <misdreavus> !gh 51584
2018-06-15T23:22:00 #rustdoc <rustbot> [PR 51584] <open> rustdoc: process cross-crate glob re-exports <https://github.com/rust-lang/rust/pull/51584>
2018-06-16T17:21:00 #rustdoc <imperio> misdreavus: I reduced search-index.js size from 3 MB to 2.5 MB
2018-06-16T17:21:09 #rustdoc <misdreavus> ooh
2018-06-16T17:21:11 #rustdoc <imperio> good start isn't it? :D
2018-06-21T15:37:13 #rustdoc <misdreavus> should we request a special crater denying the new intra-doc lint? it looks like there's a *ton* of hits across published crates
2018-06-21T15:37:31 #rustdoc <misdreavus> e.g. scroll through this build log https://gitlab.com/panicbit/ruststone/-/jobs/76546103
2018-06-21T15:38:00 #rustdoc <misdreavus> someone in #rust was reporting a build failure because one of their dependencies had deny(warnings) on, and that triggered on a macro they weren't even exporting
2018-06-21T15:46:56 #rustdoc <misdreavus> filed {!gh 51684}
2018-06-21T15:46:57 #rustdoc <rustbot> [Issue 51684] <open> rustdoc: only show `intra_doc_link_resolution_failure` lints for items being documented <https://github.com/rust-lang/rust/issues/51684>
2018-06-21T15:47:56 #rustdoc <misdreavus> i know we make no guarantees about deny(warnings), but emitting these lints on items that aren't actually being documented is not what we want
2018-06-21T16:03:15 #rustdoc <imperio> misdreavus: for now it's just warnings and enabled in nightly
2018-06-21T16:03:18 #rustdoc <imperio> so we're "safe"
2018-06-21T16:03:51 #rustdoc <misdreavus> right, but i'm worried slightly about false positives
2018-06-21T16:04:00 #rustdoc <imperio> but we need to fix warnings in any case because we have a lot of false positives
2018-06-21T16:04:12 #rustdoc <imperio> ah perfect ;)
2018-06-21T16:04:34 #rustdoc <misdreavus> see my comment about how we don't guarantee the stability of deny(warnings)
2018-06-21T16:04:47 #rustdoc <misdreavus> it's *super* noisy tho
2018-06-21T16:06:11 #rustdoc <imperio> we also have weird failures
2018-06-21T16:06:26 #rustdoc <imperio> some code seems to be ignored by rustdoc
2018-06-21T16:06:31 #rustdoc <imperio> which is super strange
2018-06-21T19:14:45 #rustdoc <WindowsBunny> imperio: halp https://github.com/rust-lang/rust/issues/51689
2018-06-21T19:15:05 #rustdoc <WindowsBunny> misdreavus: why is rustdoc doing this to me? D:
2018-06-21T19:20:53 #rustdoc <misdreavus> shit
2018-06-21T19:20:59 #rustdoc <misdreavus> WindowsBunny: i changed how imports were lowered
2018-06-21T19:21:20 #rustdoc <misdreavus> i have no idea why it's only a problem during a doc run tho
2018-06-21T19:21:23 #rustdoc <WindowsBunny> damnit misdreavus
2018-06-21T19:24:03 #rustdoc <misdreavus> alternately, the change to how lints are handled in rustdoc by imperio exposed this problem
2018-06-21T19:25:51 #rustdoc * misdreavus grumbles about listing specific lints instead of combining allow(warnings) and warn(intra-doc-links)
2018-06-21T19:27:14 #rustdoc <WindowsBunny> as far as I can tell it is because rustdoc doesn't compile the insides of functions (presumably to optimize doc generation times)
2018-06-21T19:27:35 #rustdoc <WindowsBunny> but as a result, any imports that were only needed for functions end up being unused
2018-06-21T19:28:36 #rustdoc <WindowsBunny> so rustdoc would either have to 1. stop emitting that lint at all when generating docs or 2. compile functions just enough to be able to resolve what imports a function uses so they can be marked as used
2018-06-21T19:28:54 #rustdoc <misdreavus> we used to do 1 by silencing all lints whatsoever
2018-06-21T19:29:13 #rustdoc <misdreavus> but then we introduced the "intra-doc-links resolution failure" lint
2018-06-21T19:29:40 #rustdoc <misdreavus> which meant we couldn't cap lints at "allow" any more
2018-06-21T19:31:10 #rustdoc <misdreavus> strictly speaking, we should be allowing that lint
2018-06-21T19:31:18 #rustdoc <misdreavus> based on https://github.com/rust-lang/rust/blob/master/src/librustdoc/core.rs#L192-L203
2018-06-21T19:33:16 #rustdoc <misdreavus> so, based on that, something has gone horribly wrong
2018-06-21T19:51:52 #rustdoc <misdreavus> wait
2018-06-21T19:51:52 #rustdoc <misdreavus> no
2018-06-21T19:51:56 #rustdoc <misdreavus> shit
2018-06-21T19:52:17 #rustdoc <misdreavus> the sample from dtolnay and winapi itself are explicitly denying the lint
2018-06-21T19:52:23 #rustdoc <misdreavus> the problem is that we don't cap lints any more
2018-06-21T19:55:24 #rustdoc <misdreavus> no amount of backflipping from rustdoc in that lints listing is going to fix that
2018-06-21T19:55:39 #rustdoc <steveklabnik> seems... bad
2018-06-21T19:56:20 #rustdoc <misdreavus> i'd say "find some way to disable the lint when rustdoc is running" but that just makes me wonder about other potential lints
2018-06-21T19:57:35 #rustdoc <misdreavus> i don't know a way to say "cap lints at allow, /except for this one/"
2018-06-21T19:59:20 #rustdoc <misdreavus> unless we can do that from the rustc session, in which case we're in business
2018-06-21T20:00:50 #rustdoc <misdreavus> but based on the fact that imperio changed the lint cap when he introduced the intra-doc-link lint, i assume it doesn't work like that
2018-06-21T20:22:53 #rustdoc <Manishearth> yo misdreavus you areound?
2018-06-21T20:22:58 #rustdoc <misdreavus> yo
2018-06-21T20:23:15 #rustdoc <Manishearth> wanna chat about ✨ localization ✨ ?
2018-06-21T20:23:25 #rustdoc <misdreavus> depends >_>
2018-06-21T20:24:29 #rustdoc <Manishearth> quick rundown -- we're starting to think about long term localization of rust. This involves localizing the compiler diagnostics, the website, the book (or encouraging other books to be written), and the doc output
2018-06-21T20:24:58 #rustdoc <Manishearth> there are tools for doing the actual localization, and we're thinking of growing community groups for this
2018-06-21T20:25:04 #rustdoc <Manishearth> but the technical side is still lacking
2018-06-21T20:26:33 #rustdoc <Manishearth> anyway
2018-06-21T20:26:47 #rustdoc <Manishearth> for the website and compiler we'll need a proper i18n framework (fluent-rs is the current plan)
2018-06-21T20:26:53 #rustdoc <Manishearth> which can plug in to a tool like pontoon
2018-06-21T20:26:59 #rustdoc <Manishearth> for rustdoc output ... it's interesting
2018-06-21T20:27:05 #rustdoc <Manishearth> since rustdoc docs are in-source
2018-06-21T20:27:20 #rustdoc <misdreavus> yeah
2018-06-21T20:27:51 #rustdoc <Manishearth> so just spitballing here, what would be nice would be a way to point rustdoc to some file structure containing strings tagged with paths
2018-06-21T20:28:04 #rustdoc <Manishearth> and say "hey go use the stuff from here instead of the doc comments"
2018-06-21T20:28:24 #rustdoc <Manishearth> *additionally* rustdoc would have a mode for producing such a file for the built in comments
2018-06-21T20:28:44 #rustdoc <Manishearth> this file would be in a format that tools like pontoon don't have trouble consuming. or a format that we can convert to such a format
2018-06-21T20:29:03 #rustdoc <Manishearth> likely be a folder full of markdown files that we convert to a json file or something like that
2018-06-21T20:29:06 #rustdoc <Manishearth> thoughts?
2018-06-21T20:30:39 #rustdoc <misdreavus> something hacky can already be accomplished today with a build script and variations of `#[cfg_attr(loc="en_US", doc(include="en_US/this-file.md"))]`
2018-06-21T20:31:44 #rustdoc <misdreavus> i don't know enough about localization tools to know how much of a pain that is to set up
2018-06-21T20:32:34 #rustdoc <misdreavus> PM 032819 <Manishearth> *additionally* rustdoc would have a mode for producing such a file for the built in comments // this stems dangerously close to "reintroduce json output for rustdoc"
2018-06-21T20:32:45 #rustdoc <Manishearth> heh
2018-06-21T20:33:03 #rustdoc <misdreavus> which is an oft-requested feature, but would be a project of its own
2018-06-21T20:33:13 #rustdoc <Manishearth> well so these tools usually work by presenting original texts and giving you an opportunity to translate
2018-06-21T20:33:35 #rustdoc <Manishearth> the problem with cfg_attr is that you need this in source; ideally this can be done out of tree
2018-06-21T20:33:43 #rustdoc <Manishearth> most localizations are maintained out of tree and can be plugged in
2018-06-21T20:34:18 #rustdoc <misdreavus> would it be worthwhile to replace the doc attributes/comments with a single attribute that would be replaced by the cfg_attr listing with a proc-macro?
2018-06-21T20:34:34 #rustdoc <misdreavus> or is the goal to not touch the source at all?
2018-06-21T20:34:40 #rustdoc <Manishearth> i hope to not touch the source
2018-06-21T20:34:43 #rustdoc <misdreavus> hmm
2018-06-21T20:35:02 #rustdoc <misdreavus> then you're looking for a way to patch the docs
2018-06-21T20:35:20 #rustdoc <misdreavus> could be done, maybe
2018-06-21T20:35:39 #rustdoc <misdreavus> add a pass that has its translation directory and replaces docs that match somethign it has for the locale it's asked for
2018-06-21T20:36:22 #rustdoc <Manishearth> yeah
2018-06-21T20:36:38 #rustdoc <Manishearth> ideally rustdoc would drive this -- it basically replaces docs given a path
2018-06-21T20:36:53 #rustdoc <misdreavus> hell, this can be implemented as a plugin out-of-tree at first, lol
2018-06-21T20:37:03 #rustdoc <misdreavus> using our hella-broken plugin system
2018-06-21T20:37:09 #rustdoc <Manishearth> anyway, it's a while till we start seriously looking into this but worth thinking about now
2018-06-21T20:38:05 #rustdoc <misdreavus> yeah
2018-06-21T20:38:17 #rustdoc <misdreavus> this is giving me good ideas
2018-06-21T20:41:08 #rustdoc <Manishearth> sweet 
2018-06-21T20:42:38 #rustdoc <Manishearth> https://pontoon.mozilla.org/ is Pontoon if you want to check it out
2018-06-21T20:42:56 #rustdoc <Manishearth> the full integration is very cool but we may not need that for rustdoc for an initial pass
2018-06-21T20:43:06 #rustdoc <Manishearth> (the full integration lets tou translate docs inline)
2018-06-21T20:44:58 #rustdoc <misdreavus> nice
2018-06-21T21:15:20 #rustdoc <misdreavus> oh no, building a rustdoc plugin is impossible because we don't ship librustdoc in the sysroot any more
2018-06-21T21:18:00 #rustdoc <misdreavus> i have no idea how these are even useful any more, we haven't shipped librustdoc in the sysroot in ages
2018-06-21T21:19:39 #rustdoc <misdreavus> the only way to actually pull it off would be to hand-build a librustdoc rlib/dylib and make sure it matches the release of rustdoc you're using
2018-06-21T21:21:59 #rustdoc <misdreavus> ...and i'm tempted to do it just for laughs
2018-06-21T21:54:43 #rustdoc <misdreavus> that or copy/paste the struct definitions in clean/mod.rs into your project
2018-06-21T21:54:50 #rustdoc <misdreavus> again, praying that they don't diverge
2018-06-22T09:29:02 #rustdoc <imperio> WindowsBunny: yep, sorry
2018-06-22T09:29:23 #rustdoc <imperio> I need to force some lints to shutdown
2018-06-22T09:29:45 #rustdoc <imperio> when I have time I'll ;)
2018-06-22T18:48:50 #rustdoc <imperio> killercup: ping
2018-06-22T18:50:20 #rustdoc <imperio> killercup: just wanted to have a discussion about https://github.com/rust-lang/rust/pull/51482 :)
2018-06-22T22:45:20 #rustdoc <killercup> I just got home and I'm super tired; will pong in the morning :)
2018-06-23T15:18:28 #rustdoc <imperio> killercup: I saw on the discussion that I allowed myself to merge if no one had complains so I just merged. However, if you want me to update something on it, just ask :)
2018-06-23T15:19:06 #rustdoc <imperio> killercup: btw, did you receive the "surprise" that rust core team talked us about a few months ago? I really wanna see this t-shirt :)
2018-06-23T15:19:12 #rustdoc <imperio> misdreavus: ^
2018-06-23T15:19:50 #rustdoc <misdreavus> i haven't gotten anything
2018-06-23T15:19:51 #rustdoc <killercup> imperio: ah okay I'm fine with this as-is
2018-06-23T15:20:07 #rustdoc <killercup> Haven't gotten anything yet
2018-06-23T15:22:14 #rustdoc <imperio> oh sad
2018-06-23T15:22:23 #rustdoc <imperio> killercup: and you wanted a change about colors no?
2018-06-23T15:24:45 #rustdoc <killercup> imperio: what does it look like right now? But I'm not super concerned, I trust you've only made it better ;)
2018-06-23T15:26:29 #rustdoc * misdreavus . o O ( should we be encouraging him like that >_> )
2018-06-23T15:27:02 #rustdoc <imperio> misdreavus: :p
2018-06-23T15:27:10 #rustdoc <imperio> killercup: we'll have to wait for doc regeneration
2018-06-23T15:27:13 #rustdoc <misdreavus> haha <3
2018-06-25T17:19:53 #rustdoc <imperio> killercup: you can check by yourself now: https://doc.rust-lang.org/nightly/std/iter/trait.Iterator.html#method.fold
2018-06-25T17:45:24 #rustdoc <killercup> imperio: looks… good enough ;)
2018-06-25T17:45:49 #rustdoc <imperio> cool :)
2018-06-25T22:05:25 #rustdoc <misdreavus> imperio: i'm so so sorry about not getting to your PRs, i'm still super-focused on dayjob stuff and i'm usually out of energy after work ;_;
2018-06-25T22:06:09 #rustdoc <imperio> misdreavus: no problem, but you'll have a lot to review at once
2018-06-25T22:06:18 #rustdoc <imperio> so better take your time before you start it
2018-06-25T22:07:34 #rustdoc <misdreavus> yeah, i just got the ping for the latest one, which is what made me ping you
2018-06-25T22:07:57 #rustdoc <misdreavus> half apology, half warning that it'll probably have to wait
2018-06-25T22:20:39 #rustdoc <imperio> they wait for weeks for the old ones
2018-06-25T22:20:47 #rustdoc <imperio> I just can't wait for them to get merged
2018-06-25T22:20:51 #rustdoc <imperio> minification powaaaa
2018-06-25T22:22:32 #rustdoc <misdreavus> hehe
2018-06-25T22:26:20 #rustdoc <imperio> misdreavus: with my 2 minification PRs, docs will be so much lighter
2018-06-25T22:26:45 #rustdoc <misdreavus> have you been able to talk with onur about getting the bar back on docs.rs?
2018-06-25T22:26:55 #rustdoc <misdreavus> (speaking on minification)
2018-06-25T22:27:27 #rustdoc <imperio> I didn't talk with him since a week or two
2018-06-25T22:27:32 #rustdoc <misdreavus> alright
2018-06-25T22:27:34 #rustdoc <imperio> I'll ask him tomorrow if you want
2018-06-25T22:28:00 #rustdoc <misdreavus> it's an important issue
2018-06-25T22:28:02 #rustdoc <imperio> last time he was busy on updating architecture on docs.rs so I prefer not to bother him too much ^^'
2018-06-25T22:28:06 #rustdoc <misdreavus> ah
2018-06-25T22:28:29 #rustdoc <misdreavus> i've been trying to get a build environment set up on my desktop at home but apparently building rust things through vagrant doesn't quite work on a windows host
2018-06-25T22:29:19 #rustdoc <imperio> you bet XD
2018-06-25T22:29:38 #rustdoc <misdreavus> and when i tried to work around that, i ran into a different problem
2018-06-25T22:29:56 #rustdoc <imperio> normally, it currently doesn't work if I'm up to date
2018-06-25T22:30:01 #rustdoc <misdreavus> add-essential-files said the files it was trying to copy weren't there
2018-06-25T22:30:09 #rustdoc <imperio> since I minified html to be exact
2018-06-25T22:30:13 #rustdoc <imperio> ah
2018-06-25T22:30:17 #rustdoc <imperio> then it's another issue
2018-06-25T22:30:23 #rustdoc <imperio> sorry, I never tried to build docs.rs
2018-06-25T22:30:28 #rustdoc <misdreavus> yeah, i'm still talking about my build environment
2018-06-25T22:30:30 #rustdoc <misdreavus> ah, lol
2018-06-25T22:30:44 #rustdoc <misdreavus> i wanted to try to implement default-target as a first PR
2018-06-25T22:30:48 #rustdoc <imperio> I just answer onur's questions and give him a hand when I can
2018-06-25T22:30:55 #rustdoc <imperio> oh nice
2018-06-25T22:31:04 #rustdoc <misdreavus> or try to put the top bar in statically, with --html-before-content and such
2018-06-25T22:32:57 #rustdoc <imperio> oh hold on
2018-06-25T22:33:05 #rustdoc <imperio> I recall fixing the top bar a while ago
2018-06-25T22:33:42 #rustdoc <imperio> maybe this whole issue is because of me...
2018-06-25T22:33:47 #rustdoc <imperio> :-/
2018-06-25T22:34:50 #rustdoc <misdreavus> >_>
2018-06-25T22:35:13 #rustdoc <misdreavus> all i know is that minifying the html by removing newlines meant he couldn't parse it by using .lines() any more
2018-06-27T20:22:52 #rustdoc <misdreavus> imperio: here's something odd {!gh onur/docs.rs 213}
2018-06-27T20:22:53 #rustdoc <rustbot> [Issue 213] <open> Settings not working <https://github.com/onur/docs.rs/issues/213>
2018-06-28T09:55:00 #rustdoc <imperio> misdreavus: problem is on docs.rs' treatment I think :)
2018-06-28T09:55:10 #rustdoc <imperio> (sounds like an HTML error)
2018-06-28T13:35:36 #rustdoc <misdreavus> huh
2018-06-28T14:42:22 #rustdoc <imperio> misdreavus: it's scraing me a bit: you realize I'll completely oppose to an externalization of search?
2018-06-28T14:42:33 #rustdoc <imperio> *scaring
2018-06-28T14:42:52 #rustdoc <misdreavus> i will only accept it if it's an optional flag that turns it on
2018-06-28T14:42:56 #rustdoc <misdreavus> optional/unstable
2018-06-28T14:43:02 #rustdoc <misdreavus> no flag, no change
2018-06-28T14:43:18 #rustdoc <imperio> the thing is that this server option will be outside of our "control"
2018-06-28T14:44:37 #rustdoc <misdreavus> we don't have to actually use this ourselves
2018-06-28T14:44:59 #rustdoc <misdreavus> it sounds like he wants it for his personal projects, and *maybe* for the std docs
2018-06-28T14:45:09 #rustdoc <misdreavus> but getting it on the std docs will require a core team decision
2018-06-28T14:45:27 #rustdoc <steveklabnik> yeah
2018-06-28T14:45:47 #rustdoc <misdreavus> i'll let the core team shoot it down, so i don't have to
2018-06-28T14:45:52 #rustdoc <imperio> well, I'm very against it
2018-06-28T14:45:58 #rustdoc <misdreavus> i enjoy playing with the idea of the external search provider
2018-06-28T14:46:03 #rustdoc <steveklabnik> i'm not really for it either
2018-06-28T14:46:08 #rustdoc <steveklabnik> i'm not against the option
2018-06-28T14:46:09 #rustdoc <imperio> it'll add infra and for not much gain
2018-06-28T14:46:21 #rustdoc <steveklabnik> offline use is too important imho
2018-06-28T14:46:26 #rustdoc <misdreavus> steveklabnik: i made the same point
2018-06-28T14:46:33 #rustdoc <imperio> we all did haha
2018-06-28T14:46:40 #rustdoc <misdreavus> he's really dead-set on writing the MVP for it though
2018-06-28T14:46:41 #rustdoc <steveklabnik> :)
2018-06-28T14:47:04 #rustdoc <misdreavus> i made my terms, which basically amounted to "make it opt-in"
2018-06-28T14:49:14 #rustdoc <misdreavus> it soudns like a thing that could, maybe, possibly, aid corporate integrations? he mentioned that doxygen has an option for something similar
2018-06-28T14:49:49 #rustdoc <misdreavus> anyway, i really need to get back to work >_>
2018-06-28T14:50:21 #rustdoc <imperio> and doxygen, as we all know, is very appreciated to generate docs (hope the irony is strong enough haha)
2018-06-28T14:50:36 #rustdoc <misdreavus> lol
2018-06-28T14:50:53 #rustdoc <steveklabnik> heh
2018-06-28T22:16:49 #rustdoc <imperio> misdreavus: another "big" (few lines but it touches everything) PR
2018-06-28T22:16:53 #rustdoc <imperio> :)
2018-06-28T22:17:08 #rustdoc <imperio> at some point, just tell me if I should assign someone else haha
2018-06-28T22:21:26 #rustdoc <misdreavus> imperio: ollie27 has review permissions now :P
2018-06-28T22:54:07 #rustdoc <WindowsBunny> misdreavus: Mostly I'm sad that https://github.com/rust-lang/rust/issues/51661 wasn't even caught by CI
2018-06-28T22:54:31 #rustdoc <WindowsBunny> Probably because we don't try to build docs for internal rust crates during CI...
2018-06-30T13:25:27 #rustdoc <imperio> WindowsBunny: sorry about it :)
2018-06-30T13:25:36 #rustdoc <imperio> (since I'm the one who implemented this...)
2018-06-30T13:25:57 #rustdoc <imperio> misdreavus: I just thought: wouldn't it be nice to have autocompletion when doing search? :)
2018-06-30T13:30:28 #rustdoc <WindowsBunny> imperio: Isn't the search itself the autocompletion though?
2018-06-30T13:30:40 #rustdoc <imperio> yes and no
2018-06-30T13:31:03 #rustdoc <imperio> I'm getting tired of all people asking for a "goto results"/"I'm lucky" button
2018-06-30T13:31:10 #rustdoc <imperio> like that I'll finally get peace
2018-06-30T13:31:31 #rustdoc <imperio> but it needs to be discussed first
2018-07-02T13:10:18 #rustdoc <misdreavus> imperio: "autocompletion when doing search" not totally sure what this means, tbh
2018-07-02T13:11:15 #rustdoc <imperio> just an idea growing in my mind
2018-07-02T13:11:27 #rustdoc <imperio> I'll write it quickly and host it somewhere so you can see
2018-07-03T15:47:39 #rustdoc <misdreavus> imperio: i'm starting to come up for air; of all your PRs currently assigned to me, what should i look at first?
2018-07-03T15:48:08 #rustdoc <imperio> the one reducing search-index
2018-07-03T15:51:42 #rustdoc <misdreavus> cool
2018-07-03T15:52:23 #rustdoc <imperio> then https://github.com/rust-lang/rust/pull/51732
2018-07-03T15:52:39 #rustdoc <imperio> oh this one is a small fix: https://github.com/rust-lang/rust/pull/51793
2018-07-03T15:52:44 #rustdoc <imperio> (one line diff)
2018-07-03T15:53:16 #rustdoc <imperio> and this one is big in itself: https://github.com/rust-lang/rust/pull/51885
2018-07-03T15:53:56 #rustdoc <misdreavus> so, tomorrow i'm driving home for a long-weekend vacation
2018-07-03T15:54:07 #rustdoc <misdreavus> i hope i get the opportunity to read some PRs while i'm there
2018-07-03T15:54:19 #rustdoc <imperio> well, you should try to rest first
2018-07-03T15:54:24 #rustdoc <imperio> then if you have time, sure
2018-07-05T14:49:53 #rustdoc <steveklabnik> copying from discord, i plan on sending in a PR to remove plugins today
2018-07-05T14:53:03 #rustdoc <imperio> steveklabnik: plugins?
2018-07-05T14:53:31 #rustdoc <steveklabnik> rustdoc plugins
2018-07-05T14:53:36 #rustdoc <steveklabnik> remember we deprecate them a long time ago?
2018-07-05T14:53:46 #rustdoc <imperio> absolutely not XD
2018-07-05T14:54:11 #rustdoc <imperio> I vaguely remember something about plugin but I thought we removed them a looooong time ago
2018-07-05T14:54:37 #rustdoc <steveklabnik> yeah, we didn't actually remove them
2018-07-05T14:54:40 #rustdoc <steveklabnik> so i'm gonna :)
2018-07-05T14:55:07 #rustdoc <imperio> good luck then haha
2018-07-05T15:32:14 #rustdoc <WindowsBunnyOne> death to plugins!
2018-07-05T15:32:25 #rustdoc <WindowsBunnyOne> if only we could get rid of rustc plugins...
2018-07-05T15:33:23 #rustdoc <imperio> WindowsBunnyOne: there are in rustc as well????
2018-07-05T15:33:27 #rustdoc <imperio> wait hold on
2018-07-05T15:33:33 #rustdoc <imperio> I'm stupid sometimes...
2018-07-05T15:33:39 #rustdoc <imperio> clippy and rustdoc are plugins
2018-07-05T15:34:04 #rustdoc <WindowsBunnyOne> gosh darn rustdoc
2018-07-05T15:34:20 #rustdoc <imperio> WindowsBunnyOne: your hate against rustdoc is making me sad
2018-07-05T15:34:52 #rustdoc <WindowsBunnyOne> imperio: hey, when rustdoc stops creating a hundred thousand files for winapi, then I'll be happy with rustdoc
2018-07-05T15:35:17 #rustdoc <imperio> that seems a bit complicated to do without having big files instead
2018-07-05T15:37:17 #rustdoc <misdreavus> tbh big files would be way better for winapi than 100,000 small files, but the problem is that if we provide it as an option, there's no way to actually fix excruciatingly long doc times on windows without just universally enabling it for "crates named winapi" because of how cargo handles rustdoc flags
2018-07-05T15:39:02 #rustdoc <imperio> cargo handles rustdoc flags normally
2018-07-05T15:39:08 #rustdoc <imperio> or did I miss something?
2018-07-05T15:39:38 #rustdoc <WindowsBunnyOne> misdreavus: just calculate number of items and switch automatically for crates over a certain number
2018-07-05T15:39:52 #rustdoc <misdreavus> i mean, if a crate has winapi as a dependency, and they run "cargo doc", there's no way for winapi to make sure to add that flag from its position inside the dep tree
2018-07-05T15:42:02 #rustdoc <WindowsBunnyOne> and honestly a special case for crates named winapi isn't a terrible idea
2018-07-05T15:42:44 #rustdoc <imperio> misdreavus: ah true
2018-07-05T15:42:59 #rustdoc <imperio> WindowsBunnyOne: there are certainly other crates with the same issue
2018-07-05T15:43:20 #rustdoc <imperio> so having to maintain such a list would be pretty terrible
2018-07-05T15:44:31 #rustdoc <misdreavus> having a criteria based on number of items may work out, and might not be too painful if we count it while they're being cleaned
2018-07-05T15:44:52 #rustdoc <misdreavus> the trick is then to lay out the page, and make sure the search index points to the right places
2018-07-05T15:45:02 #rustdoc <imperio> well, to be precise, the issue is actually very specific to windows
2018-07-05T15:45:14 #rustdoc <misdreavus> right
2018-07-05T15:45:19 #rustdoc <imperio> generating winapi crate with cross-compilation from linux doesn't take that much time
2018-07-05T15:45:59 #rustdoc <misdreavus> we have the compiler on hand, does that have a way to inspect the host environment? is there some macro we can use to ask about it?
2018-07-05T15:46:22 #rustdoc <misdreavus> having the feature turn on automatically also brings a stability question
2018-07-05T15:46:37 #rustdoc <imperio> I don't think this is a good idea either
2018-07-05T15:46:46 #rustdoc <misdreavus> we don't guarantee the html output, but it could still be surprising
2018-07-05T15:46:55 #rustdoc <imperio> I assume that in a few years, new super fast hard drive will arrive on the market
2018-07-05T15:47:20 #rustdoc <misdreavus> imo that's not good enough
2018-07-05T15:47:34 #rustdoc <imperio> true
2018-07-05T15:47:35 #rustdoc <misdreavus> the problem is not write speed, it's NTFS and virus scanning
2018-07-05T15:47:52 #rustdoc <imperio> damn, everytime I try to make peace with windows, a new annoying stuff appears
2018-07-05T15:47:58 #rustdoc <misdreavus> :P
2018-07-05T17:42:00 #rustdoc <misdreavus> imperio: looking at the search-index PR right now; does creating those constants help the minifer, i guess?
2018-07-05T17:47:56 #rustdoc <imperio> yep
2018-07-05T17:50:23 #rustdoc <misdreavus> i really want to read through the minifier crate source some before leaning on it more >_>
2018-07-05T17:50:30 #rustdoc <misdreavus> i have the repo open rn
2018-07-05T17:54:22 #rustdoc <misdreavus> imperio: r+'d
2018-07-05T17:54:41 #rustdoc <imperio> thanks!
2018-07-05T17:54:51 #rustdoc <misdreavus> gonna poke at the rest now
2018-07-05T17:55:16 #rustdoc <imperio> misdreavus: the minifier crate is mostly about parsers
2018-07-05T17:55:48 #rustdoc <misdreavus> yeah, a quick look at the js module looked pretty straightforward
2018-07-05T17:56:12 #rustdoc <imperio> yep
2018-07-05T17:56:23 #rustdoc <imperio> the next step is to build the ast from the tokenizer
2018-07-05T17:56:32 #rustdoc <imperio> not complicated either but it'll require time
2018-07-05T17:57:01 #rustdoc <misdreavus> i'm just like, the crate is part of the PR as much as the code that uses it
2018-07-05T17:57:07 #rustdoc <imperio> then I'll be able to make the really nice optimizations
2018-07-05T17:57:11 #rustdoc <misdreavus> since it was written just for this, basically
2018-07-05T17:57:17 #rustdoc <imperio> true :)
2018-07-05T17:57:35 #rustdoc <imperio> right now it's not really useful on its own
2018-07-05T17:57:45 #rustdoc <misdreavus> still looking forward to seeing more gains
2018-07-05T17:57:54 #rustdoc <imperio> however, it might be super useful to add it on rust web frameowrks afterwards
2018-07-05T17:58:03 #rustdoc <misdreavus> oh yeah, that would be cool
2018-07-05T17:58:14 #rustdoc <imperio> I just need to build this ast
2018-07-05T17:58:22 #rustdoc <imperio> and then we can have awesome optimizations
2018-07-05T17:58:34 #rustdoc <imperio> the first one: reducing names (variables and functions)
2018-07-05T17:58:48 #rustdoc <imperio> then we can rewrite conditions to make them shorter
2018-07-05T17:59:16 #rustdoc <imperio> then if null or a string is used more than once, we can just make a constant
2018-07-05T17:59:20 #rustdoc <imperio> so much optimizations
2018-07-05T17:59:34 #rustdoc <imperio> with just the tokenizer, the gains were already quite big
2018-07-05T18:00:20 #rustdoc <misdreavus> yeha
2018-07-05T18:00:22 #rustdoc <misdreavus> **yeah
2018-07-05T18:00:54 #rustdoc <misdreavus> i'm slightly amused that you're going to be constructing a javascript AST
2018-07-05T18:01:02 #rustdoc <misdreavus> that probably sounds more intense than it really is
2018-07-05T18:01:34 #rustdoc <imperio> not complicated, just very long
2018-07-05T18:01:46 #rustdoc <misdreavus> makes sense
2018-07-05T18:01:50 #rustdoc <misdreavus> more tedious than anything else?
2018-07-05T18:01:57 #rustdoc <imperio> no
2018-07-05T18:02:05 #rustdoc <imperio> once I tried to write a c++ parser
2018-07-05T18:02:08 #rustdoc <imperio> never again
2018-07-05T18:02:22 #rustdoc <imperio> that language has a really shitty syntax
2018-07-05T18:02:24 #rustdoc <misdreavus> i mean, writing the JS parser is just tedious
2018-07-05T18:02:56 #rustdoc <misdreavus> not functionally complicated, or difficult, or whatever
2018-07-05T18:03:21 #rustdoc <imperio> ah yes
2018-07-05T18:03:22 #rustdoc <misdreavus> the phrase "more X than anything else" means that "X" is the best descriptor for it
2018-07-05T18:03:23 #rustdoc <imperio> indeed :)
2018-07-05T18:03:31 #rustdoc <imperio> til haha
2018-07-05T18:03:49 #rustdoc <misdreavus> rather than "the most X of anything of its kind"
2018-07-05T18:04:31 #rustdoc <misdreavus> i use weird english, lol
2018-07-05T18:04:33 #rustdoc <misdreavus> ¯\_(ツ)_/¯
2018-07-05T18:05:00 #rustdoc <imperio> :p
2018-07-05T18:11:35 #rustdoc <misdreavus> imperio: left a comment on the command-line lints PR
2018-07-05T18:11:56 #rustdoc <imperio> misdreavus: will take a look after my dinner then
2018-07-05T18:12:02 #rustdoc <misdreavus> (^^)b
2018-07-05T18:12:03 #rustdoc <imperio> but it's awesome that you finally got time hehe
2018-07-05T18:12:28 #rustdoc <misdreavus> lol yeah, like i said, i'm on vacation and everyone else is doing their own thing right now
2018-07-05T18:13:26 #rustdoc <misdreavus> so i have spare coding energy and the opportunity to use it, lol
2018-07-05T18:14:17 #rustdoc <imperio> don't forget to rest and enjoy your holidays too!
2018-07-05T18:15:02 #rustdoc <misdreavus> this is my rest, lol
2018-07-05T18:15:44 #rustdoc <misdreavus> otherwise i'll be putting in dozens of hours into bloons tower defense or pokemon or something
2018-07-05T18:48:46 #rustdoc <misdreavus> imperio: and a comment on the trait impl docs PR
2018-07-05T19:01:48 #rustdoc <imperio> ended my dinner
2018-07-05T19:01:53 #rustdoc <imperio> time to look at those comments
2018-07-05T19:04:18 #rustdoc <misdreavus> oh dear, i totally forgot about {!gh 51162}
2018-07-05T19:04:18 #rustdoc <rustbot> [Issue 51162] <open> Doctests doesn't print the assert failure output <https://github.com/rust-lang/rust/issues/51162>
2018-07-05T19:08:30 #rustdoc <imperio> misdreavus: updated https://github.com/rust-lang/rust/pull/51732
2018-07-05T19:09:06 #rustdoc <imperio> misdreavus: and to answer your first comment on it more completely: it seems that drivers have a cap-lint which defaults to "allow"
2018-07-05T19:09:17 #rustdoc <imperio> you need to set it at forbid level to get the expected result
2018-07-05T19:10:18 #rustdoc <misdreavus> huh, weird
2018-07-05T19:10:26 #rustdoc <misdreavus> didn't realize it was unwrapped before then
2018-07-05T19:11:41 #rustdoc <imperio> tadam haha
2018-07-05T20:27:03 #rustdoc <misdreavus> imperio: damn, nougat.world is taken
2018-07-05T20:27:16 #rustdoc <misdreavus> (re: {!gh 51861})
2018-07-05T20:27:16 #rustdoc <rustbot> [PR 51861] <open> Prevent some markdown transformation on short docblocks <https://github.com/rust-lang/rust/pull/51861>
2018-07-05T20:29:24 #rustdoc <imperio> misdreavus: what about it?
2018-07-05T20:29:37 #rustdoc <misdreavus> i just thought it was a silly domain name
2018-07-05T20:32:06 #rustdoc <imperio> no I meant the pr haha
2018-07-05T20:34:16 #rustdoc <misdreavus> oh, i was just noting where the comment came from
2018-07-05T20:41:15 #rustdoc <misdreavus> yay, that's all my notification emails
2018-07-06T20:01:44 #rustdoc <steveklabnik> so https://blog.rust-lang.org/2018/07/06/security-advisory-for-rustdoc.html
2018-07-06T20:01:50 #rustdoc <steveklabnik> this is why we're removing plugins now ;)
2018-07-06T20:02:00 #rustdoc <steveklabnik> i have a PR locally but i want the CVE number assigned so i can put it in the commit message
2018-07-06T20:21:35 #rustdoc <alercah> :D
2018-07-09T23:31:34 #rustdoc <alercah> fun issue from #rust-beginners
2018-07-09T23:31:58 #rustdoc <alercah> the new intradoc links warning can cause backwards-compatibility issues generating docs when deny(warnings) is enabled
2018-07-09T23:32:06 #rustdoc <alercah> including in dependencies
2018-07-09T23:32:14 #rustdoc <alercah> strings-0.1.0 has this problem
2018-07-09T23:32:24 #rustdoc <alercah> is this expected behaviour?
2018-07-09T23:36:41 #rustdoc <misdreavus> not expected, but known issue
2018-07-09T23:36:47 #rustdoc <misdreavus> rather, not desired
2018-07-09T23:37:37 #rustdoc <misdreavus> i'm hoping the combination of {!gh 51684} and the new cap-lints functionality can help some
2018-07-09T23:37:37 #rustdoc <rustbot> [Issue 51684] <open> rustdoc: only show `intra_doc_link_resolution_failure` lints for items being documented <https://github.com/rust-lang/rust/issues/51684>
2018-07-09T23:37:52 #rustdoc <misdreavus> we'll need cargo's help to utilize cap-lints tho
2018-07-13T19:37:32 #rustdoc <imperio> misdreavus: how do you know if an item's documentation will be visible or not?
2018-07-13T19:37:47 #rustdoc <imperio> is there a method to determine it?
2018-07-13T19:37:55 #rustdoc <misdreavus> depends on where you're looking from
2018-07-13T19:38:17 #rustdoc <imperio> hir level
2018-07-13T19:38:43 #rustdoc <misdreavus> i'd look at what the passes do that strip out items
2018-07-13T19:39:52 #rustdoc <imperio> ok
2018-07-13T19:40:22 #rustdoc <misdreavus> hrm, we may need to move those passes earlier so we can run them before resolving links :/
2018-07-13T19:41:27 #rustdoc <imperio> that's part of my issue
2018-07-13T19:41:41 #rustdoc <imperio> I just don't have enough time to check how to do it
2018-07-13T19:41:55 #rustdoc <imperio> but I suppose checking visibility would be a first step
2018-07-13T19:41:57 #rustdoc <imperio> an easy one
2018-07-13T19:42:54 #rustdoc <misdreavus> okay so plan, (1) get steve's refactor landed, (2) move when we run passes so they run in the compiler context, (3) turn link resolution nito a pass
2018-07-13T19:43:48 #rustdoc <misdreavus> that's probably too much change
2018-07-13T19:45:32 #rustdoc <imperio> hum...
2018-07-13T19:45:48 #rustdoc <imperio> I'm pretty sure it's *easy* to do, just like auto-trait impls
2018-07-13T19:45:57 #rustdoc <imperio> but none of us has time to implement it
2018-07-13T19:46:00 #rustdoc <imperio> it's quite bothersome
2018-07-13T19:46:45 #rustdoc <misdreavus> alternate implementation: don't fire the lint until markdown rendering time
2018-07-13T19:47:18 #rustdoc <misdreavus> we already keep a map of link anchors to their respective target, right?
2018-07-13T19:47:23 #rustdoc <imperio> sounds more like a patchwork...
2018-07-13T19:48:00 #rustdoc <misdreavus> i mean, that would make it more what people expect - the links that get complaints are the ones that would actually show up on the page
2018-07-13T19:48:21 #rustdoc <misdreavus> dunno if we'll be able to render the spans there, though
2018-07-13T19:48:41 #rustdoc <imperio> well, we can try to keep contexts and stuff
2018-07-13T19:48:48 #rustdoc <imperio> but again, not sure it's the correct fix...
2018-07-13T19:48:54 #rustdoc <misdreavus> how so?
2018-07-13T19:49:31 #rustdoc <imperio> the pass solution seems like the correct one
2018-07-13T19:49:34 #rustdoc <imperio> but again, not sure
2018-07-13T19:49:46 #rustdoc <imperio> I could give a try to the markdown rendering one first
2018-07-13T19:50:44 #rustdoc <misdreavus> to show the spans at markdown rendering time, we'll need a way to keep the CodeMap after the compiler context ends
2018-07-13T19:50:48 #rustdoc <imperio> yes, I think it can be done *easily*
2018-07-13T19:51:00 #rustdoc <imperio> "easily"
2018-07-13T19:51:01 #rustdoc <misdreavus> i dunno if that has any lifetime struggles tho
2018-07-13T19:51:03 #rustdoc <imperio> """easily"""
2018-07-13T19:51:06 #rustdoc <misdreavus> heh
2018-07-13T19:51:55 #rustdoc <imperio> do we still have the doccontext at the markdown rendering point?
2018-07-13T19:52:07 #rustdoc <misdreavus> no
2018-07-13T19:52:15 #rustdoc <misdreavus> just RenderInfo
2018-07-13T19:52:31 #rustdoc <imperio> sad life
2018-07-13T19:52:43 #rustdoc <imperio> but I'm thinking: it wouldn't help us
2018-07-13T19:52:48 #rustdoc <imperio> we render dependencies as well
2018-07-13T19:52:52 #rustdoc <misdreavus> doccontext has a reference to the tyctxt and resolver, those are totally gone by render time
2018-07-13T19:53:45 #rustdoc <misdreavus> i don't think i see your concern
2018-07-13T19:53:52 #rustdoc <misdreavus> s/see/understand
2018-07-13T19:58:23 #rustdoc <imperio> the main problem is that you have doc warnings coming from dependencies, right?
2018-07-13T19:59:18 #rustdoc <misdreavus> because their docs are being scanned before they've been stripped
2018-07-13T19:59:59 #rustdoc <imperio> yes but when we generate a crate's docs, we also generate its dependencies' docs
2018-07-13T20:00:15 #rustdoc <imperio> so if the doc is public, we'll have the warnings in any case
2018-07-13T20:00:33 #rustdoc <misdreavus> yes, but only when rendering *that crate*
2018-07-13T20:00:48 #rustdoc <misdreavus> right now it's also showing if that item is imported into a *downstream* crate, even if it's not exported
2018-07-13T20:01:34 #rustdoc <misdreavus> we'll also need to get cargo to cap lints when rendering dependencies
2018-07-13T20:01:58 #rustdoc <imperio> that one shouldn't be too difficult
2018-07-13T20:02:15 #rustdoc <misdreavus> the biggest problem is that the lint CLI args are marked unstable
2018-07-13T20:02:36 #rustdoc <misdreavus> cargo probably won't use them until they're marked stable
2018-07-13T20:02:47 #rustdoc <misdreavus> anyway
2018-07-13T20:03:27 #rustdoc <misdreavus> the reason i'm harping on the lint firing on non-public items is because it kept firing on the cfg_if! macro, even though it was never re-exported
2018-07-13T20:52:47 #rustdoc <misdreavus> !gh 52354
2018-07-13T20:52:47 #rustdoc <rustbot> [PR 52354] <open> stabilize lint handling in rustdoc <https://github.com/rust-lang/rust/pull/52354>
2018-07-13T21:08:15 #rustdoc <imperio> misdreavus: I had this one in mind as well
2018-07-13T21:08:24 #rustdoc <imperio> but I'm working on implemented "Self"
2018-07-13T21:08:35 #rustdoc <imperio> *implementing
2018-07-13T21:08:38 #rustdoc <misdreavus> nice
2018-07-13T21:08:45 #rustdoc <misdreavus> i'm glad you've been adding things to this feature
2018-07-13T21:08:54 #rustdoc <imperio> I'm taking a different approach this time
2018-07-13T21:09:09 #rustdoc <imperio> well, the goal is to make our like simpler
2018-07-13T21:09:28 #rustdoc <imperio> the more complete it is, the most likely people will use it
2018-07-13T21:10:09 #rustdoc <misdreavus> right
2018-07-13T21:10:27 #rustdoc <imperio> but the remaining issues are the most complicated ones
2018-07-13T21:10:40 #rustdoc <imperio> and I'd really like if we finally solved the auto-trait impls
2018-07-13T21:10:55 #rustdoc <imperio> with olli_obk or eddyb help, we might be able to do it
2018-07-13T21:12:19 #rustdoc <misdreavus> wait, what was wrong with the auto-trait impls this time? >_>
2018-07-13T21:12:48 #rustdoc <imperio> nothing except we don't have it for all traits
2018-07-13T21:12:52 #rustdoc <imperio> for just one
2018-07-13T21:13:05 #rustdoc <imperio> that's way too limited
2018-07-13T21:14:21 #rustdoc <misdreavus> wait, do you mean that it's restricted to Send/Sync? iirc that was deliberate
2018-07-13T21:14:36 #rustdoc <misdreavus> ohhhhhhhh, wait now i get it
2018-07-13T21:14:45 #rustdoc <misdreavus> the ToString problem
2018-07-13T21:15:13 #rustdoc <imperio> ah?
2018-07-13T21:16:38 #rustdoc <misdreavus> when you say "auto-trait impls", do you mean OIBITs or traits implemented generically for anything that implements a different trait?
2018-07-13T21:17:19 #rustdoc <imperio> the second
2018-07-13T21:17:35 #rustdoc <misdreavus> okay, that's what i call the ToString problem, after the ToString trait never appearing in documentation
2018-07-13T21:17:45 #rustdoc <misdreavus> outside of its own page, i mean
2018-07-13T21:18:18 #rustdoc <misdreavus> i got confused because OIBITS are called "auto traits" now so i was thinking of the synthetic impls stuff
2018-07-13T21:18:25 #rustdoc <imperio> yep but it should appear in our hierarchy
2018-07-13T21:19:03 #rustdoc <imperio> we should check if a trait has a generic implementation
2018-07-13T21:19:08 #rustdoc <imperio> and if so, checking it for all types
2018-07-13T21:21:02 #rustdoc <misdreavus> right, we had this conversation a while ago, and eddyb pointed out a specific compiler query we could adapt to do something we need, and i totally forgot what it was
2018-07-13T21:21:42 #rustdoc <imperio> me too ><
2018-07-13T21:21:57 #rustdoc <imperio> but we should really fix this issue once and for all
2018-07-13T21:22:02 #rustdoc <imperio> it's been there for too long
2018-07-13T21:22:14 #rustdoc <misdreavus> yeah >_>
2018-07-13T21:22:35 #rustdoc <imperio> eddyb: do you remember what compiler query you were talking about? ^
2018-07-13T23:02:46 #rustdoc <eddyb> imperio, misdreavus: look at TraitDef or something
2018-07-13T23:02:52 #rustdoc <eddyb> it's in there
2018-07-13T23:02:59 #rustdoc <imperio> eddyb: thanks!
2018-07-14T17:13:45 #rustdoc <imperio> Manishearth: how do you rustc_internals docs btw? I'd be very interested in doing so (the docs you're hosting are outdated)
2018-07-14T17:40:58 #rustdoc <Manishearth> imperio: uh theyve been officially hosted for months
2018-07-14T17:41:04 #rustdoc <Manishearth> thats why i dont update mine
2018-07-14T17:41:12 #rustdoc <imperio> Manishearth: for real?!
2018-07-14T17:41:17 #rustdoc <imperio> where can I find it please? :)
2018-07-14T17:43:08 #rustdoc <Manishearth> https://doc.rust-lang.org/nightly/nightly-rustc/rustc/?search=foo
2018-07-14T17:44:43 #rustdoc <imperio> thanks!
2018-07-15T00:41:40 #rustdoc <simulacrum> imperio: We actually publish those (though I can't find them on doc.r-l.o); https://s3-us-west-1.amazonaws.com/static-rust-lang-org/doc/nightly/nightly-rustc/rustc/index.html
2018-07-15T00:50:25 #rustdoc <simulacrum> hm, looks like there's just no index page but https://doc.rust-lang.org/nightly/nightly-rustc/rustc/index.html works fine
2018-07-15T00:52:57 #rustdoc <simulacrum> Perhaps Manishearth can take down their rustc_internals docs and put up a generic "go here instead"?
2018-07-15T06:02:10 #rustdoc <Manishearth> simulacrum: that has been the plan im just lazy :)
2018-07-17T19:40:13 #rustdoc <imperio> misdreavus: well, discord doesn't seem to be working so news in here!
2018-07-17T19:40:25 #rustdoc <imperio> I have the trait but I don't know why I can't display it
2018-07-17T19:40:28 #rustdoc <imperio> a bit annoying
2018-07-17T19:40:29 #rustdoc <misdreavus> yeah it's down
2018-07-17T19:40:43 #rustdoc <misdreavus> what happens when you try to display it?
2018-07-17T19:40:48 #rustdoc <imperio> nothing
2018-07-17T19:41:09 #rustdoc <imperio> I have it in the list, but it doesn't get rendered for some reason
2018-07-17T19:41:11 #rustdoc <imperio> very strange
2018-07-17T19:41:19 #rustdoc <misdreavus> weird
2018-07-17T19:41:29 #rustdoc <imperio> yep
2018-07-17T19:48:41 #rustdoc <misdreavus> does it get overlooked somehow?
2018-07-17T19:52:14 #rustdoc <imperio> I don't know at all
2018-07-17T19:52:24 #rustdoc <imperio> I don't know where we go after the clean impl for struct
2018-07-17T19:52:31 #rustdoc <imperio> I don't know where is the upper level :)
2018-07-17T19:54:40 #rustdoc <misdreavus> either the clean impl for modules, or the clean impl for RustdocVisitor, i.e. the whole crate
2018-07-17T19:54:52 #rustdoc <misdreavus> that's where that's likely to be called
2018-07-17T19:55:03 #rustdoc <misdreavus> (or somewhere in clean::inline, but yeah)
2018-07-17T19:57:16 #rustdoc <imperio> ah cool
2018-07-17T19:57:23 #rustdoc <imperio> I'll check there then! :)
2018-07-17T20:02:54 #rustdoc <misdreavus> it's also worth checking where struct pages are rendered, to see whether they filter impls even more
2018-07-17T20:03:23 #rustdoc <misdreavus> render_assoc_items may have a thing
2018-07-17T20:33:06 #rustdoc <imperio> haha
2018-07-17T20:33:10 #rustdoc <imperio> I get very funny results
2018-07-17T20:33:22 #rustdoc <imperio> but still not the traits I want
2018-07-17T20:33:31 #rustdoc <imperio> still on it but that's so damn funny XD
2018-07-17T21:05:45 #rustdoc <imperio> misdreavus: all good
2018-07-17T21:05:59 #rustdoc <imperio> I'm proud of myself now :D
2018-07-17T21:06:06 #rustdoc <misdreavus> :o
2018-07-17T21:06:13 #rustdoc <misdreavus> you mean it's working now?
2018-07-17T21:06:23 #rustdoc <imperio> yep
2018-07-17T21:06:26 #rustdoc <misdreavus> \o/
2018-07-17T21:06:32 #rustdoc <misdreavus> (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧
2018-07-17T21:06:32 #rustdoc <imperio> I need to make some code rework but it's working
2018-07-17T21:08:02 #rustdoc <imperio> which type in std is supposed to have tostring implemented btw?
2018-07-17T21:08:17 #rustdoc <misdreavus> anything with Display - usize should work
2018-07-17T21:08:40 #rustdoc <imperio> huuuum
2018-07-17T21:08:49 #rustdoc <imperio> it's working on my own crates but not on st
2018-07-17T21:08:51 #rustdoc <imperio> *std
2018-07-17T21:08:54 #rustdoc <imperio> that's funny
2018-07-17T21:09:10 #rustdoc <imperio> and it doesn't work for primitive for the moment :)
2018-07-17T21:09:23 #rustdoc <misdreavus> if you want something a little more complicated, Arc also has a conditional Display
2018-07-17T21:10:20 #rustdoc <misdreavus> which makes me wonder if we should extend this with synthetic impls like for auto traits
2018-07-17T21:10:26 #rustdoc <misdreavus> bring it full circle, lol
2018-07-17T21:10:58 #rustdoc <imperio> well, I have Any, FromBits, ToString, Borrow, BorrowMut, TryFrom, Into, TryInto, IntoBits
2018-07-17T21:11:14 #rustdoc <imperio> for a type implementing debug and display
2018-07-17T21:11:50 #rustdoc <misdreavus> oh snap, i wonder if we have to deal with specialization
2018-07-17T21:12:17 #rustdoc <misdreavus> do str/String have multiple ToString implementations shown?
2018-07-17T21:15:05 #rustdoc <imperio> it's very likely
2018-07-17T21:15:11 #rustdoc <imperio> but I handled it in my own way
2018-07-17T21:15:19 #rustdoc <imperio> only one implementation is shown
2018-07-17T21:33:43 #rustdoc <imperio> misdreavus: I pushed to my branch generic-impls if you want to give it a try
2018-07-17T21:33:56 #rustdoc <misdreavus> ooh
2018-07-17T21:34:18 #rustdoc <misdreavus> i mean, if you think it's ready i guess
2018-07-17T21:34:28 #rustdoc <misdreavus> the main thing i would do is render std docs and look at them
2018-07-17T21:47:28 #rustdoc <imperio> yes, that's the current issue: apparently it doesn't work on them
2018-07-17T21:47:43 #rustdoc <imperio> I see no generic impl on them
2018-07-17T21:47:45 #rustdoc <imperio> makes me sad
2018-07-17T22:02:10 #rustdoc <misdreavus> hrm
2018-07-17T22:09:59 #rustdoc <imperio> I think we're currently not looking for local crate
2018-07-17T22:10:05 #rustdoc <imperio> which might explain the why
2018-07-17T22:12:20 #rustdoc <imperio> but I don't understand why
2018-07-17T22:12:26 #rustdoc <imperio> I'll need to ask eddyb tomorrow
2018-07-17T22:39:41 #rustdoc <imperio> misdreavus: I got a leat: I need the generics
2018-07-17T22:39:44 #rustdoc <imperio> *lead
2018-07-17T22:39:52 #rustdoc <imperio> but I'll ask eddyb anyway :)
2018-07-17T22:39:59 #rustdoc <imperio> going to sleep now
2018-07-17T22:40:04 #rustdoc <misdreavus> sleep well!
2018-07-18T02:44:49 #rustdoc <eddyb> whynot just send me a link to the code?!
2018-08-02T15:03:15 #rustdoc <MoSal> https://play.rust-lang.org/?gist=b1e2238410f753c9a711d1456d7d9d24&version=stable&mode=debug&edition=2015
2018-08-02T15:03:46 #rustdoc <MoSal> intra doc link resolution fails because #doc is parsed before expansion.
2018-08-02T15:04:31 #rustdoc <MoSal> Shouldn't there be at least an option to read #[doc] after expansion?
2018-08-02T15:06:30 #rustdoc <MoSal> On an unrelated note:
2018-08-02T15:06:48 #rustdoc <MoSal> When impl Trait is used in argument position, rustdoc insists on using a line per argument format, even if one line fits just fine. Why is that?
2018-08-02T15:20:26 #rustdoc <misdreavus> macro expansion happens well before rustdoc gets its hand on anything
2018-08-02T15:20:47 #rustdoc <misdreavus> the spans may not work out, but the items are all treated as post-expansion
2018-08-02T15:21:17 #rustdoc <misdreavus> so, that's a bug to fix if that link isn't resolving, not something i'd consider an option for
2018-08-02T15:30:23 #rustdoc <MoSal> misdreavus: cool. will report.
2018-08-02T15:51:23 #rustdoc <MoSal> misdreavus: I just discovered that it fails, even without macros or concat!
2018-08-02T15:51:26 #rustdoc <MoSal> misdreavus: https://play.rust-lang.org/?gist=3a5143f6063974551463b1631e8b55e1&version=stable&mode=debug&edition=2015
2018-08-02T15:51:40 #rustdoc <MoSal> Am I doing something wrong?
2018-08-02T15:52:11 #rustdoc <misdreavus> oh! i think it doesn't resolve method names if they're associated methods like that
2018-08-02T15:52:23 #rustdoc <misdreavus> you need `Bar::add_1` or `Self::add_1`
2018-08-02T15:52:45 #rustdoc <misdreavus> treat intra-doc-links as if they were being written into a `use` statement
2018-08-02T15:53:04 #rustdoc <misdreavus> or a function signature
2018-08-02T15:53:16 #rustdoc <misdreavus> (as a type name, i mean)
2018-08-02T15:54:04 #rustdoc <MoSal> misdreavus: Self does not work. Bar does. thanks.
2018-08-02T15:54:18 #rustdoc <misdreavus> (^^)b
2018-08-11T17:28:26 #rustdoc <bdax> is it possible to document a trait's methods and have all impls of that trait inherit that documentation?
2018-08-11T18:32:23 #rustdoc <misdreavus> that already kinda happens
2018-08-11T18:32:52 #rustdoc <misdreavus> if an implementation doesn't apply docs of its own, it shows the first line of the trait's docs for each item, and a "Read more" link that goes to the trait's docs
2018-08-11T18:35:21 #rustdoc <bdax> oh yeah, not sure what i was doing wrong, but it's showing now. thanks misdreavus 
2018-08-11T18:35:28 #rustdoc <misdreavus> no problem! (^^)b
2018-08-17T14:32:33 #rustdoc <MoSal> If I re-export other_crate::Foo from my_crate. And I want to add a reminder: [`Foo`] is a re-export of [`other_crate::Foo`].
2018-08-17T14:33:08 #rustdoc <MoSal> [`other_crate::Foo`] links to my_crate::Foo. How do make it actually link to other_crate::Foo ?
2018-08-17T14:55:51 #rustdoc <imperio> it is done by default in the docs
2018-08-31T14:16:10 #rustdoc <viny> maybe anyone is willing and has the time to do some mentoring on `macro_railroad` towards rustdoc? There is a thread on internals
2018-08-31T14:24:48 #rustdoc <imperio> viny: ?
2018-08-31T14:25:16 #rustdoc <misdreavus> imperio: https://internals.rust-lang.org/t/show-rust-a-syntax-diagram-generator-for-macro-rules-syntax/8183
2018-08-31T14:25:45 #rustdoc <imperio> oh right
2018-08-31T14:26:06 #rustdoc <imperio> I'd prefer it to be external from rustdoc rendering (like play rust)
2018-08-31T14:26:22 #rustdoc <imperio> but we can generate links for such an external platform
2018-08-31T14:27:31 #rustdoc <misdreavus> i'm indifferent toward actually including it, i'm just concerned about how it's actually going to be implemented
2018-08-31T14:27:57 #rustdoc <imperio> for now I'm trying to reduce doc size
2018-08-31T14:28:10 #rustdoc <imperio> I need time to make it better
2018-08-31T14:28:16 #rustdoc <imperio> especially on html
2018-08-31T14:38:02 #rustdoc <viny> the problem with generating links is that the generator needs the macro's source to work on; or it would have to generate everything that one *might* want to use
2018-08-31T14:38:21 #rustdoc <viny> you could POST that
2018-08-31T14:44:32 #rustdoc <viny> anyways, I'd be nice if someone from actual rustdoc would comment on internals what one would expect from the crate itself to be even considered - right now noone is working towards anything
2018-08-31T15:20:39 #rustdoc <misdreavus> i'll write a comment on the internals thread
2018-08-31T15:23:19 #rustdoc <imperio> viny: that's the idea
2018-08-31T16:17:35 #rustdoc <misdreavus> i don't think adding something to macro pages will significantly impact doc size - how many macros do people export for their docs?
2018-08-31T17:46:20 #rustdoc <imperio> misdreavus: nom is a good example
2018-08-31T17:46:24 #rustdoc <imperio> but basically, a lot of crates
2018-09-19T01:45:31 #rustdoc <Deedasmi> q
2018-09-19T01:45:49 #rustdoc <Deedasmi> ... Ignore that. This isn't vim.
2018-09-26T08:54:00 #rustdoc <sheliak> Hi. I have a question that is related with rustdoc but not quite sure where to bring it up so here I am. I've noticed that in https://www.rust-lang.org/en-US/contribute-tools.html it is mentioned the label A-rustdoc but when I follow the link there are no open/closed PRs/issues with that label. There are plenty with the T-rustdoc label though. Is this a typo?
2018-09-26T08:54:16 #rustdoc <sheliak> (and if it is a typo, can I just fork and put in a PR to fix that?)
2018-09-26T13:52:49 #rustdoc <misdreavus> crap, they're gone
2018-09-26T13:53:34 #rustdoc <misdreavus> yes, the A-rustdoc is wrong, though it *was* right at the time that was written - i changed it to T-rustdoc a while back once rustdoc got its own team
2018-09-26T14:37:40 #rustdoc <sheliak> Thanks for the quick reply!
2018-09-26T14:38:11 #rustdoc <sheliak> In the meantime I ended up putting in a PR to fix it: https://github.com/rust-lang/rust-www/pull/1201
2018-09-26T14:41:20 #rustdoc <misdreavus> thanks! good find!
2018-09-26T14:41:26 #rustdoc <misdreavus> i didn't even realize that page existed, lol
2018-11-01T22:17:21 #rustdoc <misdreavus> ollie27: did you get an email about the rust all-hands? i dunno if you got onto the "all" mailing list
2019-03-05T14:39:04 #rustdoc <Manishearth> OAOB
2019-03-05T14:39:09 #rustdoc <Manishearth> OAOB
